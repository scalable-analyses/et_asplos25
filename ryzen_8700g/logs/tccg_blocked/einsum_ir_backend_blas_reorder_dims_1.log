parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140017
  time (eval):    0.043639
  gflops (eval):  116.596
  gflops (total): 112.971
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00140017,0.043639,116.596,112.971

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128811
  gflops (total): 39.5005
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0430329
  gflops (eval):  118.238
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0430329,118.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.6334
  maximum absolute entry in einsum_ir solution: 47.6334
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00136831
  time (eval):    0.0428245
  gflops (eval):  118.813
  gflops (total): 115.135
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00136831,0.0428245,118.813,115.135

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129579
  gflops (total): 39.2665
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2665

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435934
  gflops (eval):  116.718
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435934,116.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.308
  maximum absolute entry in einsum_ir solution: 43.308
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137495
  time (eval):    0.0438535
  gflops (eval):  116.025
  gflops (total): 112.498
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137495,0.0438535,116.025,112.498

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127466
  gflops (total): 39.9173
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436891
  gflops (eval):  116.462
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436891,116.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8683
  maximum absolute entry in einsum_ir solution: 34.8683
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138773
  time (eval):    0.0429424
  gflops (eval):  118.487
  gflops (total): 114.778
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138773,0.0429424,118.487,114.778

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12877
  gflops (total): 39.5132
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438322
  gflops (eval):  116.082
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438322,116.082,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1598
  maximum absolute entry in einsum_ir solution: 36.1598
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139723
  time (eval):    0.0431845
  gflops (eval):  117.823
  gflops (total): 114.13
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139723,0.0431845,117.823,114.13

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128831
  gflops (total): 39.4944
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434859
  gflops (eval):  117.006
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434859,117.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8301
  maximum absolute entry in einsum_ir solution: 37.8301
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138371
  time (eval):    0.0453121
  gflops (eval):  112.291
  gflops (total): 108.963
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138371,0.0453121,112.291,108.963

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12716
  gflops (total): 40.0134
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,40.0134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433185
  gflops (eval):  117.458
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433185,117.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9652
  maximum absolute entry in einsum_ir solution: 37.9652
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137467
  time (eval):    0.0444077
  gflops (eval):  114.577
  gflops (total): 111.137
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137467,0.0444077,114.577,111.137

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.1305
  gflops (total): 38.9894
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.9894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043572
  gflops (eval):  116.775
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043572,116.775,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6787
  maximum absolute entry in einsum_ir solution: 40.6787
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138237
  time (eval):    0.0425321
  gflops (eval):  119.63
  gflops (total): 115.864
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138237,0.0425321,119.63,115.864

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127629
  gflops (total): 39.8663
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.8663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433316
  gflops (eval):  117.423
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433316,117.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8061
  maximum absolute entry in einsum_ir solution: 40.8061
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00180525
  time (eval):    0.0438891
  gflops (eval):  115.931
  gflops (total): 111.351
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00180525,0.0438891,115.931,111.351

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128049
  gflops (total): 39.7358
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043623
  gflops (eval):  116.638
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043623,116.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0695
  maximum absolute entry in einsum_ir solution: 37.0695
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00136068
  time (eval):    0.0442216
  gflops (eval):  115.06
  gflops (total): 111.625
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00136068,0.0442216,115.06,111.625

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128646
  gflops (total): 39.5513
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0440452
  gflops (eval):  115.52
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0440452,115.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6578
  maximum absolute entry in einsum_ir solution: 40.6578
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139917
  time (eval):    0.0439831
  gflops (eval):  115.683
  gflops (total): 112.117
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139917,0.0439831,115.683,112.117

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129595
  gflops (total): 39.2616
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.04348
  gflops (eval):  117.022
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.04348,117.022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0725
  maximum absolute entry in einsum_ir solution: 40.0725
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00199738
  time (eval):    0.0438558
  gflops (eval):  116.019
  gflops (total): 110.965
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00199738,0.0438558,116.019,110.965

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12872
  gflops (total): 39.5285
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043324
  gflops (eval):  117.443
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043324,117.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0183
  maximum absolute entry in einsum_ir solution: 36.0183
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137388
  time (eval):    0.0436824
  gflops (eval):  116.48
  gflops (total): 112.928
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137388,0.0436824,116.48,112.928

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130949
  gflops (total): 38.8557
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436332
  gflops (eval):  116.611
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436332,116.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2797
  maximum absolute entry in einsum_ir solution: 43.2797
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137696
  time (eval):    0.0431645
  gflops (eval):  117.877
  gflops (total): 114.233
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137696,0.0431645,117.877,114.233

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128218
  gflops (total): 39.6835
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043368
  gflops (eval):  117.324
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043368,117.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1117
  maximum absolute entry in einsum_ir solution: 38.1117
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00169172
  time (eval):    0.0450746
  gflops (eval):  112.882
  gflops (total): 108.799
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00169172,0.0450746,112.882,108.799

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128732
  gflops (total): 39.5248
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433433
  gflops (eval):  117.391
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433433,117.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.2828
  maximum absolute entry in einsum_ir solution: 40.2828
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139268
  time (eval):    0.0442761
  gflops (eval):  114.918
  gflops (total): 111.413
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139268,0.0442761,114.918,111.413

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130281
  gflops (total): 39.0551
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435259
  gflops (eval):  116.899
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435259,116.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8486
  maximum absolute entry in einsum_ir solution: 38.8486
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0016709
  time (eval):    0.0440652
  gflops (eval):  115.468
  gflops (total): 111.25
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0016709,0.0440652,115.468,111.25

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128942
  gflops (total): 39.4606
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043443
  gflops (eval):  117.122
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043443,117.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6779
  maximum absolute entry in einsum_ir solution: 40.6779
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00146664
  time (eval):    0.0440843
  gflops (eval):  115.418
  gflops (total): 111.702
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00146664,0.0440843,115.418,111.702

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128504
  gflops (total): 39.595
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433589
  gflops (eval):  117.349
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433589,117.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8384
  maximum absolute entry in einsum_ir solution: 40.8384
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140105
  time (eval):    0.0445464
  gflops (eval):  114.221
  gflops (total): 110.738
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00140105,0.0445464,114.221,110.738

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129426
  gflops (total): 39.3129
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.3129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433312
  gflops (eval):  117.424
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433312,117.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2467
  maximum absolute entry in einsum_ir solution: 38.2467
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00141707
  time (eval):    0.0441229
  gflops (eval):  115.317
  gflops (total): 111.729
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00141707,0.0441229,115.317,111.729

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129209
  gflops (total): 39.379
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434793
  gflops (eval):  117.024
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434793,117.024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8833
  maximum absolute entry in einsum_ir solution: 41.8833
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139119
  time (eval):    0.044137
  gflops (eval):  115.28
  gflops (total): 111.758
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139119,0.044137,115.28,111.758

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12803
  gflops (total): 39.7415
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434299
  gflops (eval):  117.157
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434299,117.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2022
  maximum absolute entry in einsum_ir solution: 39.2022
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138994
  time (eval):    0.0438816
  gflops (eval):  115.951
  gflops (total): 112.391
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138994,0.0438816,115.951,112.391

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128101
  gflops (total): 39.7197
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433291
  gflops (eval):  117.43
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433291,117.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3316
  maximum absolute entry in einsum_ir solution: 38.3316
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013668
  time (eval):    0.0443958
  gflops (eval):  114.608
  gflops (total): 111.185
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013668,0.0443958,114.608,111.185

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129681
  gflops (total): 39.2357
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434006
  gflops (eval):  117.236
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434006,117.236,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0513
  maximum absolute entry in einsum_ir solution: 37.0513
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137152
  time (eval):    0.0439568
  gflops (eval):  115.753
  gflops (total): 112.25
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137152,0.0439568,115.753,112.25

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128953
  gflops (total): 39.4573
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434981
  gflops (eval):  116.973
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434981,116.973,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9627
  maximum absolute entry in einsum_ir solution: 36.9627
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00143445
  time (eval):    0.0437006
  gflops (eval):  116.431
  gflops (total): 112.731
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00143445,0.0437006,116.431,112.731

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12871
  gflops (total): 39.5317
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434171
  gflops (eval):  117.192
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434171,117.192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5505
  maximum absolute entry in einsum_ir solution: 40.5505
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138989
  time (eval):    0.0435233
  gflops (eval):  116.905
  gflops (total): 113.288
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138989,0.0435233,116.905,113.288

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127429
  gflops (total): 39.9289
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433312
  gflops (eval):  117.424
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433312,117.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.647
  maximum absolute entry in einsum_ir solution: 38.647
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00157035
  time (eval):    0.0443148
  gflops (eval):  114.818
  gflops (total): 110.888
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00157035,0.0443148,114.818,110.888

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130929
  gflops (total): 38.8618
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436662
  gflops (eval):  116.523
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436662,116.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5145
  maximum absolute entry in einsum_ir solution: 41.5145
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137298
  time (eval):    0.0455362
  gflops (eval):  111.738
  gflops (total): 108.467
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137298,0.0455362,111.738,108.467

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128326
  gflops (total): 39.65
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.65

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434306
  gflops (eval):  117.155
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434306,117.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6113
  maximum absolute entry in einsum_ir solution: 38.6113
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149967
  time (eval):    0.0430006
  gflops (eval):  118.327
  gflops (total): 114.339
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00149967,0.0430006,118.327,114.339

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128747
  gflops (total): 39.5204
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434618
  gflops (eval):  117.071
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434618,117.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9716
  maximum absolute entry in einsum_ir solution: 38.9716
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138639
  time (eval):    0.0455323
  gflops (eval):  111.747
  gflops (total): 108.445
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138639,0.0455323,111.747,108.445

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128426
  gflops (total): 39.6191
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043451
  gflops (eval):  117.1
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043451,117.1,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.411
  maximum absolute entry in einsum_ir solution: 40.411
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00167403
  time (eval):    0.0431922
  gflops (eval):  117.802
  gflops (total): 113.406
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00167403,0.0431922,117.802,113.406

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127685
  gflops (total): 39.8489
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.8489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043162
  gflops (eval):  117.884
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043162,117.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5822
  maximum absolute entry in einsum_ir solution: 36.5822
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140553
  time (eval):    0.043855
  gflops (eval):  116.021
  gflops (total): 112.418
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00140553,0.043855,116.021,112.418

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129114
  gflops (total): 39.4078
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433403
  gflops (eval):  117.399
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433403,117.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.865
  maximum absolute entry in einsum_ir solution: 36.865
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00144424
  time (eval):    0.0430211
  gflops (eval):  118.27
  gflops (total): 114.429
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00144424,0.0430211,118.27,114.429

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128185
  gflops (total): 39.6935
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6935

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433508
  gflops (eval):  117.371
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433508,117.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8817
  maximum absolute entry in einsum_ir solution: 42.8817
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138157
  time (eval):    0.0432814
  gflops (eval):  117.559
  gflops (total): 113.922
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138157,0.0432814,117.559,113.922

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127435
  gflops (total): 39.9273
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0471717
  gflops (eval):  107.864
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0471717,107.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.751
  maximum absolute entry in einsum_ir solution: 43.751
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149525
  time (eval):    0.0442392
  gflops (eval):  115.014
  gflops (total): 111.254
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00149525,0.0442392,115.014,111.254

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128628
  gflops (total): 39.5568
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434955
  gflops (eval):  116.98
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434955,116.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5303
  maximum absolute entry in einsum_ir solution: 36.5303
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138363
  time (eval):    0.0440513
  gflops (eval):  115.504
  gflops (total): 111.987
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138363,0.0440513,115.504,111.987

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130906
  gflops (total): 38.8684
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433436
  gflops (eval):  117.39
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433436,117.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0888
  maximum absolute entry in einsum_ir solution: 40.0888
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137703
  time (eval):    0.0440704
  gflops (eval):  115.454
  gflops (total): 111.956
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137703,0.0440704,115.454,111.956

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12981
  gflops (total): 39.1966
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.1966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435739
  gflops (eval):  116.77
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435739,116.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8048
  maximum absolute entry in einsum_ir solution: 37.8048
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013792
  time (eval):    0.0437037
  gflops (eval):  116.423
  gflops (total): 112.861
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013792,0.0437037,116.423,112.861

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129794
  gflops (total): 39.2013
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434497
  gflops (eval):  117.104
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434497,117.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.834
  maximum absolute entry in einsum_ir solution: 37.834
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00164008
  time (eval):    0.0451132
  gflops (eval):  112.786
  gflops (total): 108.829
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00164008,0.0451132,112.786,108.829

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129981
  gflops (total): 39.1451
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.1451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434403
  gflops (eval):  117.129
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434403,117.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.171
  maximum absolute entry in einsum_ir solution: 36.171
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137747
  time (eval):    0.0428193
  gflops (eval):  118.828
  gflops (total): 115.124
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137747,0.0428193,118.828,115.124

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129666
  gflops (total): 39.2401
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432857
  gflops (eval):  117.547
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0432857,117.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8285
  maximum absolute entry in einsum_ir solution: 42.8285
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137381
  time (eval):    0.0444432
  gflops (eval):  114.486
  gflops (total): 111.053
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137381,0.0444432,114.486,111.053

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127877
  gflops (total): 39.789
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434749
  gflops (eval):  117.036
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434749,117.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3843
  maximum absolute entry in einsum_ir solution: 44.3843
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00144398
  time (eval):    0.0446753
  gflops (eval):  113.891
  gflops (total): 110.325
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00144398,0.0446753,113.891,110.325

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127579
  gflops (total): 39.882
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434712
  gflops (eval):  117.046
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434712,117.046,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8281
  maximum absolute entry in einsum_ir solution: 37.8281
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0016841
  time (eval):    0.0445161
  gflops (eval):  114.298
  gflops (total): 110.132
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0016841,0.0445161,114.298,110.132

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128257
  gflops (total): 39.6713
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435546
  gflops (eval):  116.822
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435546,116.822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3473
  maximum absolute entry in einsum_ir solution: 38.3473
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137757
  time (eval):    0.0430479
  gflops (eval):  118.197
  gflops (total): 114.532
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137757,0.0430479,118.197,114.532

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12969
  gflops (total): 39.2329
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435831
  gflops (eval):  116.745
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435831,116.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4495
  maximum absolute entry in einsum_ir solution: 40.4495
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139152
  time (eval):    0.0434382
  gflops (eval):  117.135
  gflops (total): 113.499
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139152,0.0434382,117.135,113.499

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13056
  gflops (total): 38.9714
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.9714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043442
  gflops (eval):  117.124
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043442,117.124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8069
  maximum absolute entry in einsum_ir solution: 38.8069
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00144716
  time (eval):    0.0441944
  gflops (eval):  115.13
  gflops (total): 111.48
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00144716,0.0441944,115.13,111.48

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128452
  gflops (total): 39.611
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043234
  gflops (eval):  117.688
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043234,117.688,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0696
  maximum absolute entry in einsum_ir solution: 40.0696
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139056
  time (eval):    0.0439785
  gflops (eval):  115.696
  gflops (total): 112.149
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139056,0.0439785,115.696,112.149

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129353
  gflops (total): 39.3351
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.3351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0429328
  gflops (eval):  118.513
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0429328,118.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6482
  maximum absolute entry in einsum_ir solution: 36.6482
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137575
  time (eval):    0.0438912
  gflops (eval):  115.926
  gflops (total): 112.402
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137575,0.0438912,115.926,112.402

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130378
  gflops (total): 39.0258
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437135
  gflops (eval):  116.397
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437135,116.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4138
  maximum absolute entry in einsum_ir solution: 41.4138
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139023
  time (eval):    0.0447967
  gflops (eval):  113.582
  gflops (total): 110.163
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139023,0.0447967,113.582,110.163

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12879
  gflops (total): 39.5071
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5071

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435533
  gflops (eval):  116.825
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435533,116.825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.3196
  maximum absolute entry in einsum_ir solution: 37.3196
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138978
  time (eval):    0.0447401
  gflops (eval):  113.726
  gflops (total): 110.3
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138978,0.0447401,113.726,110.3

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128092
  gflops (total): 39.7223
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438803
  gflops (eval):  115.955
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438803,115.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7508
  maximum absolute entry in einsum_ir solution: 39.7508
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137202
  time (eval):    0.0441028
  gflops (eval):  115.369
  gflops (total): 111.889
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137202,0.0441028,115.369,111.889

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127973
  gflops (total): 39.7594
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434004
  gflops (eval):  117.237
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434004,117.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6842
  maximum absolute entry in einsum_ir solution: 37.6842
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00148932
  time (eval):    0.044677
  gflops (eval):  113.887
  gflops (total): 110.213
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00148932,0.044677,113.887,110.213

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128946
  gflops (total): 39.4594
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434846
  gflops (eval):  117.01
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434846,117.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0085
  maximum absolute entry in einsum_ir solution: 38.0085
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013848
  time (eval):    0.0452569
  gflops (eval):  112.427
  gflops (total): 109.089
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013848,0.0452569,112.427,109.089

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12914
  gflops (total): 39.4
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439911
  gflops (eval):  115.662
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0439911,115.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4663
  maximum absolute entry in einsum_ir solution: 39.4663
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139218
  time (eval):    0.043217
  gflops (eval):  117.734
  gflops (total): 114.06
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139218,0.043217,117.734,114.06

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127494
  gflops (total): 39.9086
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434328
  gflops (eval):  117.149
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434328,117.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8189
  maximum absolute entry in einsum_ir solution: 39.8189
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013883
  time (eval):    0.0434927
  gflops (eval):  116.988
  gflops (total): 113.369
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013883,0.0434927,116.988,113.369

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12838
  gflops (total): 39.6333
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435047
  gflops (eval):  116.956
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435047,116.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2231
  maximum absolute entry in einsum_ir solution: 36.2231
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00136748
  time (eval):    0.0425859
  gflops (eval):  119.479
  gflops (total): 115.762
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00136748,0.0425859,119.479,115.762

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130175
  gflops (total): 39.0869
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434086
  gflops (eval):  117.214
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434086,117.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.4456
  maximum absolute entry in einsum_ir solution: 38.4456
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00142933
  time (eval):    0.0429286
  gflops (eval):  118.525
  gflops (total): 114.706
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00142933,0.0429286,118.525,114.706

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127351
  gflops (total): 39.9533
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9533

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433541
  gflops (eval):  117.362
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433541,117.362,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6367
  maximum absolute entry in einsum_ir solution: 38.6367
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138114
  time (eval):    0.0437456
  gflops (eval):  116.312
  gflops (total): 112.752
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138114,0.0437456,116.312,112.752

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131669
  gflops (total): 38.6431
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.6431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437862
  gflops (eval):  116.204
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437862,116.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9136
  maximum absolute entry in einsum_ir solution: 39.9136
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137563
  time (eval):    0.0426061
  gflops (eval):  119.422
  gflops (total): 115.687
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137563,0.0426061,119.422,115.687

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130923
  gflops (total): 38.8634
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8634

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436383
  gflops (eval):  116.597
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436383,116.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0232
  maximum absolute entry in einsum_ir solution: 40.0232
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139354
  time (eval):    0.0420292
  gflops (eval):  121.061
  gflops (total): 117.176
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139354,0.0420292,121.061,117.176

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127544
  gflops (total): 39.8931
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.8931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434207
  gflops (eval):  117.182
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434207,117.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4987
  maximum absolute entry in einsum_ir solution: 39.4987
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138915
  time (eval):    0.0437978
  gflops (eval):  116.173
  gflops (total): 112.601
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138915,0.0437978,116.173,112.601

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128877
  gflops (total): 39.4804
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435821
  gflops (eval):  116.748
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435821,116.748,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5813
  maximum absolute entry in einsum_ir solution: 40.5813
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138648
  time (eval):    0.0441659
  gflops (eval):  115.205
  gflops (total): 111.698
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138648,0.0441659,115.205,111.698

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128796
  gflops (total): 39.5053
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434126
  gflops (eval):  117.204
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434126,117.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0562
  maximum absolute entry in einsum_ir solution: 39.0562
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138991
  time (eval):    0.0439531
  gflops (eval):  115.762
  gflops (total): 112.214
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138991,0.0439531,115.762,112.214

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129667
  gflops (total): 39.2398
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433611
  gflops (eval):  117.343
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433611,117.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2049
  maximum absolute entry in einsum_ir solution: 43.2049
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139084
  time (eval):    0.0424657
  gflops (eval):  119.817
  gflops (total): 116.017
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139084,0.0424657,119.817,116.017

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128582
  gflops (total): 39.5711
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435389
  gflops (eval):  116.864
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435389,116.864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6277
  maximum absolute entry in einsum_ir solution: 39.6277
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137986
  time (eval):    0.0442321
  gflops (eval):  115.032
  gflops (total): 111.552
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137986,0.0442321,115.032,111.552

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128732
  gflops (total): 39.525
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434056
  gflops (eval):  117.223
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434056,117.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5767
  maximum absolute entry in einsum_ir solution: 35.5767
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138215
  time (eval):    0.0429502
  gflops (eval):  118.465
  gflops (total): 114.772
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138215,0.0429502,118.465,114.772

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.126146
  gflops (total): 40.3351
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,40.3351

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435329
  gflops (eval):  116.88
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435329,116.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3592
  maximum absolute entry in einsum_ir solution: 38.3592
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013683
  time (eval):    0.0439645
  gflops (eval):  115.732
  gflops (total): 112.239
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013683,0.0439645,115.732,112.239

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131365
  gflops (total): 38.7328
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.7328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043977
  gflops (eval):  115.699
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043977,115.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0502
  maximum absolute entry in einsum_ir solution: 42.0502
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00136778
  time (eval):    0.0449663
  gflops (eval):  113.154
  gflops (total): 109.814
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00136778,0.0449663,113.154,109.814

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127864
  gflops (total): 39.7933
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7933

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043336
  gflops (eval):  117.411
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043336,117.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6276
  maximum absolute entry in einsum_ir solution: 38.6276
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138853
  time (eval):    0.0426814
  gflops (eval):  119.211
  gflops (total): 115.455
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138853,0.0426814,119.211,115.455

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127959
  gflops (total): 39.7636
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436262
  gflops (eval):  116.63
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436262,116.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.757
  maximum absolute entry in einsum_ir solution: 36.757
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138001
  time (eval):    0.0445695
  gflops (eval):  114.162
  gflops (total): 110.733
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138001,0.0445695,114.162,110.733

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128014
  gflops (total): 39.7465
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438674
  gflops (eval):  115.989
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438674,115.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9972
  maximum absolute entry in einsum_ir solution: 39.9972
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137554
  time (eval):    0.0441844
  gflops (eval):  115.157
  gflops (total): 111.68
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137554,0.0441844,115.157,111.68

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128061
  gflops (total): 39.7321
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434864
  gflops (eval):  117.005
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434864,117.005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1998
  maximum absolute entry in einsum_ir solution: 37.1998
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137316
  time (eval):    0.0445197
  gflops (eval):  114.289
  gflops (total): 110.87
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137316,0.0445197,114.289,110.87

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128199
  gflops (total): 39.6893
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6893

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437027
  gflops (eval):  116.426
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437027,116.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2236
  maximum absolute entry in einsum_ir solution: 42.2236
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138291
  time (eval):    0.0439022
  gflops (eval):  115.897
  gflops (total): 112.357
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138291,0.0439022,115.897,112.357

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130239
  gflops (total): 39.0674
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0674

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433578
  gflops (eval):  117.352
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433578,117.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6679
  maximum absolute entry in einsum_ir solution: 40.6679
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00143715
  time (eval):    0.0437615
  gflops (eval):  116.269
  gflops (total): 112.572
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00143715,0.0437615,116.269,112.572

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131077
  gflops (total): 38.8177
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,38.8177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433282
  gflops (eval):  117.432
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433282,117.432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8518
  maximum absolute entry in einsum_ir solution: 36.8518
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138596
  time (eval):    0.0433833
  gflops (eval):  117.283
  gflops (total): 113.652
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138596,0.0433833,117.283,113.652

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127943
  gflops (total): 39.7688
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436726
  gflops (eval):  116.506
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436726,116.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5701
  maximum absolute entry in einsum_ir solution: 41.5701
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0016549
  time (eval):    0.0452446
  gflops (eval):  112.458
  gflops (total): 108.49
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0016549,0.0452446,112.458,108.49

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.126457
  gflops (total): 40.2361
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,40.2361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437373
  gflops (eval):  116.334
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437373,116.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9818
  maximum absolute entry in einsum_ir solution: 38.9818
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013748
  time (eval):    0.0430838
  gflops (eval):  118.098
  gflops (total): 114.446
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013748,0.0430838,118.098,114.446

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128234
  gflops (total): 39.6785
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043309
  gflops (eval):  117.484
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.043309,117.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2955
  maximum absolute entry in einsum_ir solution: 36.2955
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00142381
  time (eval):    0.0444356
  gflops (eval):  114.505
  gflops (total): 110.95
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00142381,0.0444356,114.505,110.95

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127456
  gflops (total): 39.9207
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435657
  gflops (eval):  116.792
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435657,116.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1999
  maximum absolute entry in einsum_ir solution: 40.1999
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138531
  time (eval):    0.0438703
  gflops (eval):  115.981
  gflops (total): 112.431
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138531,0.0438703,115.981,112.431

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129806
  gflops (total): 39.1979
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.1979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435594
  gflops (eval):  116.809
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435594,116.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3438
  maximum absolute entry in einsum_ir solution: 39.3438
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138322
  time (eval):    0.0449985
  gflops (eval):  113.073
  gflops (total): 109.701
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138322,0.0449985,113.073,109.701

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.13003
  gflops (total): 39.1304
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.1304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433759
  gflops (eval):  117.303
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433759,117.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6771
  maximum absolute entry in einsum_ir solution: 37.6771
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138436
  time (eval):    0.0436326
  gflops (eval):  116.613
  gflops (total): 113.027
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138436,0.0436326,116.613,113.027

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130161
  gflops (total): 39.0908
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.0908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434968
  gflops (eval):  116.977
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434968,116.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4873
  maximum absolute entry in einsum_ir solution: 35.4873
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138328
  time (eval):    0.0432662
  gflops (eval):  117.6
  gflops (total): 113.957
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138328,0.0432662,117.6,113.957

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129674
  gflops (total): 39.2378
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434309
  gflops (eval):  117.154
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434309,117.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9191
  maximum absolute entry in einsum_ir solution: 42.9191
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013849
  time (eval):    0.0439103
  gflops (eval):  115.875
  gflops (total): 112.332
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013849,0.0439103,115.875,112.332

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129597
  gflops (total): 39.2609
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436676
  gflops (eval):  116.519
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436676,116.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6265
  maximum absolute entry in einsum_ir solution: 35.6265
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139248
  time (eval):    0.0438179
  gflops (eval):  116.12
  gflops (total): 112.543
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139248,0.0438179,116.12,112.543

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129877
  gflops (total): 39.1763
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.1763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436546
  gflops (eval):  116.554
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436546,116.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0973
  maximum absolute entry in einsum_ir solution: 42.0973
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139763
  time (eval):    0.0427618
  gflops (eval):  118.988
  gflops (total): 115.222
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139763,0.0427618,118.988,115.222

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128246
  gflops (total): 39.6747
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.6747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434232
  gflops (eval):  117.175
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434232,117.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0741
  maximum absolute entry in einsum_ir solution: 35.0741
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00781705
  time (eval):    0.0445264
  gflops (eval):  114.272
  gflops (total): 97.2064
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00781705,0.0445264,114.272,97.2064

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127519
  gflops (total): 39.9009
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.9009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434361
  gflops (eval):  117.14
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434361,117.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1418
  maximum absolute entry in einsum_ir solution: 36.1418
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00148611
  time (eval):    0.0448659
  gflops (eval):  113.407
  gflops (total): 109.771
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00148611,0.0448659,113.407,109.771

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129465
  gflops (total): 39.3012
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.3012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436506
  gflops (eval):  116.565
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0436506,116.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2368
  maximum absolute entry in einsum_ir solution: 39.2368
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138452
  time (eval):    0.0442324
  gflops (eval):  115.031
  gflops (total): 111.54
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138452,0.0442324,115.031,111.54

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128572
  gflops (total): 39.5742
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435292
  gflops (eval):  116.89
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435292,116.89,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.413
  maximum absolute entry in einsum_ir solution: 38.413
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138559
  time (eval):    0.0442774
  gflops (eval):  114.915
  gflops (total): 111.428
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00138559,0.0442774,114.915,111.428

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128592
  gflops (total): 39.568
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433752
  gflops (eval):  117.305
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433752,117.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0722
  maximum absolute entry in einsum_ir solution: 41.0722
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0014392
  time (eval):    0.0430278
  gflops (eval):  118.252
  gflops (total): 114.424
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0014392,0.0430278,118.252,114.424

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127719
  gflops (total): 39.8384
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.8384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435962
  gflops (eval):  116.71
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435962,116.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6589
  maximum absolute entry in einsum_ir solution: 40.6589
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139863
  time (eval):    0.0435314
  gflops (eval):  116.884
  gflops (total): 113.245
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139863,0.0435314,116.884,113.245

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129266
  gflops (total): 39.3615
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.3615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437204
  gflops (eval):  116.379
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437204,116.379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7034
  maximum absolute entry in einsum_ir solution: 36.7034
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139998
  time (eval):    0.0429145
  gflops (eval):  118.564
  gflops (total): 114.818
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139998,0.0429145,118.564,114.818

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128078
  gflops (total): 39.7266
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434722
  gflops (eval):  117.043
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434722,117.043,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4812
  maximum absolute entry in einsum_ir solution: 42.4812
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137683
  time (eval):    0.0447823
  gflops (eval):  113.619
  gflops (total): 110.23
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137683,0.0447823,113.619,110.23

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128984
  gflops (total): 39.4476
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.4476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435294
  gflops (eval):  116.889
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0435294,116.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.536
  maximum absolute entry in einsum_ir solution: 39.536
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137081
  time (eval):    0.0424856
  gflops (eval):  119.761
  gflops (total): 116.018
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137081,0.0424856,119.761,116.018

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.126312
  gflops (total): 40.2822
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,40.2822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0443349
  gflops (eval):  114.765
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0443349,114.765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5317
  maximum absolute entry in einsum_ir solution: 38.5317
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013872
  time (eval):    0.0431665
  gflops (eval):  117.872
  gflops (total): 114.202
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013872,0.0431665,117.872,114.202

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12872
  gflops (total): 39.5286
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.5286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433837
  gflops (eval):  117.282
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0433837,117.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0032
  maximum absolute entry in einsum_ir solution: 41.0032
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00143885
  time (eval):    0.0439248
  gflops (eval):  115.837
  gflops (total): 112.163
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00143885,0.0439248,115.837,112.163

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129605
  gflops (total): 39.2586
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.2586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439833
  gflops (eval):  115.683
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0439833,115.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.6739
  maximum absolute entry in einsum_ir solution: 37.6739
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137435
  time (eval):    0.0429817
  gflops (eval):  118.379
  gflops (total): 114.711
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137435,0.0429817,118.379,114.711

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127998
  gflops (total): 39.7516
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7516

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438199
  gflops (eval):  116.114
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0438199,116.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1379
  maximum absolute entry in einsum_ir solution: 37.1379
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139781
  time (eval):    0.045135
  gflops (eval):  112.731
  gflops (total): 109.345
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00139781,0.045135,112.731,109.345

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127703
  gflops (total): 39.8432
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.8432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434298
  gflops (eval):  117.157
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434298,117.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8482
  maximum absolute entry in einsum_ir solution: 39.8482
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137424
  time (eval):    0.0437634
  gflops (eval):  116.264
  gflops (total): 112.724
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.00137424,0.0437634,116.264,112.724

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127452
  gflops (total): 39.922
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437024
  gflops (eval):  116.426
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0437024,116.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0068
  maximum absolute entry in einsum_ir solution: 40.0068
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,b,a,d
  c,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 24
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 1 0 3 2 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,1,0,3]->[0,1,3,5,4]],[2,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013752
  time (eval):    0.0449374
  gflops (eval):  113.227
  gflops (total): 109.865
CSV_DATA: einsum_ir,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0.0013752,0.0449374,113.227,109.865

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127956
  gflops (total): 39.7645
CSV_DATA: at::einsum,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0,0,39.7645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434621
  gflops (eval):  117.07
CSV_DATA: at::matmul,"efbad,cf->abcde","48,36,24,36,48,36","(0,1)",5088116736,0,0.0434621,117.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5338
  maximum absolute entry in einsum_ir solution: 37.5338
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00169088
  time (eval):    0.0476642
  gflops (eval):  106.749
  gflops (total): 103.092
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00169088,0.0476642,106.749,103.092

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12755
  gflops (total): 39.8913
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.8913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434531
  gflops (eval):  117.094
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434531,117.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.18
  maximum absolute entry in einsum_ir solution: 43.18
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00145816
  time (eval):    0.0460098
  gflops (eval):  110.588
  gflops (total): 107.19
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00145816,0.0460098,110.588,107.19

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12889
  gflops (total): 39.4764
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.4764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436315
  gflops (eval):  116.616
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436315,116.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4885
  maximum absolute entry in einsum_ir solution: 41.4885
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138914
  time (eval):    0.0470859
  gflops (eval):  108.06
  gflops (total): 104.964
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138914,0.0470859,108.06,104.964

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128377
  gflops (total): 39.6341
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435386
  gflops (eval):  116.865
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435386,116.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2174
  maximum absolute entry in einsum_ir solution: 37.2174
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138518
  time (eval):    0.0467047
  gflops (eval):  108.942
  gflops (total): 105.804
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138518,0.0467047,108.942,105.804

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128762
  gflops (total): 39.5158
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043518
  gflops (eval):  116.92
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043518,116.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1085
  maximum absolute entry in einsum_ir solution: 39.1085
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013834
  time (eval):    0.0472221
  gflops (eval):  107.749
  gflops (total): 104.682
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0013834,0.0472221,107.749,104.682

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12939
  gflops (total): 39.324
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436171
  gflops (eval):  116.654
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436171,116.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4013
  maximum absolute entry in einsum_ir solution: 39.4013
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138105
  time (eval):    0.048568
  gflops (eval):  104.763
  gflops (total): 101.866
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138105,0.048568,104.763,101.866

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.126716
  gflops (total): 40.1538
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,40.1538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434851
  gflops (eval):  117.008
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434851,117.008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0959
  maximum absolute entry in einsum_ir solution: 41.0959
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0014047
  time (eval):    0.0462115
  gflops (eval):  110.105
  gflops (total): 106.857
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0014047,0.0462115,110.105,106.857

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.133285
  gflops (total): 38.1748
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.1748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438762
  gflops (eval):  115.965
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0438762,115.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0121
  maximum absolute entry in einsum_ir solution: 37.0121
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149343
  time (eval):    0.0479126
  gflops (eval):  106.196
  gflops (total): 102.986
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00149343,0.0479126,106.196,102.986

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130384
  gflops (total): 39.0241
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.0241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434923
  gflops (eval):  116.989
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434923,116.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1871
  maximum absolute entry in einsum_ir solution: 39.1871
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137882
  time (eval):    0.047019
  gflops (eval):  108.214
  gflops (total): 105.131
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137882,0.047019,108.214,105.131

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129823
  gflops (total): 39.1927
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.1927

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438593
  gflops (eval):  116.01
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0438593,116.01,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6225
  maximum absolute entry in einsum_ir solution: 38.6225
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139007
  time (eval):    0.0473215
  gflops (eval):  107.522
  gflops (total): 104.454
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139007,0.0473215,107.522,104.454

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12939
  gflops (total): 39.3238
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433697
  gflops (eval):  117.32
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433697,117.32,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2382
  maximum absolute entry in einsum_ir solution: 37.2382
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139445
  time (eval):    0.0468151
  gflops (eval):  108.685
  gflops (total): 105.542
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139445,0.0468151,108.685,105.542

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128712
  gflops (total): 39.531
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433428
  gflops (eval):  117.393
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433428,117.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2988
  maximum absolute entry in einsum_ir solution: 41.2988
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139556
  time (eval):    0.0474746
  gflops (eval):  107.176
  gflops (total): 104.115
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139556,0.0474746,107.176,104.115

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127831
  gflops (total): 39.8034
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.8034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436476
  gflops (eval):  116.573
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436476,116.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.97
  maximum absolute entry in einsum_ir solution: 36.97
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00163493
  time (eval):    0.046932
  gflops (eval):  108.415
  gflops (total): 104.765
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00163493,0.046932,108.415,104.765

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130114
  gflops (total): 39.1051
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.1051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433196
  gflops (eval):  117.455
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433196,117.455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.029
  maximum absolute entry in einsum_ir solution: 47.029
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137883
  time (eval):    0.0476182
  gflops (eval):  106.852
  gflops (total): 103.845
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137883,0.0476182,106.852,103.845

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128363
  gflops (total): 39.6386
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434045
  gflops (eval):  117.225
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434045,117.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6761
  maximum absolute entry in einsum_ir solution: 40.6761
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0015087
  time (eval):    0.0460496
  gflops (eval):  110.492
  gflops (total): 106.987
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0015087,0.0460496,110.492,106.987

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128812
  gflops (total): 39.5003
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0440627
  gflops (eval):  115.474
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0440627,115.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3758
  maximum absolute entry in einsum_ir solution: 41.3758
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139222
  time (eval):    0.0469299
  gflops (eval):  108.419
  gflops (total): 105.296
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139222,0.0469299,108.419,105.296

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12738
  gflops (total): 39.9445
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.9445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433751
  gflops (eval):  117.305
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433751,117.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.3574
  maximum absolute entry in einsum_ir solution: 45.3574
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138049
  time (eval):    0.0471996
  gflops (eval):  107.8
  gflops (total): 104.737
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138049,0.0471996,107.8,104.737

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128676
  gflops (total): 39.5421
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434133
  gflops (eval):  117.202
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434133,117.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4602
  maximum absolute entry in einsum_ir solution: 41.4602
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00165323
  time (eval):    0.0463457
  gflops (eval):  109.786
  gflops (total): 106.005
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00165323,0.0463457,109.786,106.005

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12818
  gflops (total): 39.695
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434488
  gflops (eval):  117.106
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434488,117.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8911
  maximum absolute entry in einsum_ir solution: 37.8911
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00142915
  time (eval):    0.0489259
  gflops (eval):  103.996
  gflops (total): 101.045
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00142915,0.0489259,103.996,101.045

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129327
  gflops (total): 39.3432
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435758
  gflops (eval):  116.765
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435758,116.765,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.5663
  maximum absolute entry in einsum_ir solution: 43.5663
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138518
  time (eval):    0.0465971
  gflops (eval):  109.194
  gflops (total): 106.042
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138518,0.0465971,109.194,106.042

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127753
  gflops (total): 39.8277
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.8277

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433802
  gflops (eval):  117.291
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433802,117.291,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.8128
  maximum absolute entry in einsum_ir solution: 39.8128
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138714
  time (eval):    0.0475036
  gflops (eval):  107.11
  gflops (total): 104.071
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138714,0.0475036,107.11,104.071

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129465
  gflops (total): 39.3012
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043459
  gflops (eval):  117.079
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043459,117.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6946
  maximum absolute entry in einsum_ir solution: 36.6946
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013848
  time (eval):    0.0472831
  gflops (eval):  107.61
  gflops (total): 104.548
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0013848,0.0472831,107.61,104.548

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127164
  gflops (total): 40.0124
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,40.0124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435393
  gflops (eval):  116.863
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435393,116.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7644
  maximum absolute entry in einsum_ir solution: 37.7644
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140696
  time (eval):    0.0465219
  gflops (eval):  109.37
  gflops (total): 106.16
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00140696,0.0465219,109.37,106.16

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.1276
  gflops (total): 39.8755
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.8755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433688
  gflops (eval):  117.322
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433688,117.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.8813
  maximum absolute entry in einsum_ir solution: 42.8813
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138197
  time (eval):    0.0464377
  gflops (eval):  109.569
  gflops (total): 106.402
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138197,0.0464377,109.569,106.402

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129815
  gflops (total): 39.1952
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.1952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434477
  gflops (eval):  117.109
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434477,117.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2458
  maximum absolute entry in einsum_ir solution: 38.2458
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149823
  time (eval):    0.045865
  gflops (eval):  110.937
  gflops (total): 107.428
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00149823,0.045865,110.937,107.428

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128625
  gflops (total): 39.5578
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5578

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043211
  gflops (eval):  117.751
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043211,117.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0208
  maximum absolute entry in einsum_ir solution: 36.0208
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00136701
  time (eval):    0.0477938
  gflops (eval):  106.46
  gflops (total): 103.5
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00136701,0.0477938,106.46,103.5

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129279
  gflops (total): 39.3575
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0442228
  gflops (eval):  115.057
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0442228,115.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4815
  maximum absolute entry in einsum_ir solution: 39.4815
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00136645
  time (eval):    0.0472384
  gflops (eval):  107.711
  gflops (total): 104.683
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00136645,0.0472384,107.711,104.683

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128714
  gflops (total): 39.5305
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5305

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433107
  gflops (eval):  117.48
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433107,117.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0173
  maximum absolute entry in einsum_ir solution: 41.0173
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137854
  time (eval):    0.0471695
  gflops (eval):  107.869
  gflops (total): 104.806
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137854,0.0471695,107.869,104.806

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128491
  gflops (total): 39.5991
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435324
  gflops (eval):  116.881
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435324,116.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.2094
  maximum absolute entry in einsum_ir solution: 43.2094
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00167085
  time (eval):    0.0464363
  gflops (eval):  109.572
  gflops (total): 105.766
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00167085,0.0464363,109.572,105.766

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127268
  gflops (total): 39.9795
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.9795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433793
  gflops (eval):  117.294
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433793,117.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0753
  maximum absolute entry in einsum_ir solution: 41.0753
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013702
  time (eval):    0.0468803
  gflops (eval):  108.534
  gflops (total): 105.452
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0013702,0.0468803,108.534,105.452

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129347
  gflops (total): 39.3369
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435382
  gflops (eval):  116.866
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435382,116.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1438
  maximum absolute entry in einsum_ir solution: 41.1438
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137363
  time (eval):    0.0474064
  gflops (eval):  107.33
  gflops (total): 104.307
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137363,0.0474064,107.33,104.307

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130456
  gflops (total): 39.0026
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.0026

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435054
  gflops (eval):  116.954
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435054,116.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9241
  maximum absolute entry in einsum_ir solution: 39.9241
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149586
  time (eval):    0.0466344
  gflops (eval):  109.107
  gflops (total): 105.716
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00149586,0.0466344,109.107,105.716

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129231
  gflops (total): 39.3723
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434162
  gflops (eval):  117.194
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434162,117.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6192
  maximum absolute entry in einsum_ir solution: 38.6192
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139026
  time (eval):    0.0464393
  gflops (eval):  109.565
  gflops (total): 106.38
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139026,0.0464393,109.565,106.38

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127985
  gflops (total): 39.7556
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.7556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435873
  gflops (eval):  116.734
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435873,116.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9384
  maximum absolute entry in einsum_ir solution: 36.9384
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137234
  time (eval):    0.0477549
  gflops (eval):  106.547
  gflops (total): 103.57
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137234,0.0477549,106.547,103.57

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130392
  gflops (total): 39.0216
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.0216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434134
  gflops (eval):  117.202
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434134,117.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1748
  maximum absolute entry in einsum_ir solution: 40.1748
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138922
  time (eval):    0.0477553
  gflops (eval):  106.546
  gflops (total): 103.534
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138922,0.0477553,106.546,103.534

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127323
  gflops (total): 39.9623
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.9623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433344
  gflops (eval):  117.415
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433344,117.415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3885
  maximum absolute entry in einsum_ir solution: 38.3885
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013631
  time (eval):    0.0457174
  gflops (eval):  111.295
  gflops (total): 108.073
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0013631,0.0457174,111.295,108.073

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127481
  gflops (total): 39.9128
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.9128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435523
  gflops (eval):  116.828
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435523,116.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.7886
  maximum absolute entry in einsum_ir solution: 44.7886
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137189
  time (eval):    0.0464616
  gflops (eval):  109.512
  gflops (total): 106.371
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137189,0.0464616,109.512,106.371

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128217
  gflops (total): 39.6836
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436442
  gflops (eval):  116.582
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436442,116.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.999
  maximum absolute entry in einsum_ir solution: 38.999
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139784
  time (eval):    0.0464397
  gflops (eval):  109.564
  gflops (total): 106.362
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139784,0.0464397,109.564,106.362

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130978
  gflops (total): 38.847
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437238
  gflops (eval):  116.369
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0437238,116.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3332
  maximum absolute entry in einsum_ir solution: 42.3332
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138321
  time (eval):    0.0459408
  gflops (eval):  110.754
  gflops (total): 107.517
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138321,0.0459408,110.754,107.517

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129829
  gflops (total): 39.191
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434402
  gflops (eval):  117.129
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434402,117.129,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2383
  maximum absolute entry in einsum_ir solution: 38.2383
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137989
  time (eval):    0.0464885
  gflops (eval):  109.449
  gflops (total): 106.294
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137989,0.0464885,109.449,106.294

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128041
  gflops (total): 39.7382
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.7382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434937
  gflops (eval):  116.985
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434937,116.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0043
  maximum absolute entry in einsum_ir solution: 39.0043
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00164087
  time (eval):    0.0473656
  gflops (eval):  107.422
  gflops (total): 103.825
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00164087,0.0473656,107.422,103.825

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128939
  gflops (total): 39.4615
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.4615

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433484
  gflops (eval):  117.377
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433484,117.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0482
  maximum absolute entry in einsum_ir solution: 38.0482
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00161604
  time (eval):    0.0458009
  gflops (eval):  111.092
  gflops (total): 107.306
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00161604,0.0458009,111.092,107.306

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130782
  gflops (total): 38.9053
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.9053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434146
  gflops (eval):  117.198
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434146,117.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.4974
  maximum absolute entry in einsum_ir solution: 41.4974
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139014
  time (eval):    0.046687
  gflops (eval):  108.984
  gflops (total): 105.832
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139014,0.046687,108.984,105.832

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129381
  gflops (total): 39.3266
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0437579
  gflops (eval):  116.279
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0437579,116.279,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.475
  maximum absolute entry in einsum_ir solution: 38.475
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00144068
  time (eval):    0.0478239
  gflops (eval):  106.393
  gflops (total): 103.281
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00144068,0.0478239,106.393,103.281

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129582
  gflops (total): 39.2657
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431748
  gflops (eval):  117.849
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431748,117.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8908
  maximum absolute entry in einsum_ir solution: 40.8908
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137003
  time (eval):    0.0459664
  gflops (eval):  110.692
  gflops (total): 107.488
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137003,0.0459664,110.692,107.488

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128686
  gflops (total): 39.5389
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434567
  gflops (eval):  117.085
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434567,117.085,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3467
  maximum absolute entry in einsum_ir solution: 40.3467
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00141857
  time (eval):    0.0462848
  gflops (eval):  109.931
  gflops (total): 106.662
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00141857,0.0462848,109.931,106.662

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127131
  gflops (total): 40.0228
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,40.0228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434451
  gflops (eval):  117.116
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434451,117.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5713
  maximum absolute entry in einsum_ir solution: 38.5713
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137931
  time (eval):    0.0470276
  gflops (eval):  108.194
  gflops (total): 105.111
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137931,0.0470276,108.194,105.111

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128803
  gflops (total): 39.5032
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433508
  gflops (eval):  117.371
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433508,117.371,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7069
  maximum absolute entry in einsum_ir solution: 38.7069
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137529
  time (eval):    0.0464135
  gflops (eval):  109.626
  gflops (total): 106.471
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137529,0.0464135,109.626,106.471

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127973
  gflops (total): 39.7593
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.7593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434847
  gflops (eval):  117.009
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434847,117.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.3573
  maximum absolute entry in einsum_ir solution: 39.3573
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138287
  time (eval):    0.0478669
  gflops (eval):  106.297
  gflops (total): 103.312
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138287,0.0478669,106.297,103.312

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131291
  gflops (total): 38.7546
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436664
  gflops (eval):  116.522
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436664,116.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7578
  maximum absolute entry in einsum_ir solution: 35.7578
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138262
  time (eval):    0.0479585
  gflops (eval):  106.094
  gflops (total): 103.121
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138262,0.0479585,106.094,103.121

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129036
  gflops (total): 39.4319
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.4319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435444
  gflops (eval):  116.849
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435444,116.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5895
  maximum absolute entry in einsum_ir solution: 39.5895
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138143
  time (eval):    0.0472655
  gflops (eval):  107.65
  gflops (total): 104.593
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138143,0.0472655,107.65,104.593

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128771
  gflops (total): 39.5128
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433675
  gflops (eval):  117.326
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433675,117.326,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9799
  maximum absolute entry in einsum_ir solution: 35.9799
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137028
  time (eval):    0.0476379
  gflops (eval):  106.808
  gflops (total): 103.822
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137028,0.0476379,106.808,103.822

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129267
  gflops (total): 39.3611
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434471
  gflops (eval):  117.111
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434471,117.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.9218
  maximum absolute entry in einsum_ir solution: 38.9218
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139022
  time (eval):    0.0465458
  gflops (eval):  109.314
  gflops (total): 106.144
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139022,0.0465458,109.314,106.144

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129709
  gflops (total): 39.2273
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433034
  gflops (eval):  117.499
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433034,117.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4935
  maximum absolute entry in einsum_ir solution: 42.4935
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00164273
  time (eval):    0.046836
  gflops (eval):  108.637
  gflops (total): 104.956
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00164273,0.046836,108.637,104.956

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128857
  gflops (total): 39.4867
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.4867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433644
  gflops (eval):  117.334
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433644,117.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5387
  maximum absolute entry in einsum_ir solution: 38.5387
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138005
  time (eval):    0.0478104
  gflops (eval):  106.423
  gflops (total): 103.437
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138005,0.0478104,106.423,103.437

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128291
  gflops (total): 39.6608
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436015
  gflops (eval):  116.696
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436015,116.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.0577
  maximum absolute entry in einsum_ir solution: 41.0577
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137912
  time (eval):    0.0466475
  gflops (eval):  109.076
  gflops (total): 105.944
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137912,0.0466475,109.076,105.944

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128381
  gflops (total): 39.6328
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435038
  gflops (eval):  116.958
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435038,116.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5476
  maximum absolute entry in einsum_ir solution: 38.5476
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138052
  time (eval):    0.0477835
  gflops (eval):  106.483
  gflops (total): 103.493
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138052,0.0477835,106.483,103.493

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127585
  gflops (total): 39.8801
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.8801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431476
  gflops (eval):  117.923
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431476,117.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.6705
  maximum absolute entry in einsum_ir solution: 39.6705
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138329
  time (eval):    0.0468144
  gflops (eval):  108.687
  gflops (total): 105.568
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138329,0.0468144,108.687,105.568

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128227
  gflops (total): 39.6804
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434642
  gflops (eval):  117.065
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434642,117.065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1226
  maximum absolute entry in einsum_ir solution: 37.1226
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00156225
  time (eval):    0.046997
  gflops (eval):  108.265
  gflops (total): 104.782
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00156225,0.046997,108.265,104.782

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128331
  gflops (total): 39.6483
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432922
  gflops (eval):  117.53
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432922,117.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5741
  maximum absolute entry in einsum_ir solution: 36.5741
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00151584
  time (eval):    0.0478652
  gflops (eval):  106.301
  gflops (total): 103.038
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00151584,0.0478652,106.301,103.038

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12851
  gflops (total): 39.5931
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435694
  gflops (eval):  116.782
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435694,116.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.631
  maximum absolute entry in einsum_ir solution: 36.631
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138023
  time (eval):    0.0472476
  gflops (eval):  107.691
  gflops (total): 104.634
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138023,0.0472476,107.691,104.634

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127147
  gflops (total): 40.0177
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,40.0177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435644
  gflops (eval):  116.795
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435644,116.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2697
  maximum absolute entry in einsum_ir solution: 39.2697
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138781
  time (eval):    0.0481029
  gflops (eval):  105.776
  gflops (total): 102.809
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138781,0.0481029,105.776,102.809

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128764
  gflops (total): 39.5151
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434387
  gflops (eval):  117.133
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434387,117.133,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.572
  maximum absolute entry in einsum_ir solution: 36.572
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137582
  time (eval):    0.0474677
  gflops (eval):  107.191
  gflops (total): 104.172
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137582,0.0474677,107.191,104.172

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128487
  gflops (total): 39.6002
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433613
  gflops (eval):  117.342
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433613,117.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5066
  maximum absolute entry in einsum_ir solution: 37.5066
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00174798
  time (eval):    0.046369
  gflops (eval):  109.731
  gflops (total): 105.745
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00174798,0.046369,109.731,105.745

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128045
  gflops (total): 39.737
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433601
  gflops (eval):  117.346
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433601,117.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.667
  maximum absolute entry in einsum_ir solution: 36.667
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00134699
  time (eval):    0.0472663
  gflops (eval):  107.648
  gflops (total): 104.665
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00134699,0.0472663,107.648,104.665

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129216
  gflops (total): 39.3768
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435019
  gflops (eval):  116.963
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435019,116.963,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7461
  maximum absolute entry in einsum_ir solution: 37.7461
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139158
  time (eval):    0.0463751
  gflops (eval):  109.717
  gflops (total): 106.52
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139158,0.0463751,109.717,106.52

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128895
  gflops (total): 39.4748
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.4748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0438621
  gflops (eval):  116.002
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0438621,116.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.177
  maximum absolute entry in einsum_ir solution: 42.177
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149315
  time (eval):    0.0470678
  gflops (eval):  108.102
  gflops (total): 104.778
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00149315,0.0470678,108.102,104.778

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128104
  gflops (total): 39.7185
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.7185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434926
  gflops (eval):  116.988
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434926,116.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.2288
  maximum absolute entry in einsum_ir solution: 39.2288
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00149709
  time (eval):    0.04711
  gflops (eval):  108.005
  gflops (total): 104.678
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00149709,0.04711,108.005,104.678

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12927
  gflops (total): 39.3605
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434173
  gflops (eval):  117.191
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434173,117.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.0854
  maximum absolute entry in einsum_ir solution: 46.0854
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138153
  time (eval):    0.0468036
  gflops (eval):  108.712
  gflops (total): 105.595
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138153,0.0468036,108.712,105.595

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12865
  gflops (total): 39.55
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431434
  gflops (eval):  117.935
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431434,117.935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9902
  maximum absolute entry in einsum_ir solution: 39.9902
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138562
  time (eval):    0.0468446
  gflops (eval):  108.617
  gflops (total): 105.496
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138562,0.0468446,108.617,105.496

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129862
  gflops (total): 39.1809
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.1809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434848
  gflops (eval):  117.009
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434848,117.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2748
  maximum absolute entry in einsum_ir solution: 38.2748
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137682
  time (eval):    0.0463378
  gflops (eval):  109.805
  gflops (total): 106.636
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137682,0.0463378,109.805,106.636

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129233
  gflops (total): 39.3718
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433774
  gflops (eval):  117.299
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433774,117.299,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5314
  maximum absolute entry in einsum_ir solution: 39.5314
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138252
  time (eval):    0.0481775
  gflops (eval):  105.612
  gflops (total): 102.666
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138252,0.0481775,105.612,102.666

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.131422
  gflops (total): 38.7159
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,38.7159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435386
  gflops (eval):  116.865
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435386,116.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7053
  maximum absolute entry in einsum_ir solution: 39.7053
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00143689
  time (eval):    0.0477322
  gflops (eval):  106.597
  gflops (total): 103.482
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00143689,0.0477322,106.597,103.482

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129731
  gflops (total): 39.2204
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431682
  gflops (eval):  117.867
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431682,117.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.837
  maximum absolute entry in einsum_ir solution: 37.837
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137929
  time (eval):    0.047352
  gflops (eval):  107.453
  gflops (total): 104.412
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137929,0.047352,107.453,104.412

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128602
  gflops (total): 39.5649
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435174
  gflops (eval):  116.921
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435174,116.921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0936
  maximum absolute entry in einsum_ir solution: 39.0937
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00141435
  time (eval):    0.0453781
  gflops (eval):  112.127
  gflops (total): 108.738
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00141435,0.0453781,112.127,108.738

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.126977
  gflops (total): 40.0713
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,40.0713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043465
  gflops (eval):  117.062
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043465,117.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0457
  maximum absolute entry in einsum_ir solution: 39.0457
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139338
  time (eval):    0.0469442
  gflops (eval):  108.386
  gflops (total): 105.262
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139338,0.0469442,108.386,105.262

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128472
  gflops (total): 39.605
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436456
  gflops (eval):  116.578
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436456,116.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.26
  maximum absolute entry in einsum_ir solution: 41.26
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140846
  time (eval):    0.0465716
  gflops (eval):  109.254
  gflops (total): 106.047
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00140846,0.0465716,109.254,106.047

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128195
  gflops (total): 39.6906
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434311
  gflops (eval):  117.154
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434311,117.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5876
  maximum absolute entry in einsum_ir solution: 41.5876
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00145534
  time (eval):    0.0450679
  gflops (eval):  112.899
  gflops (total): 109.367
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00145534,0.0450679,112.899,109.367

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130185
  gflops (total): 39.0837
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.0837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432645
  gflops (eval):  117.605
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432645,117.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.022
  maximum absolute entry in einsum_ir solution: 39.022
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138579
  time (eval):    0.0461458
  gflops (eval):  110.262
  gflops (total): 107.047
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138579,0.0461458,110.262,107.047

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129987
  gflops (total): 39.1434
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.1434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433655
  gflops (eval):  117.331
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433655,117.331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9243
  maximum absolute entry in einsum_ir solution: 36.9243
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138742
  time (eval):    0.0468432
  gflops (eval):  108.62
  gflops (total): 105.496
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138742,0.0468432,108.62,105.496

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128448
  gflops (total): 39.6124
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0439991
  gflops (eval):  115.641
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0439991,115.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3146
  maximum absolute entry in einsum_ir solution: 35.3146
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137723
  time (eval):    0.0470983
  gflops (eval):  108.032
  gflops (total): 104.963
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137723,0.0470983,108.032,104.963

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12931
  gflops (total): 39.3483
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3483

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434058
  gflops (eval):  117.222
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434058,117.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7675
  maximum absolute entry in einsum_ir solution: 38.7675
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140324
  time (eval):    0.0474716
  gflops (eval):  107.182
  gflops (total): 104.105
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00140324,0.0474716,107.182,104.105

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.127861
  gflops (total): 39.794
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435443
  gflops (eval):  116.849
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435443,116.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9357
  maximum absolute entry in einsum_ir solution: 41.9357
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013789
  time (eval):    0.0467817
  gflops (eval):  108.763
  gflops (total): 105.649
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0013789,0.0467817,108.763,105.649

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128641
  gflops (total): 39.5529
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436619
  gflops (eval):  116.535
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436619,116.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.1339
  maximum absolute entry in einsum_ir solution: 41.1339
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137589
  time (eval):    0.0451545
  gflops (eval):  112.682
  gflops (total): 109.35
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137589,0.0451545,112.682,109.35

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128938
  gflops (total): 39.4619
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.4619

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433679
  gflops (eval):  117.325
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433679,117.325,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6173
  maximum absolute entry in einsum_ir solution: 43.6173
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138821
  time (eval):    0.0460802
  gflops (eval):  110.419
  gflops (total): 107.189
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138821,0.0460802,110.419,107.189

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.126721
  gflops (total): 40.152
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,40.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0431922
  gflops (eval):  117.802
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0431922,117.802,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4341
  maximum absolute entry in einsum_ir solution: 42.4341
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137831
  time (eval):    0.047663
  gflops (eval):  106.752
  gflops (total): 103.752
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137831,0.047663,106.752,103.752

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130084
  gflops (total): 39.1141
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.1141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434246
  gflops (eval):  117.171
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434246,117.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4295
  maximum absolute entry in einsum_ir solution: 40.4295
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00148997
  time (eval):    0.0484916
  gflops (eval):  104.928
  gflops (total): 101.8
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00148997,0.0484916,104.928,101.8

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12846
  gflops (total): 39.6086
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434938
  gflops (eval):  116.985
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434938,116.985,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1312
  maximum absolute entry in einsum_ir solution: 39.1312
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137613
  time (eval):    0.0477651
  gflops (eval):  106.524
  gflops (total): 103.541
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137613,0.0477651,106.524,103.541

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129194
  gflops (total): 39.3836
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.3836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0432321
  gflops (eval):  117.693
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0432321,117.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.4301
  maximum absolute entry in einsum_ir solution: 39.4301
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137908
  time (eval):    0.0485899
  gflops (eval):  104.716
  gflops (total): 101.826
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137908,0.0485899,104.716,101.826

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129147
  gflops (total): 39.398
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435457
  gflops (eval):  116.845
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435457,116.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8227
  maximum absolute entry in einsum_ir solution: 36.8227
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137749
  time (eval):    0.0460485
  gflops (eval):  110.495
  gflops (total): 107.285
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137749,0.0460485,110.495,107.285

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128754
  gflops (total): 39.5181
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433902
  gflops (eval):  117.264
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433902,117.264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7711
  maximum absolute entry in einsum_ir solution: 38.7711
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00148025
  time (eval):    0.0463857
  gflops (eval):  109.691
  gflops (total): 106.299
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00148025,0.0463857,109.691,106.299

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129648
  gflops (total): 39.2456
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2456

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433829
  gflops (eval):  117.284
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433829,117.284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3221
  maximum absolute entry in einsum_ir solution: 36.3221
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138032
  time (eval):    0.0461726
  gflops (eval):  110.198
  gflops (total): 106.999
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138032,0.0461726,110.198,106.999

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128078
  gflops (total): 39.7266
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.7266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0435915
  gflops (eval):  116.723
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0435915,116.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5548
  maximum absolute entry in einsum_ir solution: 37.5548
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00167527
  time (eval):    0.0470762
  gflops (eval):  108.082
  gflops (total): 104.368
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00167527,0.0470762,108.082,104.368

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129585
  gflops (total): 39.2648
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043547
  gflops (eval):  116.842
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043547,116.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.641
  maximum absolute entry in einsum_ir solution: 37.641
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00140225
  time (eval):    0.0477306
  gflops (eval):  106.601
  gflops (total): 103.558
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00140225,0.0477306,106.601,103.558

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129645
  gflops (total): 39.2465
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.2465

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043348
  gflops (eval):  117.378
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043348,117.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.2644
  maximum absolute entry in einsum_ir solution: 38.2644
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00138739
  time (eval):    0.0467924
  gflops (eval):  108.738
  gflops (total): 105.607
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00138739,0.0467924,108.738,105.607

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.12833
  gflops (total): 39.6488
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.6488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0436028
  gflops (eval):  116.692
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0436028,116.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5391
  maximum absolute entry in einsum_ir solution: 36.5391
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139048
  time (eval):    0.048548
  gflops (eval):  104.806
  gflops (total): 101.888
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139048,0.048548,104.806,101.888

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128645
  gflops (total): 39.5517
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433751
  gflops (eval):  117.305
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433751,117.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.5863
  maximum absolute entry in einsum_ir solution: 39.5863
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137483
  time (eval):    0.0480327
  gflops (eval):  105.93
  gflops (total): 102.983
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137483,0.0480327,105.93,102.983

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.129163
  gflops (total): 39.393
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.393

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.043621
  gflops (eval):  116.644
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.043621,116.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3242
  maximum absolute entry in einsum_ir solution: 42.3242
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.0013746
  time (eval):    0.0478482
  gflops (eval):  106.339
  gflops (total): 103.369
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.0013746,0.0478482,106.339,103.369

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128735
  gflops (total): 39.524
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.524

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434111
  gflops (eval):  117.208
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434111,117.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3461
  maximum absolute entry in einsum_ir solution: 41.3461
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00139033
  time (eval):    0.0468409
  gflops (eval):  108.626
  gflops (total): 105.494
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00139033,0.0468409,108.626,105.494

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.128597
  gflops (total): 39.5663
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.5663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0433527
  gflops (eval):  117.366
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0433527,117.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4244
  maximum absolute entry in einsum_ir solution: 42.4244
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,c,a,d
  b,f
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 24
  c: 36
  d: 36
  e: 48
  f: 36
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 5 2 0 3 1 5 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,5,2,0,3]->[0,2,3,5,4]],[1,5]->[0,1,2,3,4]
  #flops:         5088116736
  time (compile): 0.00137275
  time (eval):    0.0457074
  gflops (eval):  111.319
  gflops (total): 108.074
CSV_DATA: einsum_ir,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0.00137275,0.0457074,111.319,108.074

*** benchmarking at::einsum ***
  #flops:         5088116736
  time (total):   0.130255
  gflops (total): 39.0626
CSV_DATA: at::einsum,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0,0,39.0626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 36
  #flops:         5088116736
  time (eval):    0.0434683
  gflops (eval):  117.053
CSV_DATA: at::matmul,"efcad,bf->abcde","48,24,36,36,48,36","(0,1)",5088116736,0,0.0434683,117.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9925
  maximum absolute entry in einsum_ir solution: 37.9925
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013838
  time (eval):    0.0222055
  gflops (eval):  159.811
  gflops (total): 150.436
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013838,0.0222055,159.811,150.436

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125589
  gflops (total): 28.2563
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351845
  gflops (eval):  100.859
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351845,100.859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1166
  maximum absolute entry in einsum_ir solution: 54.1166
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138572
  time (eval):    0.0219298
  gflops (eval):  161.82
  gflops (total): 152.202
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138572,0.0219298,161.82,152.202

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128872
  gflops (total): 27.5364
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.5364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342499
  gflops (eval):  103.611
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342499,103.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.309
  maximum absolute entry in einsum_ir solution: 60.309
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138307
  time (eval):    0.0223008
  gflops (eval):  159.128
  gflops (total): 149.835
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138307,0.0223008,159.128,149.835

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126394
  gflops (total): 28.0764
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338506
  gflops (eval):  104.833
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338506,104.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3475
  maximum absolute entry in einsum_ir solution: 55.3475
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138259
  time (eval):    0.0228606
  gflops (eval):  155.231
  gflops (total): 146.378
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138259,0.0228606,155.231,146.378

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127733
  gflops (total): 27.782
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347565
  gflops (eval):  102.101
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347565,102.101,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4567
  maximum absolute entry in einsum_ir solution: 55.4567
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141468
  time (eval):    0.0235392
  gflops (eval):  150.756
  gflops (total): 142.21
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141468,0.0235392,150.756,142.21

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126192
  gflops (total): 28.1213
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333572
  gflops (eval):  106.384
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333572,106.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4717
  maximum absolute entry in einsum_ir solution: 55.4717
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139225
  time (eval):    0.0226964
  gflops (eval):  156.354
  gflops (total): 147.318
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139225,0.0226964,156.354,147.318

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.130394
  gflops (total): 27.2151
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.2151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034694
  gflops (eval):  102.285
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034694,102.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3076
  maximum absolute entry in einsum_ir solution: 56.3076
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137934
  time (eval):    0.0246431
  gflops (eval):  144.003
  gflops (total): 136.37
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137934,0.0246431,144.003,136.37

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12576
  gflops (total): 28.2178
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335628
  gflops (eval):  105.732
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335628,105.732,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6779
  maximum absolute entry in einsum_ir solution: 55.6779
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138037
  time (eval):    0.0221509
  gflops (eval):  160.204
  gflops (total): 150.807
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138037,0.0221509,160.204,150.807

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126969
  gflops (total): 27.9491
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0353362
  gflops (eval):  100.426
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0353362,100.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.373
  maximum absolute entry in einsum_ir solution: 56.373
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138111
  time (eval):    0.0225248
  gflops (eval):  157.545
  gflops (total): 148.443
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138111,0.0225248,157.545,148.443

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126131
  gflops (total): 28.1348
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034091
  gflops (eval):  104.094
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034091,104.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1031
  maximum absolute entry in einsum_ir solution: 54.1031
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139186
  time (eval):    0.0224018
  gflops (eval):  158.41
  gflops (total): 149.144
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139186,0.0224018,158.41,149.144

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127041
  gflops (total): 27.9334
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337901
  gflops (eval):  105.021
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337901,105.021,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4227
  maximum absolute entry in einsum_ir solution: 58.4227
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138357
  time (eval):    0.0218233
  gflops (eval):  162.609
  gflops (total): 152.915
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138357,0.0218233,162.609,152.915

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126443
  gflops (total): 28.0655
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0655

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344811
  gflops (eval):  102.917
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344811,102.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5454
  maximum absolute entry in einsum_ir solution: 58.5454
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137505
  time (eval):    0.0221679
  gflops (eval):  160.082
  gflops (total): 150.732
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137505,0.0221679,160.082,150.732

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126468
  gflops (total): 28.06
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342331
  gflops (eval):  103.662
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342331,103.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0144
  maximum absolute entry in einsum_ir solution: 58.0144
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138307
  time (eval):    0.0242654
  gflops (eval):  146.244
  gflops (total): 138.358
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138307,0.0242654,146.244,138.358

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12604
  gflops (total): 28.1553
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342518
  gflops (eval):  103.606
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342518,103.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0295
  maximum absolute entry in einsum_ir solution: 59.0295
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013898
  time (eval):    0.0223634
  gflops (eval):  158.682
  gflops (total): 149.398
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013898,0.0223634,158.682,149.398

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128606
  gflops (total): 27.5934
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.5934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343807
  gflops (eval):  103.217
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343807,103.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0322
  maximum absolute entry in einsum_ir solution: 54.0322
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140033
  time (eval):    0.0230694
  gflops (eval):  153.826
  gflops (total): 145.023
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140033,0.0230694,153.826,145.023

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12705
  gflops (total): 27.9313
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9313

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348134
  gflops (eval):  101.934
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348134,101.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3715
  maximum absolute entry in einsum_ir solution: 59.3715
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139205
  time (eval):    0.0222999
  gflops (eval):  159.134
  gflops (total): 149.784
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139205,0.0222999,159.134,149.784

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127552
  gflops (total): 27.8213
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340612
  gflops (eval):  104.185
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340612,104.185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0514
  maximum absolute entry in einsum_ir solution: 54.0514
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137027
  time (eval):    0.0228208
  gflops (eval):  155.502
  gflops (total): 146.694
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137027,0.0228208,155.502,146.694

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125601
  gflops (total): 28.2535
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337617
  gflops (eval):  105.11
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337617,105.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.5151
  maximum absolute entry in einsum_ir solution: 52.5151
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138161
  time (eval):    0.0222326
  gflops (eval):  159.616
  gflops (total): 150.277
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138161,0.0222326,159.616,150.277

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128055
  gflops (total): 27.7121
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034946
  gflops (eval):  101.547
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034946,101.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2083
  maximum absolute entry in einsum_ir solution: 58.2083
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138373
  time (eval):    0.0224748
  gflops (eval):  157.896
  gflops (total): 148.738
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138373,0.0224748,157.896,148.738

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125806
  gflops (total): 28.2075
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343061
  gflops (eval):  103.442
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343061,103.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2706
  maximum absolute entry in einsum_ir solution: 55.2706
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142088
  time (eval):    0.0219657
  gflops (eval):  161.555
  gflops (total): 151.74
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142088,0.0219657,161.555,151.74

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127886
  gflops (total): 27.7487
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340466
  gflops (eval):  104.23
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340466,104.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0204
  maximum absolute entry in einsum_ir solution: 54.0204
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139768
  time (eval):    0.0219302
  gflops (eval):  161.817
  gflops (total): 152.121
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139768,0.0219302,161.817,152.121

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125911
  gflops (total): 28.184
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340404
  gflops (eval):  104.249
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340404,104.249,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6552
  maximum absolute entry in einsum_ir solution: 53.6552
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138214
  time (eval):    0.0218655
  gflops (eval):  162.296
  gflops (total): 152.647
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138214,0.0218655,162.296,152.647

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128984
  gflops (total): 27.5125
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.5125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338349
  gflops (eval):  104.882
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338349,104.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.327
  maximum absolute entry in einsum_ir solution: 58.327
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139392
  time (eval):    0.0220151
  gflops (eval):  161.193
  gflops (total): 151.594
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139392,0.0220151,161.193,151.594

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127689
  gflops (total): 27.7916
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340701
  gflops (eval):  104.158
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340701,104.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2187
  maximum absolute entry in einsum_ir solution: 58.2187
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136574
  time (eval):    0.0220662
  gflops (eval):  160.82
  gflops (total): 151.446
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136574,0.0220662,160.82,151.446

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126862
  gflops (total): 27.9727
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345572
  gflops (eval):  102.69
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345572,102.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5534
  maximum absolute entry in einsum_ir solution: 57.5534
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139424
  time (eval):    0.0226953
  gflops (eval):  156.362
  gflops (total): 147.312
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139424,0.0226953,156.362,147.312

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125525
  gflops (total): 28.2708
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351537
  gflops (eval):  100.947
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351537,100.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7074
  maximum absolute entry in einsum_ir solution: 53.7074
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139569
  time (eval):    0.022663
  gflops (eval):  156.584
  gflops (total): 147.501
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139569,0.022663,156.584,147.501

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127076
  gflops (total): 27.9257
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337847
  gflops (eval):  105.038
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337847,105.038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3295
  maximum absolute entry in einsum_ir solution: 56.3295
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141498
  time (eval):    0.0223335
  gflops (eval):  158.895
  gflops (total): 149.428
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141498,0.0223335,158.895,149.428

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126223
  gflops (total): 28.1143
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341949
  gflops (eval):  103.778
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341949,103.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3094
  maximum absolute entry in einsum_ir solution: 55.3094
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139506
  time (eval):    0.0220977
  gflops (eval):  160.59
  gflops (total): 151.054
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139506,0.0220977,160.59,151.054

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127525
  gflops (total): 27.8272
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346664
  gflops (eval):  102.367
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346664,102.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4494
  maximum absolute entry in einsum_ir solution: 54.4494
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137413
  time (eval):    0.0246717
  gflops (eval):  143.836
  gflops (total): 136.248
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137413,0.0246717,143.836,136.248

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125891
  gflops (total): 28.1884
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343885
  gflops (eval):  103.194
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343885,103.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4804
  maximum absolute entry in einsum_ir solution: 60.4804
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139355
  time (eval):    0.0223824
  gflops (eval):  158.547
  gflops (total): 149.255
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139355,0.0223824,158.547,149.255

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126069
  gflops (total): 28.1487
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345529
  gflops (eval):  102.703
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345529,102.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8421
  maximum absolute entry in einsum_ir solution: 54.8421
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137411
  time (eval):    0.0221484
  gflops (eval):  160.223
  gflops (total): 150.863
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137411,0.0221484,160.223,150.863

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.129076
  gflops (total): 27.493
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335855
  gflops (eval):  105.661
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335855,105.661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1018
  maximum absolute entry in einsum_ir solution: 59.1018
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139358
  time (eval):    0.0237399
  gflops (eval):  149.481
  gflops (total): 141.193
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139358,0.0237399,149.481,141.193

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126497
  gflops (total): 28.0534
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333948
  gflops (eval):  106.264
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333948,106.264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5919
  maximum absolute entry in einsum_ir solution: 57.5919
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138527
  time (eval):    0.0231409
  gflops (eval):  153.351
  gflops (total): 144.689
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138527,0.0231409,153.351,144.689

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12651
  gflops (total): 28.0505
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345792
  gflops (eval):  102.624
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345792,102.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9904
  maximum absolute entry in einsum_ir solution: 58.9904
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139125
  time (eval):    0.023099
  gflops (eval):  153.629
  gflops (total): 144.902
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139125,0.023099,153.629,144.902

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126543
  gflops (total): 28.0432
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347612
  gflops (eval):  102.087
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347612,102.087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2859
  maximum absolute entry in einsum_ir solution: 56.2859
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138704
  time (eval):    0.0241532
  gflops (eval):  146.923
  gflops (total): 138.944
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138704,0.0241532,146.923,138.944

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127331
  gflops (total): 27.8698
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347934
  gflops (eval):  101.993
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347934,101.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8295
  maximum absolute entry in einsum_ir solution: 58.8295
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013822
  time (eval):    0.0223324
  gflops (eval):  158.903
  gflops (total): 149.641
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013822,0.0223324,158.903,149.641

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126213
  gflops (total): 28.1165
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340546
  gflops (eval):  104.206
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340546,104.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7558
  maximum absolute entry in einsum_ir solution: 57.7558
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138524
  time (eval):    0.0219981
  gflops (eval):  161.317
  gflops (total): 151.761
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138524,0.0219981,161.317,151.761

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125973
  gflops (total): 28.1701
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347733
  gflops (eval):  102.052
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347733,102.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2529
  maximum absolute entry in einsum_ir solution: 56.2529
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138321
  time (eval):    0.0230573
  gflops (eval):  153.907
  gflops (total): 145.196
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138321,0.0230573,153.907,145.196

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127518
  gflops (total): 27.8288
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034675
  gflops (eval):  102.341
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034675,102.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.836
  maximum absolute entry in einsum_ir solution: 63.836
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00148719
  time (eval):    0.021754
  gflops (eval):  163.127
  gflops (total): 152.689
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00148719,0.021754,163.127,152.689

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127274
  gflops (total): 27.8822
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342075
  gflops (eval):  103.74
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342075,103.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3075
  maximum absolute entry in einsum_ir solution: 59.3075
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142974
  time (eval):    0.0231916
  gflops (eval):  153.016
  gflops (total): 144.13
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142974,0.0231916,153.016,144.13

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126456
  gflops (total): 28.0626
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336222
  gflops (eval):  105.546
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336222,105.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6306
  maximum absolute entry in einsum_ir solution: 57.6306
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013605
  time (eval):    0.0220023
  gflops (eval):  161.286
  gflops (total): 151.894
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013605,0.0220023,161.286,151.894

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127171
  gflops (total): 27.9047
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341523
  gflops (eval):  103.907
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341523,103.907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9952
  maximum absolute entry in einsum_ir solution: 54.9952
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143534
  time (eval):    0.0231816
  gflops (eval):  153.081
  gflops (total): 144.156
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143534,0.0231816,153.081,144.156

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.129439
  gflops (total): 27.4159
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.4159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033562
  gflops (eval):  105.735
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033562,105.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6445
  maximum absolute entry in einsum_ir solution: 60.6445
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00143993
  time (eval):    0.0230596
  gflops (eval):  153.892
  gflops (total): 144.847
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00143993,0.0230596,153.892,144.847

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125054
  gflops (total): 28.3773
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.3773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343281
  gflops (eval):  103.375
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343281,103.375,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.5507
  maximum absolute entry in einsum_ir solution: 55.5507
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138498
  time (eval):    0.0231301
  gflops (eval):  153.422
  gflops (total): 144.755
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138498,0.0231301,153.422,144.755

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126593
  gflops (total): 28.0321
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0321

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345129
  gflops (eval):  102.822
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345129,102.822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.749
  maximum absolute entry in einsum_ir solution: 60.749
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139007
  time (eval):    0.0218459
  gflops (eval):  162.442
  gflops (total): 152.724
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139007,0.0218459,162.442,152.724

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125088
  gflops (total): 28.3694
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.3694

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343865
  gflops (eval):  103.2
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343865,103.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0561
  maximum absolute entry in einsum_ir solution: 59.0561
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013826
  time (eval):    0.0224421
  gflops (eval):  158.126
  gflops (total): 148.949
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013826,0.0224421,158.126,148.949

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127501
  gflops (total): 27.8325
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343689
  gflops (eval):  103.252
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343689,103.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7664
  maximum absolute entry in einsum_ir solution: 62.7664
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138393
  time (eval):    0.0219322
  gflops (eval):  161.802
  gflops (total): 152.199
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138393,0.0219322,161.802,152.199

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126487
  gflops (total): 28.0557
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349251
  gflops (eval):  101.608
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349251,101.608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8237
  maximum absolute entry in einsum_ir solution: 55.8237
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138401
  time (eval):    0.0226323
  gflops (eval):  156.797
  gflops (total): 147.761
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138401,0.0226323,156.797,147.761

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128379
  gflops (total): 27.6421
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.6421

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034021
  gflops (eval):  104.308
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034021,104.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4186
  maximum absolute entry in einsum_ir solution: 55.4186
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139135
  time (eval):    0.0227044
  gflops (eval):  156.299
  gflops (total): 147.274
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139135,0.0227044,156.299,147.274

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125998
  gflops (total): 28.1645
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1645

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338791
  gflops (eval):  104.745
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338791,104.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6113
  maximum absolute entry in einsum_ir solution: 54.6113
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138641
  time (eval):    0.0222148
  gflops (eval):  159.744
  gflops (total): 150.36
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138641,0.0222148,159.744,150.36

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127664
  gflops (total): 27.797
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341107
  gflops (eval):  104.034
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341107,104.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7478
  maximum absolute entry in einsum_ir solution: 55.7478
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0014339
  time (eval):    0.022171
  gflops (eval):  160.059
  gflops (total): 150.336
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0014339,0.022171,160.059,150.336

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127043
  gflops (total): 27.9328
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9328

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0350036
  gflops (eval):  101.38
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0350036,101.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3137
  maximum absolute entry in einsum_ir solution: 57.3137
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139938
  time (eval):    0.023144
  gflops (eval):  153.331
  gflops (total): 144.588
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139938,0.023144,153.331,144.588

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127291
  gflops (total): 27.8784
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0330128
  gflops (eval):  107.494
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0330128,107.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1635
  maximum absolute entry in einsum_ir solution: 56.1635
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136775
  time (eval):    0.0237602
  gflops (eval):  149.354
  gflops (total): 141.224
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136775,0.0237602,149.354,141.224

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127256
  gflops (total): 27.8862
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0349711
  gflops (eval):  101.475
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0349711,101.475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8236
  maximum absolute entry in einsum_ir solution: 56.8236
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137977
  time (eval):    0.0242836
  gflops (eval):  146.135
  gflops (total): 138.278
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137977,0.0242836,146.135,138.278

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125444
  gflops (total): 28.2889
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341848
  gflops (eval):  103.809
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341848,103.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2648
  maximum absolute entry in einsum_ir solution: 54.2648
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00149711
  time (eval):    0.0224806
  gflops (eval):  157.855
  gflops (total): 147.999
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00149711,0.0224806,157.855,147.999

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128006
  gflops (total): 27.7227
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337448
  gflops (eval):  105.162
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337448,105.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0926
  maximum absolute entry in einsum_ir solution: 57.0926
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139392
  time (eval):    0.0225201
  gflops (eval):  157.578
  gflops (total): 148.393
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139392,0.0225201,157.578,148.393

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126663
  gflops (total): 28.0167
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0337577
  gflops (eval):  105.122
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0337577,105.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6642
  maximum absolute entry in einsum_ir solution: 55.6642
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138225
  time (eval):    0.0225114
  gflops (eval):  157.639
  gflops (total): 148.52
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138225,0.0225114,157.639,148.52

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127255
  gflops (total): 27.8862
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338381
  gflops (eval):  104.872
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338381,104.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2536
  maximum absolute entry in einsum_ir solution: 53.2536
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139246
  time (eval):    0.0236695
  gflops (eval):  149.926
  gflops (total): 141.596
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139246,0.0236695,149.926,141.596

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125473
  gflops (total): 28.2824
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333043
  gflops (eval):  106.553
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333043,106.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8259
  maximum absolute entry in einsum_ir solution: 56.8259
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138535
  time (eval):    0.0242227
  gflops (eval):  146.502
  gflops (total): 138.577
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138535,0.0242227,146.502,138.577

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128762
  gflops (total): 27.5599
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.5599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0353192
  gflops (eval):  100.474
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0353192,100.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9485
  maximum absolute entry in einsum_ir solution: 60.9485
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138057
  time (eval):    0.0227172
  gflops (eval):  156.211
  gflops (total): 147.262
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138057,0.0227172,156.211,147.262

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126882
  gflops (total): 27.9684
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343225
  gflops (eval):  103.392
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343225,103.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3475
  maximum absolute entry in einsum_ir solution: 57.3475
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138663
  time (eval):    0.0217623
  gflops (eval):  163.065
  gflops (total): 153.297
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138663,0.0217623,163.065,153.297

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128375
  gflops (total): 27.643
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343885
  gflops (eval):  103.194
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343885,103.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3851
  maximum absolute entry in einsum_ir solution: 60.3851
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142409
  time (eval):    0.023206
  gflops (eval):  152.92
  gflops (total): 144.079
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142409,0.023206,152.92,144.079

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125987
  gflops (total): 28.1671
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033922
  gflops (eval):  104.613
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033922,104.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6618
  maximum absolute entry in einsum_ir solution: 58.6618
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139999
  time (eval):    0.0223198
  gflops (eval):  158.993
  gflops (total): 149.608
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139999,0.0223198,158.993,149.608

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126915
  gflops (total): 27.9611
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344554
  gflops (eval):  102.993
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344554,102.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.8388
  maximum absolute entry in einsum_ir solution: 53.8388
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138223
  time (eval):    0.0224968
  gflops (eval):  157.742
  gflops (total): 148.611
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138223,0.0224968,157.742,148.611

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125778
  gflops (total): 28.2138
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.2138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342804
  gflops (eval):  103.519
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342804,103.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8857
  maximum absolute entry in einsum_ir solution: 57.8857
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136054
  time (eval):    0.022945
  gflops (eval):  154.66
  gflops (total): 146.003
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136054,0.022945,154.66,146.003

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128151
  gflops (total): 27.6914
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.6914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.034172
  gflops (eval):  103.847
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.034172,103.847,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4727
  maximum absolute entry in einsum_ir solution: 59.4727
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137854
  time (eval):    0.0219407
  gflops (eval):  161.739
  gflops (total): 152.178
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137854,0.0219407,161.739,152.178

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127372
  gflops (total): 27.8606
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346395
  gflops (eval):  102.446
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346395,102.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7569
  maximum absolute entry in einsum_ir solution: 56.7569
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00145223
  time (eval):    0.0224449
  gflops (eval):  158.106
  gflops (total): 148.498
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00145223,0.0224449,158.106,148.498

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125965
  gflops (total): 28.172
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334712
  gflops (eval):  106.022
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334712,106.022,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8895
  maximum absolute entry in einsum_ir solution: 54.8895
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138418
  time (eval):    0.022274
  gflops (eval):  159.319
  gflops (total): 149.998
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138418,0.022274,159.319,149.998

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127841
  gflops (total): 27.7585
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340894
  gflops (eval):  104.099
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340894,104.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2456
  maximum absolute entry in einsum_ir solution: 55.2456
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141782
  time (eval):    0.0225606
  gflops (eval):  157.296
  gflops (total): 147.995
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141782,0.0225606,157.296,147.995

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.1282
  gflops (total): 27.6808
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.6808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339368
  gflops (eval):  104.567
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339368,104.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3775
  maximum absolute entry in einsum_ir solution: 59.3775
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013831
  time (eval):    0.0222655
  gflops (eval):  159.38
  gflops (total): 150.058
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013831,0.0222655,159.38,150.058

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128352
  gflops (total): 27.6479
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.6479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0338712
  gflops (eval):  104.77
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0338712,104.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3951
  maximum absolute entry in einsum_ir solution: 58.3951
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013852
  time (eval):    0.0219316
  gflops (eval):  161.806
  gflops (total): 152.194
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013852,0.0219316,161.806,152.194

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127171
  gflops (total): 27.9048
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343774
  gflops (eval):  103.227
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343774,103.227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9327
  maximum absolute entry in einsum_ir solution: 56.9327
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00141656
  time (eval):    0.022018
  gflops (eval):  161.171
  gflops (total): 151.429
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00141656,0.022018,161.171,151.429

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.129004
  gflops (total): 27.5083
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.5083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0343528
  gflops (eval):  103.301
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0343528,103.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7762
  maximum absolute entry in einsum_ir solution: 57.7762
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00172275
  time (eval):    0.0236066
  gflops (eval):  150.326
  gflops (total): 140.101
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00172275,0.0236066,150.326,140.101

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126749
  gflops (total): 27.9977
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341336
  gflops (eval):  103.964
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341336,103.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2272
  maximum absolute entry in einsum_ir solution: 57.2272
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137845
  time (eval):    0.0238864
  gflops (eval):  148.565
  gflops (total): 140.459
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137845,0.0238864,148.565,140.459

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.129039
  gflops (total): 27.5009
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.5009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339055
  gflops (eval):  104.664
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339055,104.664,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0381
  maximum absolute entry in einsum_ir solution: 61.0381
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138318
  time (eval):    0.0223228
  gflops (eval):  158.971
  gflops (total): 149.695
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138318,0.0223228,158.971,149.695

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127583
  gflops (total): 27.8146
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.033252
  gflops (eval):  106.721
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.033252,106.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3361
  maximum absolute entry in einsum_ir solution: 53.3361
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138466
  time (eval):    0.0218632
  gflops (eval):  162.313
  gflops (total): 152.646
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138466,0.0218632,162.313,152.646

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127583
  gflops (total): 27.8147
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340981
  gflops (eval):  104.073
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340981,104.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.193
  maximum absolute entry in einsum_ir solution: 56.193
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138936
  time (eval):    0.0218699
  gflops (eval):  162.263
  gflops (total): 152.571
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138936,0.0218699,162.263,152.571

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126863
  gflops (total): 27.9725
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339888
  gflops (eval):  104.407
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339888,104.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4055
  maximum absolute entry in einsum_ir solution: 57.4055
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139134
  time (eval):    0.0221541
  gflops (eval):  160.182
  gflops (total): 150.716
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139134,0.0221541,160.182,150.716

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127263
  gflops (total): 27.8845
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0347215
  gflops (eval):  102.204
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0347215,102.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7034
  maximum absolute entry in einsum_ir solution: 55.7034
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.0013695
  time (eval):    0.0225959
  gflops (eval):  157.05
  gflops (total): 148.075
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.0013695,0.0225959,157.05,148.075

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125648
  gflops (total): 28.243
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0339402
  gflops (eval):  104.557
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0339402,104.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4204
  maximum absolute entry in einsum_ir solution: 56.4204
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138139
  time (eval):    0.0230843
  gflops (eval):  153.727
  gflops (total): 145.047
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138139,0.0230843,153.727,145.047

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12507
  gflops (total): 28.3734
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.3734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0342462
  gflops (eval):  103.623
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0342462,103.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9746
  maximum absolute entry in einsum_ir solution: 55.9746
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138696
  time (eval):    0.0218439
  gflops (eval):  162.456
  gflops (total): 152.757
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138696,0.0218439,162.456,152.757

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128124
  gflops (total): 27.6972
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.6972

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335867
  gflops (eval):  105.657
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335867,105.657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7256
  maximum absolute entry in einsum_ir solution: 55.7256
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00151191
  time (eval):    0.0229017
  gflops (eval):  154.953
  gflops (total): 145.357
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00151191,0.0229017,154.953,145.357

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127704
  gflops (total): 27.7883
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.7883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0332092
  gflops (eval):  106.858
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0332092,106.858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9018
  maximum absolute entry in einsum_ir solution: 57.9018
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00136472
  time (eval):    0.0232947
  gflops (eval):  152.338
  gflops (total): 143.908
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00136472,0.0232947,152.338,143.908

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127639
  gflops (total): 27.8024
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346344
  gflops (eval):  102.461
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346344,102.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0506
  maximum absolute entry in einsum_ir solution: 56.0506
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139088
  time (eval):    0.0218725
  gflops (eval):  162.244
  gflops (total): 152.544
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139088,0.0218725,162.244,152.544

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126726
  gflops (total): 28.0027
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344648
  gflops (eval):  102.965
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344648,102.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6081
  maximum absolute entry in einsum_ir solution: 55.6081
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137832
  time (eval):    0.022247
  gflops (eval):  159.512
  gflops (total): 150.206
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137832,0.022247,159.512,150.206

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127529
  gflops (total): 27.8265
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336696
  gflops (eval):  105.397
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336696,105.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6327
  maximum absolute entry in einsum_ir solution: 56.6327
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137607
  time (eval):    0.0218843
  gflops (eval):  162.156
  gflops (total): 152.563
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137607,0.0218843,162.156,152.563

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127438
  gflops (total): 27.8462
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0346432
  gflops (eval):  102.435
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0346432,102.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2631
  maximum absolute entry in einsum_ir solution: 54.2631
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00148904
  time (eval):    0.0223991
  gflops (eval):  158.429
  gflops (total): 148.554
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00148904,0.0223991,158.429,148.554

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.12673
  gflops (total): 28.0018
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344217
  gflops (eval):  103.094
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344217,103.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9034
  maximum absolute entry in einsum_ir solution: 57.9034
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00142161
  time (eval):    0.0226012
  gflops (eval):  157.013
  gflops (total): 147.721
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00142161,0.0226012,157.013,147.721

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127406
  gflops (total): 27.8534
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0345473
  gflops (eval):  102.719
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0345473,102.719,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6361
  maximum absolute entry in einsum_ir solution: 57.6361
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00139099
  time (eval):    0.0222102
  gflops (eval):  159.777
  gflops (total): 150.36
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00139099,0.0222102,159.777,150.36

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.128088
  gflops (total): 27.705
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335546
  gflops (eval):  105.758
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335546,105.758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6209
  maximum absolute entry in einsum_ir solution: 56.6209
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138368
  time (eval):    0.0221813
  gflops (eval):  159.985
  gflops (total): 150.591
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138368,0.0221813,159.985,150.591

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125052
  gflops (total): 28.3777
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.3777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340647
  gflops (eval):  104.175
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340647,104.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0049
  maximum absolute entry in einsum_ir solution: 53.0049
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138176
  time (eval):    0.0224236
  gflops (eval):  158.256
  gflops (total): 149.07
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138176,0.0224236,158.256,149.07

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126022
  gflops (total): 28.1591
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1591

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0336347
  gflops (eval):  105.506
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0336347,105.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1041
  maximum absolute entry in einsum_ir solution: 58.1041
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140363
  time (eval):    0.022316
  gflops (eval):  159.019
  gflops (total): 149.609
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140363,0.022316,159.019,149.609

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126873
  gflops (total): 27.9702
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0335968
  gflops (eval):  105.625
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0335968,105.625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9863
  maximum absolute entry in einsum_ir solution: 54.9863
  maximum element-wise difference:              1.23978e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00172303
  time (eval):    0.022408
  gflops (eval):  158.366
  gflops (total): 147.059
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00172303,0.022408,158.366,147.059

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127533
  gflops (total): 27.8255
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0350045
  gflops (eval):  101.378
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0350045,101.378,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5552
  maximum absolute entry in einsum_ir solution: 59.5552
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138717
  time (eval):    0.022164
  gflops (eval):  160.11
  gflops (total): 150.679
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138717,0.022164,160.11,150.679

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127218
  gflops (total): 27.8944
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0348766
  gflops (eval):  101.749
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0348766,101.749,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9177
  maximum absolute entry in einsum_ir solution: 58.9177
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138497
  time (eval):    0.0224372
  gflops (eval):  158.16
  gflops (total): 148.965
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138497,0.0224372,158.16,148.965

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126495
  gflops (total): 28.0538
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0538

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0351999
  gflops (eval):  100.815
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0351999,100.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1074
  maximum absolute entry in einsum_ir solution: 55.1074
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00137599
  time (eval):    0.0225695
  gflops (eval):  157.233
  gflops (total): 148.198
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00137599,0.0225695,157.233,148.198

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127607
  gflops (total): 27.8095
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.8095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0334268
  gflops (eval):  106.162
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0334268,106.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4711
  maximum absolute entry in einsum_ir solution: 62.4711
  maximum element-wise difference:              1.33514e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138701
  time (eval):    0.022927
  gflops (eval):  154.782
  gflops (total): 145.952
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138701,0.022927,154.782,145.952

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.125852
  gflops (total): 28.1971
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.1971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0344163
  gflops (eval):  103.11
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0344163,103.11,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7042
  maximum absolute entry in einsum_ir solution: 54.7042
  maximum element-wise difference:              1.52588e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00140832
  time (eval):    0.0230921
  gflops (eval):  153.675
  gflops (total): 144.841
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00140832,0.0230921,153.675,144.841

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126339
  gflops (total): 28.0885
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0341422
  gflops (eval):  103.938
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0341422,103.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3453
  maximum absolute entry in einsum_ir solution: 56.3453
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00138461
  time (eval):    0.0219327
  gflops (eval):  161.799
  gflops (total): 152.191
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00138461,0.0219327,161.799,152.191

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.127094
  gflops (total): 27.9217
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,27.9217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0340604
  gflops (eval):  104.188
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0340604,104.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3546
  maximum absolute entry in einsum_ir solution: 54.3546
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,b,e,a
  e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 96
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 1 4 0 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,1,4,0]->[0,1,4,3]],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         3548676096
  time (compile): 0.00182475
  time (eval):    0.0236039
  gflops (eval):  150.343
  gflops (total): 139.554
CSV_DATA: einsum_ir,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0.00182475,0.0236039,150.343,139.554

*** benchmarking at::einsum ***
  #flops:         3548676096
  time (total):   0.126738
  gflops (total): 28.0001
CSV_DATA: at::einsum,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0,0,28.0001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 96
  #flops:         3548676096
  time (eval):    0.0333501
  gflops (eval):  106.407
CSV_DATA: at::matmul,"dbea,ec->abcd","96,84,24,96,96","(0,1)",3548676096,0,0.0333501,106.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8038
  maximum absolute entry in einsum_ir solution: 55.8038
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138439
  time (eval):    0.0459023
  gflops (eval):  148.316
  gflops (total): 143.974
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138439,0.0459023,148.316,143.974

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217738
  gflops (total): 31.2671
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477336
  gflops (eval):  142.626
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477336,142.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.7159
  maximum absolute entry in einsum_ir solution: 48.7159
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138465
  time (eval):    0.0454654
  gflops (eval):  149.741
  gflops (total): 145.316
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138465,0.0454654,149.741,145.316

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21808
  gflops (total): 31.2181
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478084
  gflops (eval):  142.403
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478084,142.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.281
  maximum absolute entry in einsum_ir solution: 42.281
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137845
  time (eval):    0.0454278
  gflops (eval):  149.865
  gflops (total): 145.452
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137845,0.0454278,149.865,145.452

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216238
  gflops (total): 31.4841
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478012
  gflops (eval):  142.424
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478012,142.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5446
  maximum absolute entry in einsum_ir solution: 44.5446
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136527
  time (eval):    0.0457342
  gflops (eval):  148.861
  gflops (total): 144.546
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136527,0.0457342,148.861,144.546

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217593
  gflops (total): 31.288
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048412
  gflops (eval):  140.627
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048412,140.627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5109
  maximum absolute entry in einsum_ir solution: 41.5109
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138505
  time (eval):    0.0457244
  gflops (eval):  148.893
  gflops (total): 144.515
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138505,0.0457244,148.893,144.515

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.220072
  gflops (total): 30.9356
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,30.9356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482228
  gflops (eval):  141.179
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482228,141.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7456
  maximum absolute entry in einsum_ir solution: 42.7456
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00169322
  time (eval):    0.0454434
  gflops (eval):  149.814
  gflops (total): 144.432
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00169322,0.0454434,149.814,144.432

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217533
  gflops (total): 31.2966
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481856
  gflops (eval):  141.288
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481856,141.288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.809
  maximum absolute entry in einsum_ir solution: 44.809
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137294
  time (eval):    0.0457929
  gflops (eval):  148.67
  gflops (total): 144.343
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137294,0.0457929,148.67,144.343

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217379
  gflops (total): 31.3188
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478758
  gflops (eval):  142.202
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478758,142.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1723
  maximum absolute entry in einsum_ir solution: 44.1723
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138835
  time (eval):    0.045604
  gflops (eval):  149.286
  gflops (total): 144.876
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138835,0.045604,149.286,144.876

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21698
  gflops (total): 31.3763
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048082
  gflops (eval):  141.592
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048082,141.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.7792
  maximum absolute entry in einsum_ir solution: 43.7792
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138595
  time (eval):    0.0457755
  gflops (eval):  148.727
  gflops (total): 144.356
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138595,0.0457755,148.727,144.356

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217587
  gflops (total): 31.2889
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477483
  gflops (eval):  142.582
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477483,142.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2812
  maximum absolute entry in einsum_ir solution: 42.2812
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137669
  time (eval):    0.0452905
  gflops (eval):  150.319
  gflops (total): 145.885
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137669,0.0452905,150.319,145.885

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216955
  gflops (total): 31.38
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.38

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481355
  gflops (eval):  141.435
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481355,141.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1821
  maximum absolute entry in einsum_ir solution: 44.1821
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0013851
  time (eval):    0.0457057
  gflops (eval):  148.954
  gflops (total): 144.573
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0013851,0.0457057,148.954,144.573

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21699
  gflops (total): 31.3749
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3749

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478093
  gflops (eval):  142.4
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478093,142.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4763
  maximum absolute entry in einsum_ir solution: 44.4763
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138453
  time (eval):    0.0456424
  gflops (eval):  149.161
  gflops (total): 144.769
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138453,0.0456424,149.161,144.769

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217598
  gflops (total): 31.2873
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481156
  gflops (eval):  141.493
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481156,141.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.687
  maximum absolute entry in einsum_ir solution: 42.687
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137722
  time (eval):    0.0456467
  gflops (eval):  149.146
  gflops (total): 144.778
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137722,0.0456467,149.146,144.778

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217032
  gflops (total): 31.3688
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476957
  gflops (eval):  142.739
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476957,142.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.9588
  maximum absolute entry in einsum_ir solution: 42.9588
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138179
  time (eval):    0.045465
  gflops (eval):  149.743
  gflops (total): 145.326
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138179,0.045465,149.743,145.326

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217725
  gflops (total): 31.269
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481597
  gflops (eval):  141.364
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481597,141.364,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4001
  maximum absolute entry in einsum_ir solution: 43.4001
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136934
  time (eval):    0.0455955
  gflops (eval):  149.314
  gflops (total): 144.96
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136934,0.0455955,149.314,144.96

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217926
  gflops (total): 31.2401
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478734
  gflops (eval):  142.209
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478734,142.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0179
  maximum absolute entry in einsum_ir solution: 44.0179
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00143481
  time (eval):    0.0457558
  gflops (eval):  148.791
  gflops (total): 144.267
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00143481,0.0457558,148.791,144.267

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21743
  gflops (total): 31.3115
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480088
  gflops (eval):  141.808
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480088,141.808,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.3307
  maximum absolute entry in einsum_ir solution: 46.3307
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137583
  time (eval):    0.0455972
  gflops (eval):  149.308
  gflops (total): 144.935
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137583,0.0455972,149.308,144.935

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21782
  gflops (total): 31.2554
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477049
  gflops (eval):  142.711
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477049,142.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8641
  maximum absolute entry in einsum_ir solution: 43.8641
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138122
  time (eval):    0.0458341
  gflops (eval):  148.537
  gflops (total): 144.192
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138122,0.0458341,148.537,144.192

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217464
  gflops (total): 31.3065
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481656
  gflops (eval):  141.346
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481656,141.346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.4722
  maximum absolute entry in einsum_ir solution: 43.4722
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00144023
  time (eval):    0.0457657
  gflops (eval):  148.759
  gflops (total): 144.22
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00144023,0.0457657,148.759,144.22

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21744
  gflops (total): 31.3099
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479459
  gflops (eval):  141.994
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479459,141.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.6456
  maximum absolute entry in einsum_ir solution: 45.6456
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00145845
  time (eval):    0.0454172
  gflops (eval):  149.9
  gflops (total): 145.236
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00145845,0.0454172,149.9,145.236

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217162
  gflops (total): 31.35
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475818
  gflops (eval):  143.081
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475818,143.081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0284
  maximum absolute entry in einsum_ir solution: 43.0284
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00146618
  time (eval):    0.0457237
  gflops (eval):  148.895
  gflops (total): 144.269
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00146618,0.0457237,148.895,144.269

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21673
  gflops (total): 31.4126
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477882
  gflops (eval):  142.463
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477882,142.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3861
  maximum absolute entry in einsum_ir solution: 44.3861
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137838
  time (eval):    0.0456266
  gflops (eval):  149.212
  gflops (total): 144.837
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137838,0.0456266,149.212,144.837

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217457
  gflops (total): 31.3076
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479756
  gflops (eval):  141.906
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479756,141.906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7204
  maximum absolute entry in einsum_ir solution: 42.7204
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00139534
  time (eval):    0.0457897
  gflops (eval):  148.681
  gflops (total): 144.284
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00139534,0.0457897,148.681,144.284

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217211
  gflops (total): 31.343
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480134
  gflops (eval):  141.795
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480134,141.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8913
  maximum absolute entry in einsum_ir solution: 43.8913
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136518
  time (eval):    0.0456878
  gflops (eval):  149.012
  gflops (total): 144.689
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136518,0.0456878,149.012,144.689

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217518
  gflops (total): 31.2987
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477049
  gflops (eval):  142.712
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477049,142.712,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9696
  maximum absolute entry in einsum_ir solution: 46.9696
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136431
  time (eval):    0.0456833
  gflops (eval):  149.027
  gflops (total): 144.706
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136431,0.0456833,149.027,144.706

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217488
  gflops (total): 31.3031
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047849
  gflops (eval):  142.282
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047849,142.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.4889
  maximum absolute entry in einsum_ir solution: 40.4889
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137428
  time (eval):    0.0455797
  gflops (eval):  149.366
  gflops (total): 144.994
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137428,0.0455797,149.366,144.994

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217455
  gflops (total): 31.3078
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476186
  gflops (eval):  142.97
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476186,142.97,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.622
  maximum absolute entry in einsum_ir solution: 42.622
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00140396
  time (eval):    0.0456657
  gflops (eval):  149.084
  gflops (total): 144.638
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00140396,0.0456657,149.084,144.638

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217352
  gflops (total): 31.3226
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479731
  gflops (eval):  141.914
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479731,141.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6641
  maximum absolute entry in einsum_ir solution: 43.6641
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137589
  time (eval):    0.0455411
  gflops (eval):  149.492
  gflops (total): 145.108
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137589,0.0455411,149.492,145.108

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217205
  gflops (total): 31.3438
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475482
  gflops (eval):  143.182
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475482,143.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.5552
  maximum absolute entry in einsum_ir solution: 41.5552
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00145906
  time (eval):    0.0459215
  gflops (eval):  148.254
  gflops (total): 143.689
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00145906,0.0459215,148.254,143.689

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217901
  gflops (total): 31.2437
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480752
  gflops (eval):  141.612
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480752,141.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.9738
  maximum absolute entry in einsum_ir solution: 46.9738
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136302
  time (eval):    0.045592
  gflops (eval):  149.325
  gflops (total): 144.991
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136302,0.045592,149.325,144.991

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217401
  gflops (total): 31.3156
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.047611
  gflops (eval):  142.993
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.047611,142.993,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6961
  maximum absolute entry in einsum_ir solution: 43.6961
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137727
  time (eval):    0.0456849
  gflops (eval):  149.022
  gflops (total): 144.661
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137727,0.0456849,149.022,144.661

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218351
  gflops (total): 31.1793
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.1793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048072
  gflops (eval):  141.622
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048072,141.622,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4315
  maximum absolute entry in einsum_ir solution: 42.4315
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00143624
  time (eval):    0.0456007
  gflops (eval):  149.297
  gflops (total): 144.738
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00143624,0.0456007,149.297,144.738

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217329
  gflops (total): 31.326
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0490225
  gflops (eval):  138.876
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0490225,138.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.2004
  maximum absolute entry in einsum_ir solution: 41.2004
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137939
  time (eval):    0.0455103
  gflops (eval):  149.593
  gflops (total): 145.193
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137939,0.0455103,149.593,145.193

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218232
  gflops (total): 31.1964
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.1964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480079
  gflops (eval):  141.811
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480079,141.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.7899
  maximum absolute entry in einsum_ir solution: 48.7899
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138116
  time (eval):    0.045704
  gflops (eval):  148.96
  gflops (total): 144.59
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138116,0.045704,148.96,144.59

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217142
  gflops (total): 31.353
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475015
  gflops (eval):  143.323
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475015,143.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.0181
  maximum absolute entry in einsum_ir solution: 45.0181
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137883
  time (eval):    0.0459507
  gflops (eval):  148.16
  gflops (total): 143.843
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137883,0.0459507,148.16,143.843

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218007
  gflops (total): 31.2286
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0485752
  gflops (eval):  140.155
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0485752,140.155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.2859
  maximum absolute entry in einsum_ir solution: 47.2859
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137465
  time (eval):    0.0454435
  gflops (eval):  149.813
  gflops (total): 145.415
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137465,0.0454435,149.813,145.415

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217255
  gflops (total): 31.3366
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478116
  gflops (eval):  142.393
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478116,142.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6865
  maximum absolute entry in einsum_ir solution: 40.6865
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137976
  time (eval):    0.0456444
  gflops (eval):  149.154
  gflops (total): 144.777
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137976,0.0456444,149.154,144.777

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217443
  gflops (total): 31.3095
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480901
  gflops (eval):  141.569
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480901,141.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.5209
  maximum absolute entry in einsum_ir solution: 48.5209
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137867
  time (eval):    0.0456652
  gflops (eval):  149.086
  gflops (total): 144.717
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137867,0.0456652,149.086,144.717

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216427
  gflops (total): 31.4565
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483837
  gflops (eval):  140.709
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483837,140.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2238
  maximum absolute entry in einsum_ir solution: 45.2238
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138488
  time (eval):    0.0457292
  gflops (eval):  148.877
  gflops (total): 144.501
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138488,0.0457292,148.877,144.501

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218149
  gflops (total): 31.2082
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479118
  gflops (eval):  142.095
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479118,142.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.6003
  maximum absolute entry in einsum_ir solution: 42.6003
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00145349
  time (eval):    0.0456222
  gflops (eval):  149.227
  gflops (total): 144.619
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00145349,0.0456222,149.227,144.619

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217276
  gflops (total): 31.3336
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477529
  gflops (eval):  142.568
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477529,142.568,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6072
  maximum absolute entry in einsum_ir solution: 41.6072
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00143985
  time (eval):    0.0455644
  gflops (eval):  149.416
  gflops (total): 144.839
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00143985,0.0455644,149.416,144.839

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21751
  gflops (total): 31.2999
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478572
  gflops (eval):  142.257
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478572,142.257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8922
  maximum absolute entry in einsum_ir solution: 40.8922
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136299
  time (eval):    0.0456654
  gflops (eval):  149.085
  gflops (total): 144.765
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136299,0.0456654,149.085,144.765

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.2164
  gflops (total): 31.4604
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481371
  gflops (eval):  141.43
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481371,141.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.174
  maximum absolute entry in einsum_ir solution: 44.174
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138103
  time (eval):    0.0456155
  gflops (eval):  149.248
  gflops (total): 144.863
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138103,0.0456155,149.248,144.863

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218031
  gflops (total): 31.2251
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0489672
  gflops (eval):  139.033
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0489672,139.033,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.9242
  maximum absolute entry in einsum_ir solution: 45.9242
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138503
  time (eval):    0.0453433
  gflops (eval):  150.145
  gflops (total): 145.694
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138503,0.0453433,150.145,145.694

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21694
  gflops (total): 31.3822
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0493889
  gflops (eval):  137.846
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0493889,137.846,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.2528
  maximum absolute entry in einsum_ir solution: 47.2528
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136893
  time (eval):    0.0456867
  gflops (eval):  149.016
  gflops (total): 144.681
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136893,0.0456867,149.016,144.681

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217654
  gflops (total): 31.2791
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475758
  gflops (eval):  143.099
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475758,143.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0714
  maximum absolute entry in einsum_ir solution: 43.0714
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137413
  time (eval):    0.0457567
  gflops (eval):  148.788
  gflops (total): 144.45
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137413,0.0457567,148.788,144.45

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217171
  gflops (total): 31.3488
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483417
  gflops (eval):  140.832
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483417,140.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6049
  maximum absolute entry in einsum_ir solution: 43.6049
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136721
  time (eval):    0.0457569
  gflops (eval):  148.787
  gflops (total): 144.47
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136721,0.0457569,148.787,144.47

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217733
  gflops (total): 31.2679
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479938
  gflops (eval):  141.853
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479938,141.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.2927
  maximum absolute entry in einsum_ir solution: 47.2927
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138122
  time (eval):    0.0457293
  gflops (eval):  148.877
  gflops (total): 144.512
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138122,0.0457293,148.877,144.512

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217427
  gflops (total): 31.3119
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481565
  gflops (eval):  141.373
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481565,141.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8675
  maximum absolute entry in einsum_ir solution: 44.8675
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138145
  time (eval):    0.0457408
  gflops (eval):  148.84
  gflops (total): 144.476
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138145,0.0457408,148.84,144.476

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217054
  gflops (total): 31.3657
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477852
  gflops (eval):  142.472
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477852,142.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.3198
  maximum absolute entry in einsum_ir solution: 40.3198
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138411
  time (eval):    0.0457079
  gflops (eval):  148.947
  gflops (total): 144.569
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138411,0.0457079,148.947,144.569

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217928
  gflops (total): 31.2399
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482848
  gflops (eval):  140.998
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482848,140.998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.376
  maximum absolute entry in einsum_ir solution: 44.376
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137145
  time (eval):    0.0455388
  gflops (eval):  149.5
  gflops (total): 145.129
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137145,0.0455388,149.5,145.129

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217459
  gflops (total): 31.3073
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3073

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048024
  gflops (eval):  141.763
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048024,141.763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.9405
  maximum absolute entry in einsum_ir solution: 41.9405
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137922
  time (eval):    0.0456631
  gflops (eval):  149.093
  gflops (total): 144.722
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137922,0.0456631,149.093,144.722

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217599
  gflops (total): 31.2871
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478148
  gflops (eval):  142.384
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478148,142.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.7219
  maximum absolute entry in einsum_ir solution: 47.7219
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137834
  time (eval):    0.0456987
  gflops (eval):  148.977
  gflops (total): 144.615
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137834,0.0456987,148.977,144.615

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21772
  gflops (total): 31.2697
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0475534
  gflops (eval):  143.166
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0475534,143.166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.0726
  maximum absolute entry in einsum_ir solution: 40.0726
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137491
  time (eval):    0.0455178
  gflops (eval):  149.569
  gflops (total): 145.184
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137491,0.0455178,149.569,145.184

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217148
  gflops (total): 31.3521
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3521

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479227
  gflops (eval):  142.063
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479227,142.063,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.4242
  maximum absolute entry in einsum_ir solution: 42.4242
  maximum element-wise difference:              8.10623e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138331
  time (eval):    0.0456599
  gflops (eval):  149.103
  gflops (total): 144.719
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138331,0.0456599,149.103,144.719

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217648
  gflops (total): 31.28
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048687
  gflops (eval):  139.833
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048687,139.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8663
  maximum absolute entry in einsum_ir solution: 43.8663
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00142434
  time (eval):    0.0456217
  gflops (eval):  149.228
  gflops (total): 144.71
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00142434,0.0456217,149.228,144.71

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217779
  gflops (total): 31.2612
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481033
  gflops (eval):  141.53
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481033,141.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.8822
  maximum absolute entry in einsum_ir solution: 44.8822
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00139486
  time (eval):    0.045784
  gflops (eval):  148.699
  gflops (total): 144.303
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00139486,0.045784,148.699,144.303

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217542
  gflops (total): 31.2952
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481711
  gflops (eval):  141.33
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481711,141.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0885
  maximum absolute entry in einsum_ir solution: 44.0885
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138882
  time (eval):    0.04554
  gflops (eval):  149.496
  gflops (total): 145.072
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138882,0.04554,149.496,145.072

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21633
  gflops (total): 31.4707
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481776
  gflops (eval):  141.311
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481776,141.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.1391
  maximum absolute entry in einsum_ir solution: 44.1391
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00168363
  time (eval):    0.0458384
  gflops (eval):  148.523
  gflops (total): 143.261
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00168363,0.0458384,148.523,143.261

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216708
  gflops (total): 31.4158
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.048149
  gflops (eval):  141.395
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.048149,141.395,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.534
  maximum absolute entry in einsum_ir solution: 44.534
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136158
  time (eval):    0.0460064
  gflops (eval):  147.98
  gflops (total): 143.727
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136158,0.0460064,147.98,143.727

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217145
  gflops (total): 31.3525
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479426
  gflops (eval):  142.004
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479426,142.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.1687
  maximum absolute entry in einsum_ir solution: 43.1687
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137397
  time (eval):    0.0457387
  gflops (eval):  148.846
  gflops (total): 144.505
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137397,0.0457387,148.846,144.505

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217322
  gflops (total): 31.327
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0486135
  gflops (eval):  140.044
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0486135,140.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.5756
  maximum absolute entry in einsum_ir solution: 43.5756
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0013791
  time (eval):    0.0457995
  gflops (eval):  148.649
  gflops (total): 144.304
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0013791,0.0457995,148.649,144.304

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217302
  gflops (total): 31.3299
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0493533
  gflops (eval):  137.945
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0493533,137.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9061
  maximum absolute entry in einsum_ir solution: 44.9061
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138176
  time (eval):    0.0457972
  gflops (eval):  148.656
  gflops (total): 144.303
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138176,0.0457972,148.656,144.303

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21729
  gflops (total): 31.3316
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479157
  gflops (eval):  142.084
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479157,142.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.1722
  maximum absolute entry in einsum_ir solution: 46.1722
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00145127
  time (eval):    0.0457303
  gflops (eval):  148.874
  gflops (total): 144.295
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00145127,0.0457303,148.874,144.295

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217292
  gflops (total): 31.3314
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477056
  gflops (eval):  142.71
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477056,142.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3391
  maximum absolute entry in einsum_ir solution: 43.3391
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138179
  time (eval):    0.0454873
  gflops (eval):  149.669
  gflops (total): 145.257
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138179,0.0454873,149.669,145.257

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217638
  gflops (total): 31.2815
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482569
  gflops (eval):  141.079
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482569,141.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.6761
  maximum absolute entry in einsum_ir solution: 41.6761
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137127
  time (eval):    0.0456349
  gflops (eval):  149.185
  gflops (total): 144.833
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137127,0.0456349,149.185,144.833

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217182
  gflops (total): 31.3472
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477755
  gflops (eval):  142.501
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477755,142.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.2347
  maximum absolute entry in einsum_ir solution: 46.2347
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0013774
  time (eval):    0.0457222
  gflops (eval):  148.9
  gflops (total): 144.546
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0013774,0.0457222,148.9,144.546

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218206
  gflops (total): 31.2001
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483251
  gflops (eval):  140.88
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483251,140.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      48.8845
  maximum absolute entry in einsum_ir solution: 48.8845
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00165073
  time (eval):    0.0457377
  gflops (eval):  148.85
  gflops (total): 143.665
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00165073,0.0457377,148.85,143.665

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217738
  gflops (total): 31.2671
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479185
  gflops (eval):  142.075
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479185,142.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.911
  maximum absolute entry in einsum_ir solution: 45.911
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137422
  time (eval):    0.0456997
  gflops (eval):  148.974
  gflops (total): 144.625
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137422,0.0456997,148.974,144.625

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216568
  gflops (total): 31.4361
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0485524
  gflops (eval):  140.221
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0485524,140.221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.5183
  maximum absolute entry in einsum_ir solution: 45.5183
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137793
  time (eval):    0.0457976
  gflops (eval):  148.655
  gflops (total): 144.313
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137793,0.0457976,148.655,144.313

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217331
  gflops (total): 31.3257
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0474934
  gflops (eval):  143.347
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0474934,143.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8084
  maximum absolute entry in einsum_ir solution: 41.8084
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137827
  time (eval):    0.0455965
  gflops (eval):  149.311
  gflops (total): 144.93
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137827,0.0455965,149.311,144.93

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217279
  gflops (total): 31.3332
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479375
  gflops (eval):  142.019
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479375,142.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.6938
  maximum absolute entry in einsum_ir solution: 43.6938
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137382
  time (eval):    0.0455689
  gflops (eval):  149.401
  gflops (total): 145.029
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137382,0.0455689,149.401,145.029

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217872
  gflops (total): 31.2479
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0486366
  gflops (eval):  139.978
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0486366,139.978,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.2756
  maximum absolute entry in einsum_ir solution: 45.2756
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138366
  time (eval):    0.0455666
  gflops (eval):  149.409
  gflops (total): 145.005
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138366,0.0455666,149.409,145.005

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218015
  gflops (total): 31.2274
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478864
  gflops (eval):  142.171
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478864,142.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.713
  maximum absolute entry in einsum_ir solution: 43.713
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138712
  time (eval):    0.045616
  gflops (eval):  149.247
  gflops (total): 144.842
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138712,0.045616,149.247,144.842

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216985
  gflops (total): 31.3756
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477505
  gflops (eval):  142.575
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477505,142.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.8397
  maximum absolute entry in einsum_ir solution: 45.8397
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00143701
  time (eval):    0.0455032
  gflops (eval):  149.617
  gflops (total): 145.037
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00143701,0.0455032,149.617,145.037

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218339
  gflops (total): 31.1811
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.1811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0483754
  gflops (eval):  140.734
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0483754,140.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.8946
  maximum absolute entry in einsum_ir solution: 41.8946
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00160647
  time (eval):    0.0457092
  gflops (eval):  148.943
  gflops (total): 143.886
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00160647,0.0457092,148.943,143.886

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216092
  gflops (total): 31.5053
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.5053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.04797
  gflops (eval):  141.923
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.04797,141.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.831
  maximum absolute entry in einsum_ir solution: 47.831
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138635
  time (eval):    0.0457167
  gflops (eval):  148.918
  gflops (total): 144.535
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138635,0.0457167,148.918,144.535

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.224033
  gflops (total): 30.3886
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,30.3886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480839
  gflops (eval):  141.587
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480839,141.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.2219
  maximum absolute entry in einsum_ir solution: 42.2219
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138271
  time (eval):    0.0454775
  gflops (eval):  149.701
  gflops (total): 145.284
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138271,0.0454775,149.701,145.284

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217379
  gflops (total): 31.3187
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478907
  gflops (eval):  142.158
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478907,142.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.5594
  maximum absolute entry in einsum_ir solution: 44.5594
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0013762
  time (eval):    0.045545
  gflops (eval):  149.479
  gflops (total): 145.095
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0013762,0.045545,149.479,145.095

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217292
  gflops (total): 31.3312
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0496476
  gflops (eval):  137.127
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0496476,137.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.3683
  maximum absolute entry in einsum_ir solution: 41.3683
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136802
  time (eval):    0.0455067
  gflops (eval):  149.605
  gflops (total): 145.239
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136802,0.0455067,149.605,145.239

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216914
  gflops (total): 31.3859
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479555
  gflops (eval):  141.966
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479555,141.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.0292
  maximum absolute entry in einsum_ir solution: 44.0292
  maximum element-wise difference:              1.04904e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137052
  time (eval):    0.0456091
  gflops (eval):  149.269
  gflops (total): 144.915
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137052,0.0456091,149.269,144.915

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218417
  gflops (total): 31.1699
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.1699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0494384
  gflops (eval):  137.708
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0494384,137.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.1858
  maximum absolute entry in einsum_ir solution: 45.1858
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0014395
  time (eval):    0.0457941
  gflops (eval):  148.666
  gflops (total): 144.136
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0014395,0.0457941,148.666,144.136

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.215926
  gflops (total): 31.5295
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.5295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0479964
  gflops (eval):  141.845
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0479964,141.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7539
  maximum absolute entry in einsum_ir solution: 41.7539
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00164183
  time (eval):    0.0454094
  gflops (eval):  149.926
  gflops (total): 144.694
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00164183,0.0454094,149.926,144.694

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218048
  gflops (total): 31.2227
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0480552
  gflops (eval):  141.671
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0480552,141.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.3073
  maximum absolute entry in einsum_ir solution: 44.3073
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137859
  time (eval):    0.0457242
  gflops (eval):  148.894
  gflops (total): 144.536
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137859,0.0457242,148.894,144.536

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216943
  gflops (total): 31.3817
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477258
  gflops (eval):  142.649
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477258,142.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      41.7484
  maximum absolute entry in einsum_ir solution: 41.7484
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00139158
  time (eval):    0.0457216
  gflops (eval):  148.902
  gflops (total): 144.504
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00139158,0.0457216,148.902,144.504

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218125
  gflops (total): 31.2116
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482131
  gflops (eval):  141.207
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482131,141.207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9148
  maximum absolute entry in einsum_ir solution: 44.9148
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0016318
  time (eval):    0.045731
  gflops (eval):  148.872
  gflops (total): 143.742
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0016318,0.045731,148.872,143.742

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216416
  gflops (total): 31.4582
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477278
  gflops (eval):  142.643
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477278,142.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.4751
  maximum absolute entry in einsum_ir solution: 49.4751
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138271
  time (eval):    0.0457011
  gflops (eval):  148.969
  gflops (total): 144.594
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138271,0.0457011,148.969,144.594

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217104
  gflops (total): 31.3585
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0484639
  gflops (eval):  140.477
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0484639,140.477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.4199
  maximum absolute entry in einsum_ir solution: 45.4199
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00139299
  time (eval):    0.0453693
  gflops (eval):  150.058
  gflops (total): 145.588
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00139299,0.0453693,150.058,145.588

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216816
  gflops (total): 31.4002
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477034
  gflops (eval):  142.716
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477034,142.716,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      46.8324
  maximum absolute entry in einsum_ir solution: 46.8324
  maximum element-wise difference:              1.14441e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137141
  time (eval):    0.0458282
  gflops (eval):  148.556
  gflops (total): 144.239
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137141,0.0458282,148.556,144.239

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218151
  gflops (total): 31.2079
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482302
  gflops (eval):  141.157
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482302,141.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9419
  maximum absolute entry in einsum_ir solution: 44.9419
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00145544
  time (eval):    0.0455226
  gflops (eval):  149.553
  gflops (total): 144.92
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00145544,0.0455226,149.553,144.92

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216828
  gflops (total): 31.3984
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0476152
  gflops (eval):  142.981
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0476152,142.981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.3969
  maximum absolute entry in einsum_ir solution: 43.3969
  maximum element-wise difference:              8.58307e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00152335
  time (eval):    0.0457393
  gflops (eval):  148.845
  gflops (total): 144.047
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00152335,0.0457393,148.845,144.047

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21789
  gflops (total): 31.2453
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2453

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0487489
  gflops (eval):  139.655
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0487489,139.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.64
  maximum absolute entry in einsum_ir solution: 45.64
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137342
  time (eval):    0.045536
  gflops (eval):  149.509
  gflops (total): 145.132
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137342,0.045536,149.509,145.132

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216609
  gflops (total): 31.4301
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0478115
  gflops (eval):  142.393
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0478115,142.393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.3766
  maximum absolute entry in einsum_ir solution: 42.3766
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137033
  time (eval):    0.04582
  gflops (eval):  148.582
  gflops (total): 144.268
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137033,0.04582,148.582,144.268

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217981
  gflops (total): 31.2323
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0485001
  gflops (eval):  140.372
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0485001,140.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.0542
  maximum absolute entry in einsum_ir solution: 42.0542
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137394
  time (eval):    0.0455988
  gflops (eval):  149.303
  gflops (total): 144.936
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137394,0.0455988,149.303,144.936

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216249
  gflops (total): 31.4824
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0493051
  gflops (eval):  138.08
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0493051,138.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.6492
  maximum absolute entry in einsum_ir solution: 44.6492
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00136802
  time (eval):    0.0459026
  gflops (eval):  148.315
  gflops (total): 144.023
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00136802,0.0459026,148.315,144.023

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217861
  gflops (total): 31.2495
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0488219
  gflops (eval):  139.447
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0488219,139.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.9697
  maximum absolute entry in einsum_ir solution: 44.9697
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137984
  time (eval):    0.0455985
  gflops (eval):  149.304
  gflops (total): 144.919
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137984,0.0455985,149.304,144.919

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.216815
  gflops (total): 31.4003
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0481458
  gflops (eval):  141.405
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0481458,141.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      42.7628
  maximum absolute entry in einsum_ir solution: 42.7628
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137662
  time (eval):    0.0456051
  gflops (eval):  149.283
  gflops (total): 144.908
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137662,0.0456051,149.283,144.908

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217526
  gflops (total): 31.2975
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0491215
  gflops (eval):  138.596
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0491215,138.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      47.1844
  maximum absolute entry in einsum_ir solution: 47.1844
  maximum element-wise difference:              7.62939e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.0013693
  time (eval):    0.0456121
  gflops (eval):  149.26
  gflops (total): 144.909
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.0013693,0.0456121,149.26,144.909

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.21669
  gflops (total): 31.4184
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.4184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482855
  gflops (eval):  140.995
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482855,140.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.8763
  maximum absolute entry in einsum_ir solution: 43.8763
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00138763
  time (eval):    0.045472
  gflops (eval):  149.719
  gflops (total): 145.286
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00138763,0.045472,149.719,145.286

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.218198
  gflops (total): 31.2012
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.2012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0477579
  gflops (eval):  142.553
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0477579,142.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      45.8292
  maximum absolute entry in einsum_ir solution: 45.8292
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c,b,f,a
  f,d
  a,b,c,d,e
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 48
  b: 36
  c: 36
  d: 24
  e: 48
  f: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 2 5 
  string_dim_ids: 4 2 1 5 0 5 3 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[4,2,1,5,0]->[0,1,2,5,4]],[[5,3]->[3,5]]->[0,1,2,3,4]
  #flops:         6808043520
  time (compile): 0.00137383
  time (eval):    0.0455598
  gflops (eval):  149.431
  gflops (total): 145.057
CSV_DATA: einsum_ir,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0.00137383,0.0455598,149.431,145.057

*** benchmarking at::einsum ***
  #flops:         6808043520
  time (total):   0.217099
  gflops (total): 31.3592
CSV_DATA: at::einsum,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0,0,31.3592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 2985984 24 48
  #flops:         6808043520
  time (eval):    0.0482751
  gflops (eval):  141.026
CSV_DATA: at::matmul,"ecbfa,fd->abcde","48,36,36,24,48,48","(0,1)",6808043520,0,0.0482751,141.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      43.0549
  maximum absolute entry in einsum_ir solution: 43.0549
  maximum element-wise difference:              9.53674e-06
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138
  time (eval):    0.020839
  gflops (eval):  148.893
  gflops (total): 139.645
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138,0.020839,148.893,139.645

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107796
  gflops (total): 28.7836
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.7836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274613
  gflops (eval):  112.987
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274613,112.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3069
  maximum absolute entry in einsum_ir solution: 55.3069
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00163541
  time (eval):    0.0207243
  gflops (eval):  149.717
  gflops (total): 138.766
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00163541,0.0207243,149.717,138.766

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110251
  gflops (total): 28.1428
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274536
  gflops (eval):  113.019
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274536,113.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6356
  maximum absolute entry in einsum_ir solution: 53.6356
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137549
  time (eval):    0.0208322
  gflops (eval):  148.941
  gflops (total): 139.716
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137549,0.0208322,148.941,139.716

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108768
  gflops (total): 28.5265
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275509
  gflops (eval):  112.619
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275509,112.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7443
  maximum absolute entry in einsum_ir solution: 53.7443
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137206
  time (eval):    0.0209472
  gflops (eval):  148.123
  gflops (total): 139.018
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137206,0.0209472,148.123,139.018

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110806
  gflops (total): 28.0018
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274681
  gflops (eval):  112.959
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274681,112.959,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.024
  maximum absolute entry in einsum_ir solution: 52.024
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138358
  time (eval):    0.0208682
  gflops (eval):  148.684
  gflops (total): 139.439
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138358,0.0208682,148.684,139.439

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11058
  gflops (total): 28.059
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275421
  gflops (eval):  112.655
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275421,112.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.868
  maximum absolute entry in einsum_ir solution: 51.868
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139479
  time (eval):    0.020964
  gflops (eval):  148.005
  gflops (total): 138.772
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139479,0.020964,148.005,138.772

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109873
  gflops (total): 28.2396
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027405
  gflops (eval):  113.219
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027405,113.219,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.2649
  maximum absolute entry in einsum_ir solution: 51.2649
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138614
  time (eval):    0.0209448
  gflops (eval):  148.14
  gflops (total): 138.945
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138614,0.0209448,148.14,138.945

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109462
  gflops (total): 28.3457
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0280512
  gflops (eval):  110.611
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0280512,110.611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6258
  maximum absolute entry in einsum_ir solution: 53.6258
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00153899
  time (eval):    0.0209979
  gflops (eval):  147.765
  gflops (total): 137.675
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00153899,0.0209979,147.765,137.675

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109073
  gflops (total): 28.4468
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027426
  gflops (eval):  113.132
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027426,113.132,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7342
  maximum absolute entry in einsum_ir solution: 52.7342
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00141597
  time (eval):    0.0209061
  gflops (eval):  148.415
  gflops (total): 139
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00141597,0.0209061,148.415,139

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10774
  gflops (total): 28.7986
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.7986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275694
  gflops (eval):  112.544
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275694,112.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8238
  maximum absolute entry in einsum_ir solution: 56.8238
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013814
  time (eval):    0.0210931
  gflops (eval):  147.099
  gflops (total): 138.057
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013814,0.0210931,147.099,138.057

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108751
  gflops (total): 28.5309
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272274
  gflops (eval):  113.958
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272274,113.958,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7083
  maximum absolute entry in einsum_ir solution: 53.7083
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143386
  time (eval):    0.020744
  gflops (eval):  149.574
  gflops (total): 139.904
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143386,0.020744,149.574,139.904

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110244
  gflops (total): 28.1446
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278261
  gflops (eval):  111.506
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278261,111.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3188
  maximum absolute entry in einsum_ir solution: 54.3188
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137483
  time (eval):    0.0207601
  gflops (eval):  149.458
  gflops (total): 140.175
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137483,0.0207601,149.458,140.175

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.113478
  gflops (total): 27.3424
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.3424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271147
  gflops (eval):  114.431
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271147,114.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6495
  maximum absolute entry in einsum_ir solution: 61.6495
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137068
  time (eval):    0.0207436
  gflops (eval):  149.578
  gflops (total): 140.306
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137068,0.0207436,149.578,140.306

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110168
  gflops (total): 28.1639
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276487
  gflops (eval):  112.221
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276487,112.221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1687
  maximum absolute entry in einsum_ir solution: 59.1687
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00166749
  time (eval):    0.0208602
  gflops (eval):  148.741
  gflops (total): 137.731
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00166749,0.0208602,148.741,137.731

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108179
  gflops (total): 28.6817
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275168
  gflops (eval):  112.759
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275168,112.759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.0893
  maximum absolute entry in einsum_ir solution: 51.0893
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136789
  time (eval):    0.0208297
  gflops (eval):  148.959
  gflops (total): 139.779
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136789,0.0208297,148.959,139.779

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10729
  gflops (total): 28.9195
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.9195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275652
  gflops (eval):  112.561
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275652,112.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8375
  maximum absolute entry in einsum_ir solution: 52.8375
  maximum element-wise difference:              2.19345e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142006
  time (eval):    0.0207781
  gflops (eval):  149.329
  gflops (total): 139.776
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142006,0.0207781,149.329,139.776

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111477
  gflops (total): 27.8333
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8333

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027521
  gflops (eval):  112.742
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027521,112.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5844
  maximum absolute entry in einsum_ir solution: 57.5844
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137685
  time (eval):    0.0207884
  gflops (eval):  149.255
  gflops (total): 139.984
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137685,0.0207884,149.255,139.984

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108183
  gflops (total): 28.6808
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273284
  gflops (eval):  113.537
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273284,113.537,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6429
  maximum absolute entry in einsum_ir solution: 56.6429
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136239
  time (eval):    0.0209132
  gflops (eval):  148.364
  gflops (total): 139.29
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136239,0.0209132,148.364,139.29

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.105566
  gflops (total): 29.3918
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.3918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276154
  gflops (eval):  112.357
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276154,112.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7846
  maximum absolute entry in einsum_ir solution: 53.7846
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138898
  time (eval):    0.0209496
  gflops (eval):  148.106
  gflops (total): 138.897
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138898,0.0209496,148.106,138.897

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108471
  gflops (total): 28.6045
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271687
  gflops (eval):  114.204
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271687,114.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6498
  maximum absolute entry in einsum_ir solution: 54.6498
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013838
  time (eval):    0.020714
  gflops (eval):  149.791
  gflops (total): 140.411
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013838,0.020714,149.791,140.411

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11038
  gflops (total): 28.1099
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275766
  gflops (eval):  112.515
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275766,112.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6786
  maximum absolute entry in einsum_ir solution: 60.6786
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137349
  time (eval):    0.0207286
  gflops (eval):  149.686
  gflops (total): 140.384
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137349,0.0207286,149.686,140.384

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109385
  gflops (total): 28.3656
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274166
  gflops (eval):  113.171
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274166,113.171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3665
  maximum absolute entry in einsum_ir solution: 52.3665
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137517
  time (eval):    0.0208447
  gflops (eval):  148.852
  gflops (total): 139.64
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137517,0.0208447,148.852,139.64

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108045
  gflops (total): 28.7173
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.7173

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277918
  gflops (eval):  111.643
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277918,111.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.631
  maximum absolute entry in einsum_ir solution: 53.631
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137327
  time (eval):    0.0208972
  gflops (eval):  148.477
  gflops (total): 139.322
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137327,0.0208972,148.477,139.322

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107969
  gflops (total): 28.7375
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.7375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274898
  gflops (eval):  112.87
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274898,112.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0438
  maximum absolute entry in einsum_ir solution: 55.0438
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013846
  time (eval):    0.0211288
  gflops (eval):  146.85
  gflops (total): 137.819
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013846,0.0211288,146.85,137.819

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110294
  gflops (total): 28.1319
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0269735
  gflops (eval):  115.03
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0269735,115.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.081
  maximum absolute entry in einsum_ir solution: 52.081
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00136254
  time (eval):    0.0208591
  gflops (eval):  148.749
  gflops (total): 139.628
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00136254,0.0208591,148.749,139.628

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112088
  gflops (total): 27.6816
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.6816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274415
  gflops (eval):  113.068
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274415,113.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3481
  maximum absolute entry in einsum_ir solution: 54.3481
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139322
  time (eval):    0.0207052
  gflops (eval):  149.855
  gflops (total): 140.407
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139322,0.0207052,149.855,140.407

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108187
  gflops (total): 28.6796
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.028004
  gflops (eval):  110.797
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.028004,110.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.0641
  maximum absolute entry in einsum_ir solution: 49.0641
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139054
  time (eval):    0.0207745
  gflops (eval):  149.355
  gflops (total): 139.985
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139054,0.0207745,149.355,139.985

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.106939
  gflops (total): 29.0144
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.0144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027385
  gflops (eval):  113.302
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027385,113.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7275
  maximum absolute entry in einsum_ir solution: 53.7275
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138573
  time (eval):    0.0209705
  gflops (eval):  147.959
  gflops (total): 138.788
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138573,0.0209705,147.959,138.788

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110834
  gflops (total): 27.9948
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9948

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276909
  gflops (eval):  112.05
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276909,112.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4217
  maximum absolute entry in einsum_ir solution: 53.4217
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00153777
  time (eval):    0.0210405
  gflops (eval):  147.466
  gflops (total): 137.423
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00153777,0.0210405,147.466,137.423

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110182
  gflops (total): 28.1605
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276167
  gflops (eval):  112.351
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276167,112.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7412
  maximum absolute entry in einsum_ir solution: 52.7412
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137673
  time (eval):    0.0207999
  gflops (eval):  149.172
  gflops (total): 139.912
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137673,0.0207999,149.172,139.912

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112335
  gflops (total): 27.6207
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.6207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276075
  gflops (eval):  112.388
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276075,112.388,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.4386
  maximum absolute entry in einsum_ir solution: 50.4387
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137107
  time (eval):    0.0209912
  gflops (eval):  147.813
  gflops (total): 138.75
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137107,0.0209912,147.813,138.75

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11199
  gflops (total): 27.7059
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.7059

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0270001
  gflops (eval):  114.917
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0270001,114.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5345
  maximum absolute entry in einsum_ir solution: 53.5345
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00144807
  time (eval):    0.0205878
  gflops (eval):  150.709
  gflops (total): 140.805
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00144807,0.0205878,150.709,140.805

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109621
  gflops (total): 28.3044
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277653
  gflops (eval):  111.75
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277653,111.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.4938
  maximum absolute entry in einsum_ir solution: 52.4938
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00135386
  time (eval):    0.0210322
  gflops (eval):  147.525
  gflops (total): 138.603
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00135386,0.0210322,147.525,138.603

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110792
  gflops (total): 28.0053
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0053

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027597
  gflops (eval):  112.431
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027597,112.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.187
  maximum absolute entry in einsum_ir solution: 56.187
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137371
  time (eval):    0.0207256
  gflops (eval):  149.707
  gflops (total): 140.401
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137371,0.0207256,149.707,140.401

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110337
  gflops (total): 28.1208
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027768
  gflops (eval):  111.739
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027768,111.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0662
  maximum absolute entry in einsum_ir solution: 53.0662
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139954
  time (eval):    0.0209488
  gflops (eval):  148.112
  gflops (total): 138.837
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139954,0.0209488,148.112,138.837

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111208
  gflops (total): 27.9005
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272718
  gflops (eval):  113.772
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272718,113.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4572
  maximum absolute entry in einsum_ir solution: 59.4572
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138329
  time (eval):    0.020723
  gflops (eval):  149.726
  gflops (total): 140.357
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138329,0.020723,149.726,140.357

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109361
  gflops (total): 28.3719
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276735
  gflops (eval):  112.121
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276735,112.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.1906
  maximum absolute entry in einsum_ir solution: 49.1906
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137946
  time (eval):    0.0208605
  gflops (eval):  148.739
  gflops (total): 139.513
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137946,0.0208605,148.739,139.513

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109228
  gflops (total): 28.4063
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277336
  gflops (eval):  111.878
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277336,111.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1983
  maximum absolute entry in einsum_ir solution: 56.1983
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138749
  time (eval):    0.0207793
  gflops (eval):  149.321
  gflops (total): 139.974
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138749,0.0207793,149.321,139.974

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10702
  gflops (total): 28.9925
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.9925

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272678
  gflops (eval):  113.789
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272678,113.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.524
  maximum absolute entry in einsum_ir solution: 61.524
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142303
  time (eval):    0.0210121
  gflops (eval):  147.666
  gflops (total): 138.3
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142303,0.0210121,147.666,138.3

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109565
  gflops (total): 28.319
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275493
  gflops (eval):  112.626
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275493,112.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.818
  maximum absolute entry in einsum_ir solution: 54.818
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00140783
  time (eval):    0.0207834
  gflops (eval):  149.291
  gflops (total): 139.82
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00140783,0.0207834,149.291,139.82

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112682
  gflops (total): 27.5355
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.5355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274343
  gflops (eval):  113.098
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274343,113.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1496
  maximum absolute entry in einsum_ir solution: 54.1496
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00149837
  time (eval):    0.0208769
  gflops (eval):  148.622
  gflops (total): 138.67
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00149837,0.0208769,148.622,138.67

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107173
  gflops (total): 28.9511
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.9511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273935
  gflops (eval):  113.267
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273935,113.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.1625
  maximum absolute entry in einsum_ir solution: 52.1625
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0016505
  time (eval):    0.0208168
  gflops (eval):  149.051
  gflops (total): 138.102
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0016505,0.0208168,149.051,138.102

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109796
  gflops (total): 28.2594
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2594

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273116
  gflops (eval):  113.606
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273116,113.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.2598
  maximum absolute entry in einsum_ir solution: 52.2598
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137876
  time (eval):    0.0208018
  gflops (eval):  149.159
  gflops (total): 139.887
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137876,0.0208018,149.159,139.887

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109299
  gflops (total): 28.3878
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3878

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277303
  gflops (eval):  111.891
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277303,111.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8316
  maximum absolute entry in einsum_ir solution: 52.8316
  maximum element-wise difference:              2.00272e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00167362
  time (eval):    0.0209655
  gflops (eval):  147.994
  gflops (total): 137.053
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00167362,0.0209655,147.994,137.053

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110249
  gflops (total): 28.1433
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277643
  gflops (eval):  111.754
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277643,111.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.8597
  maximum absolute entry in einsum_ir solution: 53.8597
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138067
  time (eval):    0.0209685
  gflops (eval):  147.973
  gflops (total): 138.831
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138067,0.0209685,147.973,138.831

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110551
  gflops (total): 28.0664
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275031
  gflops (eval):  112.815
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275031,112.815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.3753
  maximum absolute entry in einsum_ir solution: 51.3753
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139073
  time (eval):    0.02095
  gflops (eval):  148.104
  gflops (total): 138.884
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139073,0.02095,148.104,138.884

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107635
  gflops (total): 28.8267
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.8267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271375
  gflops (eval):  114.335
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271375,114.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1466
  maximum absolute entry in einsum_ir solution: 57.1466
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137737
  time (eval):    0.0210732
  gflops (eval):  147.238
  gflops (total): 138.204
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137737,0.0210732,147.238,138.204

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110837
  gflops (total): 27.994
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274998
  gflops (eval):  112.829
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274998,112.829,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8883
  maximum absolute entry in einsum_ir solution: 55.8883
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138344
  time (eval):    0.0210471
  gflops (eval):  147.42
  gflops (total): 138.328
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138344,0.0210471,147.42,138.328

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108137
  gflops (total): 28.6929
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276746
  gflops (eval):  112.116
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276746,112.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1246
  maximum absolute entry in einsum_ir solution: 53.1246
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013881
  time (eval):    0.0207955
  gflops (eval):  149.204
  gflops (total): 139.868
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013881,0.0207955,149.204,139.868

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109112
  gflops (total): 28.4365
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274989
  gflops (eval):  112.832
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274989,112.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0581
  maximum absolute entry in einsum_ir solution: 53.0581
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137675
  time (eval):    0.0208718
  gflops (eval):  148.658
  gflops (total): 139.459
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137675,0.0208718,148.658,139.459

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110183
  gflops (total): 28.1602
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1602

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275813
  gflops (eval):  112.495
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275813,112.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1862
  maximum absolute entry in einsum_ir solution: 53.1862
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138171
  time (eval):    0.0210076
  gflops (eval):  147.697
  gflops (total): 138.582
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138171,0.0210076,147.697,138.582

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11284
  gflops (total): 27.4971
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.4971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277398
  gflops (eval):  111.853
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277398,111.853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.0596
  maximum absolute entry in einsum_ir solution: 53.0596
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00166641
  time (eval):    0.0208311
  gflops (eval):  148.949
  gflops (total): 137.916
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00166641,0.0208311,148.949,137.916

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108961
  gflops (total): 28.476
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027575
  gflops (eval):  112.521
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027575,112.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.7151
  maximum absolute entry in einsum_ir solution: 49.7151
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138405
  time (eval):    0.0209745
  gflops (eval):  147.93
  gflops (total): 138.773
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138405,0.0209745,147.93,138.773

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108447
  gflops (total): 28.6109
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275512
  gflops (eval):  112.618
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275512,112.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6083
  maximum absolute entry in einsum_ir solution: 55.6083
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138969
  time (eval):    0.020771
  gflops (eval):  149.38
  gflops (total): 140.012
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138969,0.020771,149.38,140.012

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110681
  gflops (total): 28.0335
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275393
  gflops (eval):  112.667
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275393,112.667,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5089
  maximum absolute entry in einsum_ir solution: 56.5089
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138863
  time (eval):    0.0208494
  gflops (eval):  148.818
  gflops (total): 139.525
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138863,0.0208494,148.818,139.525

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.106503
  gflops (total): 29.1332
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.1332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276485
  gflops (eval):  112.222
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276485,112.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0688
  maximum absolute entry in einsum_ir solution: 56.0688
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013879
  time (eval):    0.0209563
  gflops (eval):  148.059
  gflops (total): 138.862
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013879,0.0209563,148.059,138.862

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10738
  gflops (total): 28.8951
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.8951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027602
  gflops (eval):  112.411
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027602,112.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.616
  maximum absolute entry in einsum_ir solution: 52.616
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138038
  time (eval):    0.0209197
  gflops (eval):  148.318
  gflops (total): 139.137
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138038,0.0209197,148.318,139.137

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.106587
  gflops (total): 29.1102
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.1102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027434
  gflops (eval):  113.099
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027434,113.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2979
  maximum absolute entry in einsum_ir solution: 57.2979
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139052
  time (eval):    0.0208273
  gflops (eval):  148.976
  gflops (total): 139.652
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139052,0.0208273,148.976,139.652

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10718
  gflops (total): 28.9493
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.9493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276808
  gflops (eval):  112.091
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276808,112.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.8813
  maximum absolute entry in einsum_ir solution: 49.8813
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143776
  time (eval):    0.0207512
  gflops (eval):  149.523
  gflops (total): 139.834
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143776,0.0207512,149.523,139.834

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112234
  gflops (total): 27.6457
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.6457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276413
  gflops (eval):  112.251
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276413,112.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9448
  maximum absolute entry in einsum_ir solution: 55.9448
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138657
  time (eval):    0.0207362
  gflops (eval):  149.631
  gflops (total): 140.252
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138657,0.0207362,149.631,140.252

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108914
  gflops (total): 28.4883
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274583
  gflops (eval):  113
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274583,113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.819
  maximum absolute entry in einsum_ir solution: 53.819
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139628
  time (eval):    0.0208344
  gflops (eval):  148.926
  gflops (total): 139.572
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139628,0.0208344,148.926,139.572

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110127
  gflops (total): 28.1745
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274201
  gflops (eval):  113.157
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274201,113.157,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1929
  maximum absolute entry in einsum_ir solution: 53.1929
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138164
  time (eval):    0.0207826
  gflops (eval):  149.297
  gflops (total): 139.99
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138164,0.0207826,149.297,139.99

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.1059
  gflops (total): 29.2991
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.2991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275111
  gflops (eval):  112.782
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275111,112.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9309
  maximum absolute entry in einsum_ir solution: 55.9308
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138848
  time (eval):    0.0209446
  gflops (eval):  148.142
  gflops (total): 138.932
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138848,0.0209446,148.142,138.932

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.112236
  gflops (total): 27.6449
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.6449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273248
  gflops (eval):  113.551
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273248,113.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7504
  maximum absolute entry in einsum_ir solution: 54.7504
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138275
  time (eval):    0.0209266
  gflops (eval):  148.269
  gflops (total): 139.079
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138275,0.0209266,148.269,139.079

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.106041
  gflops (total): 29.26
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273605
  gflops (eval):  113.403
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273605,113.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4676
  maximum absolute entry in einsum_ir solution: 53.4676
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00146767
  time (eval):    0.0206154
  gflops (eval):  150.508
  gflops (total): 140.505
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00146767,0.0206154,150.508,140.505

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.115472
  gflops (total): 26.8704
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,26.8704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276608
  gflops (eval):  112.172
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276608,112.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.5313
  maximum absolute entry in einsum_ir solution: 51.5312
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138287
  time (eval):    0.0211348
  gflops (eval):  146.809
  gflops (total): 137.793
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138287,0.0211348,146.809,137.793

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110131
  gflops (total): 28.1734
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276268
  gflops (eval):  112.31
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276268,112.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5552
  maximum absolute entry in einsum_ir solution: 54.5552
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00143015
  time (eval):    0.0207202
  gflops (eval):  149.746
  gflops (total): 140.078
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00143015,0.0207202,149.746,140.078

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111793
  gflops (total): 27.7546
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.7546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272201
  gflops (eval):  113.988
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272201,113.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7247
  maximum absolute entry in einsum_ir solution: 54.7247
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138189
  time (eval):    0.0208167
  gflops (eval):  149.052
  gflops (total): 139.773
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138189,0.0208167,149.052,139.773

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110223
  gflops (total): 28.15
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273596
  gflops (eval):  113.407
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273596,113.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3847
  maximum absolute entry in einsum_ir solution: 54.3847
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00142348
  time (eval):    0.0209011
  gflops (eval):  148.45
  gflops (total): 138.984
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00142348,0.0209011,148.45,138.984

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110845
  gflops (total): 27.9919
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027786
  gflops (eval):  111.667
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027786,111.667,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0349
  maximum absolute entry in einsum_ir solution: 55.0349
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139176
  time (eval):    0.0206739
  gflops (eval):  150.081
  gflops (total): 140.615
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139176,0.0206739,150.081,140.615

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107669
  gflops (total): 28.8177
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.8177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027869
  gflops (eval):  111.334
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027869,111.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.8959
  maximum absolute entry in einsum_ir solution: 51.8959
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00166465
  time (eval):    0.0208798
  gflops (eval):  148.602
  gflops (total): 137.629
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00166465,0.0208798,148.602,137.629

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.113318
  gflops (total): 27.3812
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.3812

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278663
  gflops (eval):  111.345
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278663,111.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4748
  maximum absolute entry in einsum_ir solution: 51.4748
  maximum element-wise difference:              2.00272e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138688
  time (eval):    0.0209612
  gflops (eval):  148.025
  gflops (total): 138.838
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138688,0.0209612,148.025,138.838

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110314
  gflops (total): 28.1267
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276378
  gflops (eval):  112.265
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276378,112.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3104
  maximum absolute entry in einsum_ir solution: 54.3104
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0014603
  time (eval):    0.0207574
  gflops (eval):  149.478
  gflops (total): 139.653
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0014603,0.0207574,149.478,139.653

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110594
  gflops (total): 28.0554
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275217
  gflops (eval):  112.739
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275217,112.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.904
  maximum absolute entry in einsum_ir solution: 50.904
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138133
  time (eval):    0.0208364
  gflops (eval):  148.911
  gflops (total): 139.653
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138133,0.0208364,148.911,139.653

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109376
  gflops (total): 28.3679
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273803
  gflops (eval):  113.321
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273803,113.321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1791
  maximum absolute entry in einsum_ir solution: 60.1791
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138307
  time (eval):    0.0209033
  gflops (eval):  148.435
  gflops (total): 139.223
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138307,0.0209033,148.435,139.223

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11016
  gflops (total): 28.1661
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273252
  gflops (eval):  113.55
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273252,113.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.4394
  maximum absolute entry in einsum_ir solution: 53.4394
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00145204
  time (eval):    0.0207772
  gflops (eval):  149.335
  gflops (total): 139.58
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00145204,0.0207772,149.335,139.58

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.106918
  gflops (total): 29.0201
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.0201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0279677
  gflops (eval):  110.941
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0279677,110.941,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.5764
  maximum absolute entry in einsum_ir solution: 50.5764
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013753
  time (eval):    0.0209479
  gflops (eval):  148.118
  gflops (total): 138.993
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013753,0.0209479,148.118,138.993

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.105743
  gflops (total): 29.3424
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.3424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276699
  gflops (eval):  112.135
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276699,112.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.7346
  maximum absolute entry in einsum_ir solution: 50.7346
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138252
  time (eval):    0.0208415
  gflops (eval):  148.875
  gflops (total): 139.614
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138252,0.0208415,148.875,139.614

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.106523
  gflops (total): 29.1276
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,29.1276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278946
  gflops (eval):  111.232
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278946,111.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.8198
  maximum absolute entry in einsum_ir solution: 53.8198
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00167245
  time (eval):    0.0207351
  gflops (eval):  149.639
  gflops (total): 138.47
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00167245,0.0207351,149.639,138.47

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108726
  gflops (total): 28.5376
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5376

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272575
  gflops (eval):  113.832
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272575,113.832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2788
  maximum absolute entry in einsum_ir solution: 53.2788
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138441
  time (eval):    0.0210603
  gflops (eval):  147.328
  gflops (total): 138.241
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138441,0.0210603,147.328,138.241

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107276
  gflops (total): 28.9234
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.9234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0271893
  gflops (eval):  114.117
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0271893,114.117,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2291
  maximum absolute entry in einsum_ir solution: 53.2291
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137533
  time (eval):    0.0209359
  gflops (eval):  148.203
  gflops (total): 139.067
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137533,0.0209359,148.203,139.067

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10941
  gflops (total): 28.3592
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.027475
  gflops (eval):  112.931
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.027475,112.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8339
  maximum absolute entry in einsum_ir solution: 55.8339
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137775
  time (eval):    0.0208882
  gflops (eval):  148.542
  gflops (total): 139.35
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137775,0.0208882,148.542,139.35

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109094
  gflops (total): 28.4412
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.4412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275325
  gflops (eval):  112.695
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275325,112.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.7985
  maximum absolute entry in einsum_ir solution: 51.7985
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00161135
  time (eval):    0.0209237
  gflops (eval):  148.29
  gflops (total): 137.687
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00161135,0.0209237,148.29,137.687

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.107748
  gflops (total): 28.7966
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.7966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273511
  gflops (eval):  113.442
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273511,113.442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9242
  maximum absolute entry in einsum_ir solution: 53.9242
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00146063
  time (eval):    0.0208824
  gflops (eval):  148.583
  gflops (total): 138.87
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00146063,0.0208824,148.583,138.87

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109848
  gflops (total): 28.2461
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.2461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275771
  gflops (eval):  112.513
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275771,112.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1222
  maximum absolute entry in einsum_ir solution: 55.1222
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137587
  time (eval):    0.0206826
  gflops (eval):  150.018
  gflops (total): 140.661
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137587,0.0206826,150.018,140.661

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10714
  gflops (total): 28.9598
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.9598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273844
  gflops (eval):  113.304
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273844,113.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.7519
  maximum absolute entry in einsum_ir solution: 53.7519
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013806
  time (eval):    0.020987
  gflops (eval):  147.842
  gflops (total): 138.717
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013806,0.020987,147.842,138.717

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108365
  gflops (total): 28.6325
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278374
  gflops (eval):  111.46
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278374,111.46,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.8265
  maximum absolute entry in einsum_ir solution: 52.8265
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138595
  time (eval):    0.0209068
  gflops (eval):  148.409
  gflops (total): 139.183
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138595,0.0209068,148.409,139.183

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111471
  gflops (total): 27.8348
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.8348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277619
  gflops (eval):  111.764
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277619,111.764,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.571
  maximum absolute entry in einsum_ir solution: 49.571
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139866
  time (eval):    0.0209997
  gflops (eval):  147.753
  gflops (total): 138.527
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139866,0.0209997,147.753,138.527

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108479
  gflops (total): 28.6025
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274799
  gflops (eval):  112.911
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274799,112.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.6183
  maximum absolute entry in einsum_ir solution: 50.6183
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137934
  time (eval):    0.0208531
  gflops (eval):  148.792
  gflops (total): 139.561
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137934,0.0208531,148.792,139.561

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.10826
  gflops (total): 28.6603
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275284
  gflops (eval):  112.711
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275284,112.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      49.6976
  maximum absolute entry in einsum_ir solution: 49.6976
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137161
  time (eval):    0.0210317
  gflops (eval):  147.528
  gflops (total): 138.496
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137161,0.0210317,147.528,138.496

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108751
  gflops (total): 28.5309
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.5309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0272405
  gflops (eval):  113.903
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0272405,113.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.7338
  maximum absolute entry in einsum_ir solution: 52.7338
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138569
  time (eval):    0.0208341
  gflops (eval):  148.928
  gflops (total): 139.64
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138569,0.0208341,148.928,139.64

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.11026
  gflops (total): 28.1405
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.1405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0277714
  gflops (eval):  111.725
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0277714,111.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3429
  maximum absolute entry in einsum_ir solution: 59.3429
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013976
  time (eval):    0.0208675
  gflops (eval):  148.689
  gflops (total): 139.356
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013976,0.0208675,148.689,139.356

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.110703
  gflops (total): 28.0278
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.0278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0276018
  gflops (eval):  112.412
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0276018,112.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.4139
  maximum absolute entry in einsum_ir solution: 51.4139
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137633
  time (eval):    0.0207929
  gflops (eval):  149.222
  gflops (total): 139.958
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137633,0.0207929,149.222,139.958

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109514
  gflops (total): 28.3323
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.3323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275868
  gflops (eval):  112.473
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275868,112.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.53
  maximum absolute entry in einsum_ir solution: 53.53
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137874
  time (eval):    0.0207988
  gflops (eval):  149.181
  gflops (total): 139.906
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137874,0.0207988,149.181,139.906

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.114265
  gflops (total): 27.1541
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.1541

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275702
  gflops (eval):  112.541
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275702,112.541,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5812
  maximum absolute entry in einsum_ir solution: 62.5812
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137966
  time (eval):    0.0209863
  gflops (eval):  147.847
  gflops (total): 138.727
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137966,0.0209863,147.847,138.727

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.111173
  gflops (total): 27.9094
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,27.9094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275694
  gflops (eval):  112.544
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275694,112.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1995
  maximum absolute entry in einsum_ir solution: 54.1994
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137915
  time (eval):    0.0208226
  gflops (eval):  149.01
  gflops (total): 139.753
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137915,0.0208226,149.01,139.753

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109495
  gflops (total): 28.337
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0278455
  gflops (eval):  111.428
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0278455,111.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      52.3652
  maximum absolute entry in einsum_ir solution: 52.3652
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00138017
  time (eval):    0.0207984
  gflops (eval):  149.183
  gflops (total): 139.899
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00138017,0.0207984,149.183,139.899

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108378
  gflops (total): 28.6291
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0274591
  gflops (eval):  112.996
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0274591,112.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2221
  maximum absolute entry in einsum_ir solution: 57.2222
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.0013763
  time (eval):    0.0210269
  gflops (eval):  147.562
  gflops (total): 138.496
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.0013763,0.0210269,147.562,138.496

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108378
  gflops (total): 28.6291
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.6291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275881
  gflops (eval):  112.468
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275881,112.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.1515
  maximum absolute entry in einsum_ir solution: 50.1515
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00139989
  time (eval):    0.0211523
  gflops (eval):  146.687
  gflops (total): 137.582
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00139989,0.0211523,146.687,137.582

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.109965
  gflops (total): 28.216
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0275457
  gflops (eval):  112.641
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0275457,112.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8563
  maximum absolute entry in einsum_ir solution: 56.8563
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,c,a
  b,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 24
  c: 84
  d: 96
  e: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 3 4 2 0 1 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,4,2,0]->[0,2,4,3]],[1,4]->[0,1,2,3]
  #flops:         3102769152
  time (compile): 0.00137368
  time (eval):    0.0207994
  gflops (eval):  149.176
  gflops (total): 139.934
CSV_DATA: einsum_ir,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0.00137368,0.0207994,149.176,139.934

*** benchmarking at::einsum ***
  #flops:         3102769152
  time (total):   0.108671
  gflops (total): 28.552
CSV_DATA: at::einsum,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0,0,28.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 774144 24 84
  #flops:         3102769152
  time (eval):    0.0273192
  gflops (eval):  113.575
CSV_DATA: at::matmul,"deca,be->abcd","96,24,84,96,84","(0,1)",3102769152,0,0.0273192,113.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4019
  maximum absolute entry in einsum_ir solution: 55.4019
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136952
  time (eval):    0.0177163
  gflops (eval):  153.213
  gflops (total): 142.219
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136952,0.0177163,153.213,142.219

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993433
  gflops (total): 27.3231
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025756
  gflops (eval):  105.388
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025756,105.388,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.09
  maximum absolute entry in einsum_ir solution: 113.09
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136884
  time (eval):    0.0179197
  gflops (eval):  151.474
  gflops (total): 140.725
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136884,0.0179197,151.474,140.725

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100008
  gflops (total): 27.1415
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258343
  gflops (eval):  105.069
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258343,105.069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.724
  maximum absolute entry in einsum_ir solution: 100.724
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013538
  time (eval):    0.0181032
  gflops (eval):  149.939
  gflops (total): 139.506
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013538,0.0181032,149.939,139.506

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0990277
  gflops (total): 27.4102
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.4102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257526
  gflops (eval):  105.402
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257526,105.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4477
  maximum absolute entry in einsum_ir solution: 99.4477
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136699
  time (eval):    0.0178931
  gflops (eval):  151.699
  gflops (total): 140.933
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136699,0.0178931,151.699,140.933

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999425
  gflops (total): 27.1593
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257207
  gflops (eval):  105.532
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257207,105.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.799
  maximum absolute entry in einsum_ir solution: 100.799
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136299
  time (eval):    0.0177082
  gflops (eval):  153.284
  gflops (total): 142.329
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136299,0.0177082,153.284,142.329

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993389
  gflops (total): 27.3243
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257068
  gflops (eval):  105.59
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257068,105.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.6244
  maximum absolute entry in einsum_ir solution: 99.6244
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136797
  time (eval):    0.0175869
  gflops (eval):  154.341
  gflops (total): 143.202
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136797,0.0175869,154.341,143.202

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100071
  gflops (total): 27.1245
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257682
  gflops (eval):  105.338
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257682,105.338,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.174
  maximum absolute entry in einsum_ir solution: 104.174
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013778
  time (eval):    0.0180683
  gflops (eval):  150.229
  gflops (total): 139.585
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013778,0.0180683,150.229,139.585

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0989386
  gflops (total): 27.4349
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.4349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258762
  gflops (eval):  104.898
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258762,104.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.465
  maximum absolute entry in einsum_ir solution: 105.465
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013665
  time (eval):    0.0178076
  gflops (eval):  152.427
  gflops (total): 141.564
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013665,0.0178076,152.427,141.564

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997063
  gflops (total): 27.2237
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257227
  gflops (eval):  105.524
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257227,105.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.773
  maximum absolute entry in einsum_ir solution: 102.773
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137448
  time (eval):    0.0178819
  gflops (eval):  151.794
  gflops (total): 140.959
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137448,0.0178819,151.794,140.959

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0990678
  gflops (total): 27.3991
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257502
  gflops (eval):  105.412
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257502,105.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.628
  maximum absolute entry in einsum_ir solution: 104.628
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138585
  time (eval):    0.0178812
  gflops (eval):  151.8
  gflops (total): 140.881
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138585,0.0178812,151.8,140.881

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100072
  gflops (total): 27.1241
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1241

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257238
  gflops (eval):  105.52
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257238,105.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.945
  maximum absolute entry in einsum_ir solution: 106.945
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138705
  time (eval):    0.0178971
  gflops (eval):  151.665
  gflops (total): 140.756
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138705,0.0178971,151.665,140.756

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996063
  gflops (total): 27.251
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257674
  gflops (eval):  105.341
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257674,105.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.2526
  maximum absolute entry in einsum_ir solution: 99.2526
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013705
  time (eval):    0.0180428
  gflops (eval):  150.441
  gflops (total): 139.82
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013705,0.0180428,150.441,139.82

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100113
  gflops (total): 27.1132
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1132

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260053
  gflops (eval):  104.377
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260053,104.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.922
  maximum absolute entry in einsum_ir solution: 111.922
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137636
  time (eval):    0.017822
  gflops (eval):  152.304
  gflops (total): 141.385
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137636,0.017822,152.304,141.385

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993886
  gflops (total): 27.3107
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259363
  gflops (eval):  104.655
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259363,104.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.617
  maximum absolute entry in einsum_ir solution: 109.617
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139074
  time (eval):    0.0177312
  gflops (eval):  153.084
  gflops (total): 141.951
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139074,0.0177312,153.084,141.951

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100126
  gflops (total): 27.1096
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1096

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258336
  gflops (eval):  105.071
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258336,105.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.394
  maximum absolute entry in einsum_ir solution: 100.394
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013835
  time (eval):    0.0177874
  gflops (eval):  152.601
  gflops (total): 141.588
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013835,0.0177874,152.601,141.588

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995454
  gflops (total): 27.2677
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257348
  gflops (eval):  105.475
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257348,105.475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.436
  maximum absolute entry in einsum_ir solution: 105.436
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137234
  time (eval):    0.017985
  gflops (eval):  150.924
  gflops (total): 140.224
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137234,0.017985,150.924,140.224

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997322
  gflops (total): 27.2166
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257658
  gflops (eval):  105.348
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257658,105.348,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.431
  maximum absolute entry in einsum_ir solution: 107.431
  maximum element-wise difference:              0.000102997
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137501
  time (eval):    0.0177457
  gflops (eval):  152.959
  gflops (total): 141.959
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137501,0.0177457,152.959,141.959

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996118
  gflops (total): 27.2495
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258006
  gflops (eval):  105.206
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258006,105.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3095
  maximum absolute entry in einsum_ir solution: 98.3094
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137335
  time (eval):    0.018038
  gflops (eval):  150.481
  gflops (total): 139.834
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137335,0.018038,150.481,139.834

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996403
  gflops (total): 27.2417
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257403
  gflops (eval):  105.452
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257403,105.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.658
  maximum absolute entry in einsum_ir solution: 104.658
  maximum element-wise difference:              7.24792e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137812
  time (eval):    0.0182022
  gflops (eval):  149.123
  gflops (total): 138.628
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137812,0.0182022,149.123,138.628

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997519
  gflops (total): 27.2112
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256377
  gflops (eval):  105.874
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256377,105.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.2619
  maximum absolute entry in einsum_ir solution: 96.2619
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138923
  time (eval):    0.0176333
  gflops (eval):  153.934
  gflops (total): 142.692
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138923,0.0176333,153.934,142.692

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100083
  gflops (total): 27.1213
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257132
  gflops (eval):  105.563
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257132,105.563,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3413
  maximum absolute entry in einsum_ir solution: 98.3413
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137172
  time (eval):    0.0179451
  gflops (eval):  151.26
  gflops (total): 140.519
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137172,0.0179451,151.26,140.519

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995264
  gflops (total): 27.2729
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257345
  gflops (eval):  105.476
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257345,105.476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.666
  maximum absolute entry in einsum_ir solution: 99.666
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137542
  time (eval):    0.0180164
  gflops (eval):  150.661
  gflops (total): 139.975
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137542,0.0180164,150.661,139.975

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998266
  gflops (total): 27.1909
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256719
  gflops (eval):  105.733
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256719,105.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.372
  maximum absolute entry in einsum_ir solution: 100.372
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138514
  time (eval):    0.0179037
  gflops (eval):  151.61
  gflops (total): 140.723
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138514,0.0179037,151.61,140.723

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997254
  gflops (total): 27.2185
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257435
  gflops (eval):  105.439
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257435,105.439,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.067
  maximum absolute entry in einsum_ir solution: 110.067
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137943
  time (eval):    0.0180056
  gflops (eval):  150.752
  gflops (total): 140.024
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137943,0.0180056,150.752,140.024

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.10016
  gflops (total): 27.1004
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259653
  gflops (eval):  104.538
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259653,104.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.668
  maximum absolute entry in einsum_ir solution: 101.668
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00145605
  time (eval):    0.0176477
  gflops (eval):  153.808
  gflops (total): 142.085
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00145605,0.0176477,153.808,142.085

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993099
  gflops (total): 27.3323
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257311
  gflops (eval):  105.49
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257311,105.49,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.928
  maximum absolute entry in einsum_ir solution: 109.928
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137481
  time (eval):    0.0178473
  gflops (eval):  152.089
  gflops (total): 141.211
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137481,0.0178473,152.089,141.211

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997086
  gflops (total): 27.223
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258524
  gflops (eval):  104.995
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258524,104.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.281
  maximum absolute entry in einsum_ir solution: 105.281
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136437
  time (eval):    0.0177834
  gflops (eval):  152.635
  gflops (total): 141.759
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136437,0.0177834,152.635,141.759

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996991
  gflops (total): 27.2256
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256594
  gflops (eval):  105.785
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256594,105.785,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.46
  maximum absolute entry in einsum_ir solution: 100.46
  maximum element-wise difference:              0.00012207
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136068
  time (eval):    0.0176664
  gflops (eval):  153.645
  gflops (total): 142.658
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136068,0.0176664,153.645,142.658

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0975061
  gflops (total): 27.838
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025646
  gflops (eval):  105.84
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025646,105.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.978
  maximum absolute entry in einsum_ir solution: 117.978
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00149531
  time (eval):    0.0177849
  gflops (eval):  152.622
  gflops (total): 140.785
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00149531,0.0177849,152.622,140.785

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997895
  gflops (total): 27.2009
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025725
  gflops (eval):  105.515
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025725,105.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.48
  maximum absolute entry in einsum_ir solution: 101.48
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137021
  time (eval):    0.0178021
  gflops (eval):  152.474
  gflops (total): 141.577
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137021,0.0178021,152.474,141.577

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.099929
  gflops (total): 27.163
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025759
  gflops (eval):  105.376
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025759,105.376,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.538
  maximum absolute entry in einsum_ir solution: 105.538
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138597
  time (eval):    0.0178196
  gflops (eval):  152.325
  gflops (total): 141.333
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138597,0.0178196,152.325,141.333

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997178
  gflops (total): 27.2205
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260037
  gflops (eval):  104.384
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260037,104.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.137
  maximum absolute entry in einsum_ir solution: 108.137
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013821
  time (eval):    0.0180829
  gflops (eval):  150.107
  gflops (total): 139.449
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013821,0.0180829,150.107,139.449

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100301
  gflops (total): 27.0623
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0623

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258883
  gflops (eval):  104.849
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258883,104.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.714
  maximum absolute entry in einsum_ir solution: 105.714
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137781
  time (eval):    0.0177526
  gflops (eval):  152.9
  gflops (total): 141.888
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137781,0.0177526,152.9,141.888

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0994534
  gflops (total): 27.2929
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259349
  gflops (eval):  104.661
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259349,104.661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.133
  maximum absolute entry in einsum_ir solution: 108.133
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137905
  time (eval):    0.0181694
  gflops (eval):  149.392
  gflops (total): 138.853
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137905,0.0181694,149.392,138.853

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999471
  gflops (total): 27.1581
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257884
  gflops (eval):  105.256
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257884,105.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.0823
  maximum absolute entry in einsum_ir solution: 99.0823
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139083
  time (eval):    0.0177208
  gflops (eval):  153.174
  gflops (total): 142.027
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139083,0.0177208,153.174,142.027

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996847
  gflops (total): 27.2296
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257438
  gflops (eval):  105.438
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257438,105.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.9804
  maximum absolute entry in einsum_ir solution: 99.9804
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00163455
  time (eval):    0.0176386
  gflops (eval):  153.888
  gflops (total): 140.837
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00163455,0.0176386,153.888,140.837

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0976071
  gflops (total): 27.8092
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.8092

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025718
  gflops (eval):  105.544
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025718,105.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.583
  maximum absolute entry in einsum_ir solution: 104.583
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136579
  time (eval):    0.0178281
  gflops (eval):  152.252
  gflops (total): 141.418
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136579,0.0178281,152.252,141.418

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996316
  gflops (total): 27.2441
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256797
  gflops (eval):  105.701
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256797,105.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.286
  maximum absolute entry in einsum_ir solution: 110.286
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137884
  time (eval):    0.0176463
  gflops (eval):  153.821
  gflops (total): 142.673
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137884,0.0176463,153.821,142.673

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100362
  gflops (total): 27.0457
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0457

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260134
  gflops (eval):  104.345
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260134,104.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5199
  maximum absolute entry in einsum_ir solution: 98.5199
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137388
  time (eval):    0.0178997
  gflops (eval):  151.644
  gflops (total): 140.834
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137388,0.0178997,151.644,140.834

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995998
  gflops (total): 27.2528
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258338
  gflops (eval):  105.07
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258338,105.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.231
  maximum absolute entry in einsum_ir solution: 110.231
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138494
  time (eval):    0.0180597
  gflops (eval):  150.3
  gflops (total): 139.595
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138494,0.0180597,150.3,139.595

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100262
  gflops (total): 27.0728
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259935
  gflops (eval):  104.425
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259935,104.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.056
  maximum absolute entry in einsum_ir solution: 100.056
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136102
  time (eval):    0.0177548
  gflops (eval):  152.881
  gflops (total): 141.996
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136102,0.0177548,152.881,141.996

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.099704
  gflops (total): 27.2243
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257866
  gflops (eval):  105.263
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257866,105.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.735
  maximum absolute entry in einsum_ir solution: 110.735
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137884
  time (eval):    0.0178674
  gflops (eval):  151.917
  gflops (total): 141.034
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137884,0.0178674,151.917,141.034

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100141
  gflops (total): 27.1054
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1054

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257633
  gflops (eval):  105.358
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257633,105.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.2421
  maximum absolute entry in einsum_ir solution: 98.2421
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137853
  time (eval):    0.0177074
  gflops (eval):  153.29
  gflops (total): 142.219
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137853,0.0177074,153.29,142.219

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0994427
  gflops (total): 27.2958
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257442
  gflops (eval):  105.436
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257442,105.436,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.343
  maximum absolute entry in einsum_ir solution: 100.343
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138941
  time (eval):    0.0177415
  gflops (eval):  152.996
  gflops (total): 141.884
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138941,0.0177415,152.996,141.884

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0980862
  gflops (total): 27.6733
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.6733

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259319
  gflops (eval):  104.673
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259319,104.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.164
  maximum absolute entry in einsum_ir solution: 108.164
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136614
  time (eval):    0.0177948
  gflops (eval):  152.537
  gflops (total): 141.662
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136614,0.0177948,152.537,141.662

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997293
  gflops (total): 27.2174
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257756
  gflops (eval):  105.308
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257756,105.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.069
  maximum absolute entry in einsum_ir solution: 101.069
  maximum element-wise difference:              8.01086e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00162714
  time (eval):    0.0179046
  gflops (eval):  151.602
  gflops (total): 138.972
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00162714,0.0179046,151.602,138.972

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0976208
  gflops (total): 27.8052
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.8052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256745
  gflops (eval):  105.722
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256745,105.722,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.748
  maximum absolute entry in einsum_ir solution: 101.748
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137496
  time (eval):    0.0178928
  gflops (eval):  151.702
  gflops (total): 140.876
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137496,0.0178928,151.702,140.876

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995492
  gflops (total): 27.2666
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258157
  gflops (eval):  105.144
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258157,105.144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      126.855
  maximum absolute entry in einsum_ir solution: 126.855
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137395
  time (eval):    0.0176664
  gflops (eval):  153.646
  gflops (total): 142.559
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137395,0.0176664,153.646,142.559

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996391
  gflops (total): 27.242
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.242

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257608
  gflops (eval):  105.368
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257608,105.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.295
  maximum absolute entry in einsum_ir solution: 111.295
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140984
  time (eval):    0.0179309
  gflops (eval):  151.38
  gflops (total): 140.345
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140984,0.0179309,151.38,140.345

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995172
  gflops (total): 27.2754
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257153
  gflops (eval):  105.555
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257153,105.555,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.2007
  maximum absolute entry in einsum_ir solution: 97.2007
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140142
  time (eval):    0.0181027
  gflops (eval):  149.942
  gflops (total): 139.169
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140142,0.0181027,149.942,139.169

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100017
  gflops (total): 27.1392
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0262696
  gflops (eval):  103.328
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0262696,103.328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.901
  maximum absolute entry in einsum_ir solution: 108.901
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138372
  time (eval):    0.0176345
  gflops (eval):  153.924
  gflops (total): 142.725
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138372,0.0176345,153.924,142.725

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999214
  gflops (total): 27.165
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258672
  gflops (eval):  104.935
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258672,104.935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.716
  maximum absolute entry in einsum_ir solution: 102.716
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137983
  time (eval):    0.0180006
  gflops (eval):  150.793
  gflops (total): 140.057
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137983,0.0180006,150.793,140.057

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0992951
  gflops (total): 27.3364
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259577
  gflops (eval):  104.569
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259577,104.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.426
  maximum absolute entry in einsum_ir solution: 104.426
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136558
  time (eval):    0.0177935
  gflops (eval):  152.548
  gflops (total): 141.675
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136558,0.0177935,152.548,141.675

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999138
  gflops (total): 27.1671
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259137
  gflops (eval):  104.746
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259137,104.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.8776
  maximum absolute entry in einsum_ir solution: 97.8776
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138836
  time (eval):    0.0181998
  gflops (eval):  149.143
  gflops (total): 138.572
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138836,0.0181998,149.143,138.572

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995444
  gflops (total): 27.2679
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257277
  gflops (eval):  105.504
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257277,105.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.469
  maximum absolute entry in einsum_ir solution: 116.469
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00139139
  time (eval):    0.0175672
  gflops (eval):  154.514
  gflops (total): 143.174
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00139139,0.0175672,154.514,143.174

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100004
  gflops (total): 27.1427
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258025
  gflops (eval):  105.198
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258025,105.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.057
  maximum absolute entry in einsum_ir solution: 106.057
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137698
  time (eval):    0.0178411
  gflops (eval):  152.141
  gflops (total): 141.24
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137698,0.0178411,152.141,141.24

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997023
  gflops (total): 27.2248
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258256
  gflops (eval):  105.104
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258256,105.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.45
  maximum absolute entry in einsum_ir solution: 102.45
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00142718
  time (eval):    0.0180512
  gflops (eval):  150.37
  gflops (total): 139.353
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00142718,0.0180512,150.37,139.353

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996243
  gflops (total): 27.2461
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259854
  gflops (eval):  104.458
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259854,104.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.158
  maximum absolute entry in einsum_ir solution: 102.158
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137322
  time (eval):    0.0177654
  gflops (eval):  152.79
  gflops (total): 141.827
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137322,0.0177654,152.79,141.827

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0980319
  gflops (total): 27.6886
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.6886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256197
  gflops (eval):  105.949
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256197,105.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.769
  maximum absolute entry in einsum_ir solution: 107.769
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136955
  time (eval):    0.0179464
  gflops (eval):  151.249
  gflops (total): 140.525
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136955,0.0179464,151.249,140.525

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997251
  gflops (total): 27.2185
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025721
  gflops (eval):  105.531
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025721,105.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.43
  maximum absolute entry in einsum_ir solution: 101.43
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137954
  time (eval):    0.0178171
  gflops (eval):  152.347
  gflops (total): 141.398
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137954,0.0178171,152.347,141.398

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998515
  gflops (total): 27.1841
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257214
  gflops (eval):  105.53
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257214,105.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4052
  maximum absolute entry in einsum_ir solution: 99.4052
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00141701
  time (eval):    0.0176116
  gflops (eval):  154.124
  gflops (total): 142.647
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00141701,0.0176116,154.124,142.647

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998193
  gflops (total): 27.1928
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025687
  gflops (eval):  105.671
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025687,105.671,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.001
  maximum absolute entry in einsum_ir solution: 101.001
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013574
  time (eval):    0.0180348
  gflops (eval):  150.507
  gflops (total): 139.972
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013574,0.0180348,150.507,139.972

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993084
  gflops (total): 27.3327
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257051
  gflops (eval):  105.597
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257051,105.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.606
  maximum absolute entry in einsum_ir solution: 101.606
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013697
  time (eval):    0.0179025
  gflops (eval):  151.62
  gflops (total): 140.844
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013697,0.0179025,151.62,140.844

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997766
  gflops (total): 27.2045
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2045

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257211
  gflops (eval):  105.531
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257211,105.531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.117
  maximum absolute entry in einsum_ir solution: 102.117
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00135192
  time (eval):    0.0180104
  gflops (eval):  150.712
  gflops (total): 140.189
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00135192,0.0180104,150.712,140.189

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997794
  gflops (total): 27.2037
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257832
  gflops (eval):  105.277
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257832,105.277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.4596
  maximum absolute entry in einsum_ir solution: 99.4595
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137563
  time (eval):    0.0178432
  gflops (eval):  152.123
  gflops (total): 141.235
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137563,0.0178432,152.123,141.235

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996209
  gflops (total): 27.247
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257098
  gflops (eval):  105.577
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257098,105.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.557
  maximum absolute entry in einsum_ir solution: 110.557
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00153429
  time (eval):    0.0179705
  gflops (eval):  151.046
  gflops (total): 139.164
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00153429,0.0179705,151.046,139.164

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999117
  gflops (total): 27.1677
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025717
  gflops (eval):  105.548
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025717,105.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.104
  maximum absolute entry in einsum_ir solution: 108.104
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137452
  time (eval):    0.0179579
  gflops (eval):  151.152
  gflops (total): 140.405
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137452,0.0179579,151.152,140.405

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995966
  gflops (total): 27.2536
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257887
  gflops (eval):  105.254
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257887,105.254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.727
  maximum absolute entry in einsum_ir solution: 102.727
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138105
  time (eval):    0.0180109
  gflops (eval):  150.707
  gflops (total): 139.974
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138105,0.0180109,150.707,139.974

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0996212
  gflops (total): 27.2469
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256288
  gflops (eval):  105.911
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256288,105.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.668
  maximum absolute entry in einsum_ir solution: 108.668
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00167094
  time (eval):    0.0177847
  gflops (eval):  152.624
  gflops (total): 139.516
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00167094,0.0177847,152.624,139.516

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993298
  gflops (total): 27.3269
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257266
  gflops (eval):  105.508
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257266,105.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.853
  maximum absolute entry in einsum_ir solution: 113.853
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136724
  time (eval):    0.0177477
  gflops (eval):  152.942
  gflops (total): 142.002
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136724,0.0177477,152.942,142.002

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998209
  gflops (total): 27.1924
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256883
  gflops (eval):  105.666
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256883,105.666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.554
  maximum absolute entry in einsum_ir solution: 109.554
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137811
  time (eval):    0.0179281
  gflops (eval):  151.403
  gflops (total): 140.596
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137811,0.0179281,151.403,140.596

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998073
  gflops (total): 27.1961
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259702
  gflops (eval):  104.519
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259702,104.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.1322
  maximum absolute entry in einsum_ir solution: 97.1322
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013713
  time (eval):    0.018083
  gflops (eval):  150.106
  gflops (total): 139.525
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013713,0.018083,150.106,139.525

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999777
  gflops (total): 27.1497
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257324
  gflops (eval):  105.484
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257324,105.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.1846
  maximum absolute entry in einsum_ir solution: 96.1846
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138147
  time (eval):    0.0179344
  gflops (eval):  151.35
  gflops (total): 140.525
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138147,0.0179344,151.35,140.525

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0992978
  gflops (total): 27.3357
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257002
  gflops (eval):  105.617
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257002,105.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.7159
  maximum absolute entry in einsum_ir solution: 98.7159
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137236
  time (eval):    0.0176979
  gflops (eval):  153.373
  gflops (total): 142.335
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137236,0.0176979,153.373,142.335

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995136
  gflops (total): 27.2764
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257774
  gflops (eval):  105.301
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257774,105.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.035
  maximum absolute entry in einsum_ir solution: 116.035
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00152239
  time (eval):    0.0179296
  gflops (eval):  151.391
  gflops (total): 139.542
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00152239,0.0179296,151.391,139.542

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995338
  gflops (total): 27.2708
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257108
  gflops (eval):  105.573
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257108,105.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.63
  maximum absolute entry in einsum_ir solution: 100.63
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137449
  time (eval):    0.017946
  gflops (eval):  151.252
  gflops (total): 140.492
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137449,0.017946,151.252,140.492

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999349
  gflops (total): 27.1614
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258648
  gflops (eval):  104.945
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258648,104.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.2662
  maximum absolute entry in einsum_ir solution: 99.2662
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138965
  time (eval):    0.0178747
  gflops (eval):  151.856
  gflops (total): 140.901
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138965,0.0178747,151.856,140.901

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100171
  gflops (total): 27.0974
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256687
  gflops (eval):  105.746
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256687,105.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.807
  maximum absolute entry in einsum_ir solution: 106.807
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138968
  time (eval):    0.0179279
  gflops (eval):  151.404
  gflops (total): 140.513
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138968,0.0179279,151.404,140.513

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100595
  gflops (total): 26.9831
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,26.9831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257671
  gflops (eval):  105.343
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257671,105.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.396
  maximum absolute entry in einsum_ir solution: 102.396
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136726
  time (eval):    0.0179751
  gflops (eval):  151.007
  gflops (total): 140.333
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136726,0.0179751,151.007,140.333

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100354
  gflops (total): 27.0478
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258284
  gflops (eval):  105.092
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258284,105.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.713
  maximum absolute entry in einsum_ir solution: 100.713
  maximum element-wise difference:              7.24792e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137588
  time (eval):    0.0178561
  gflops (eval):  152.014
  gflops (total): 141.139
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137588,0.0178561,152.014,141.139

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100119
  gflops (total): 27.1115
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259344
  gflops (eval):  104.663
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259344,104.663,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.906
  maximum absolute entry in einsum_ir solution: 105.906
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137346
  time (eval):    0.0177992
  gflops (eval):  152.499
  gflops (total): 141.575
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137346,0.0177992,152.499,141.575

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995319
  gflops (total): 27.2714
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257669
  gflops (eval):  105.343
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257669,105.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.244
  maximum absolute entry in einsum_ir solution: 100.244
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138175
  time (eval):    0.0179309
  gflops (eval):  151.379
  gflops (total): 140.548
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138175,0.0179309,151.379,140.548

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100132
  gflops (total): 27.108
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.108

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025984
  gflops (eval):  104.463
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025984,104.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.278
  maximum absolute entry in einsum_ir solution: 103.278
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138155
  time (eval):    0.0178958
  gflops (eval):  151.676
  gflops (total): 140.806
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138155,0.0178958,151.676,140.806

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993341
  gflops (total): 27.3257
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3257

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.02566
  gflops (eval):  105.782
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.02566,105.782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.844
  maximum absolute entry in einsum_ir solution: 103.844
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137187
  time (eval):    0.0177411
  gflops (eval):  152.999
  gflops (total): 142.017
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137187,0.0177411,152.999,142.017

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100035
  gflops (total): 27.1341
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1341

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256809
  gflops (eval):  105.696
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256809,105.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.791
  maximum absolute entry in einsum_ir solution: 100.791
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013795
  time (eval):    0.0180776
  gflops (eval):  150.151
  gflops (total): 139.505
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013795,0.0180776,150.151,139.505

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997521
  gflops (total): 27.2112
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2112

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.025678
  gflops (eval):  105.708
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.025678,105.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.346
  maximum absolute entry in einsum_ir solution: 107.346
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00140077
  time (eval):    0.0176036
  gflops (eval):  154.194
  gflops (total): 142.829
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00140077,0.0176036,154.194,142.829

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100229
  gflops (total): 27.0818
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257397
  gflops (eval):  105.455
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257397,105.455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.322
  maximum absolute entry in einsum_ir solution: 101.322
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137709
  time (eval):    0.0175566
  gflops (eval):  154.607
  gflops (total): 143.362
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137709,0.0175566,154.607,143.362

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100314
  gflops (total): 27.0587
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0587

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256863
  gflops (eval):  105.674
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256863,105.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.824
  maximum absolute entry in einsum_ir solution: 107.824
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00135733
  time (eval):    0.0176992
  gflops (eval):  153.361
  gflops (total): 142.438
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00135733,0.0176992,153.361,142.438

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0997586
  gflops (total): 27.2094
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259593
  gflops (eval):  104.563
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259593,104.563,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7276
  maximum absolute entry in einsum_ir solution: 99.7275
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138022
  time (eval):    0.0176107
  gflops (eval):  154.132
  gflops (total): 142.93
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138022,0.0176107,154.132,142.93

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998803
  gflops (total): 27.1762
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257891
  gflops (eval):  105.253
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257891,105.253,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.385
  maximum absolute entry in einsum_ir solution: 102.385
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137738
  time (eval):    0.0179901
  gflops (eval):  150.881
  gflops (total): 140.151
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137738,0.0179901,150.881,140.151

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995787
  gflops (total): 27.2585
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256347
  gflops (eval):  105.887
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256347,105.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.531
  maximum absolute entry in einsum_ir solution: 107.531
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136523
  time (eval):    0.0177588
  gflops (eval):  152.847
  gflops (total): 141.935
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136523,0.0177588,152.847,141.935

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999908
  gflops (total): 27.1462
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257366
  gflops (eval):  105.467
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257366,105.467,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.485
  maximum absolute entry in einsum_ir solution: 102.486
  maximum element-wise difference:              9.91821e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137216
  time (eval):    0.0179828
  gflops (eval):  150.943
  gflops (total): 140.242
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137216,0.0179828,150.943,140.242

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0995752
  gflops (total): 27.2595
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0259244
  gflops (eval):  104.703
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0259244,104.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.649
  maximum absolute entry in einsum_ir solution: 105.649
  maximum element-wise difference:              9.15527e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137189
  time (eval):    0.0177187
  gflops (eval):  153.192
  gflops (total): 142.184
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137189,0.0177187,153.192,142.184

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999769
  gflops (total): 27.15
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.15

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257892
  gflops (eval):  105.252
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257892,105.252,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      94.5033
  maximum absolute entry in einsum_ir solution: 94.5033
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00138462
  time (eval):    0.0175707
  gflops (eval):  154.483
  gflops (total): 143.199
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00138462,0.0175707,154.483,143.199

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.099487
  gflops (total): 27.2837
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.2837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258243
  gflops (eval):  105.109
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258243,105.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.071
  maximum absolute entry in einsum_ir solution: 113.071
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.0013889
  time (eval):    0.017878
  gflops (eval):  151.827
  gflops (total): 140.882
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.0013889,0.017878,151.827,140.882

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0998325
  gflops (total): 27.1892
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257669
  gflops (eval):  105.343
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257669,105.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.516
  maximum absolute entry in einsum_ir solution: 108.516
  maximum element-wise difference:              0.000114441
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137465
  time (eval):    0.0177001
  gflops (eval):  153.353
  gflops (total): 142.302
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137465,0.0177001,153.353,142.302

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0993668
  gflops (total): 27.3167
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.3167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0258884
  gflops (eval):  104.849
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0258884,104.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.219
  maximum absolute entry in einsum_ir solution: 101.219
  maximum element-wise difference:              7.62939e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136664
  time (eval):    0.0179047
  gflops (eval):  151.601
  gflops (total): 140.85
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136664,0.0179047,151.601,140.85

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.0999726
  gflops (total): 27.1511
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0260359
  gflops (eval):  104.255
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0260359,104.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.194
  maximum absolute entry in einsum_ir solution: 101.194
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00137093
  time (eval):    0.0177607
  gflops (eval):  152.83
  gflops (total): 141.879
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00137093,0.0177607,152.83,141.879

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.097528
  gflops (total): 27.8317
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.8317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257029
  gflops (eval):  105.605
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257029,105.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.843
  maximum absolute entry in einsum_ir solution: 103.843
  maximum element-wise difference:              0.000106812
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136869
  time (eval):    0.0176225
  gflops (eval):  154.028
  gflops (total): 142.928
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136869,0.0176225,154.028,142.928

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100263
  gflops (total): 27.0726
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.0726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0257642
  gflops (eval):  105.354
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0257642,105.354,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.833
  maximum absolute entry in einsum_ir solution: 105.833
  maximum element-wise difference:              8.39233e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  g,h,j,k,e,f
  j,k,i
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 24
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 2 3 5 6 0 1 5 6 4 0 1 2 3 4 

*** benchmarking einsum_ir ***
[5,6,4],[[2,3,5,6,0,1]->[0,1,2,3,5,6]]->[0,1,2,3,4]
  #flops:         2714370048
  time (compile): 0.00136923
  time (eval):    0.0177014
  gflops (eval):  153.342
  gflops (total): 142.332
CSV_DATA: einsum_ir,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0.00136923,0.0177014,153.342,142.332

*** benchmarking at::einsum ***
  #flops:         2714370048
  time (total):   0.100085
  gflops (total): 27.1206
CSV_DATA: at::einsum,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0,0,27.1206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 24 147456 384
  #flops:         2714370048
  time (eval):    0.0256979
  gflops (eval):  105.626
CSV_DATA: at::matmul,"ghjkef,jki->efghi","6,64,6,64,24,6,64","(0,1)",2714370048,0,0.0256979,105.626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.2284
  maximum absolute entry in einsum_ir solution: 97.2284
  maximum element-wise difference:              8.7738e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00180445
  time (eval):    0.0204415
  gflops (eval):  151.901
  gflops (total): 139.58
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00180445,0.0204415,151.901,139.58

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0630327
  gflops (total): 49.2616
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.2616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277052
  gflops (eval):  112.076
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277052,112.076,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6575
  maximum absolute entry in einsum_ir solution: 57.6575
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.001382
  time (eval):    0.020424
  gflops (eval):  152.031
  gflops (total): 142.396
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.001382,0.020424,152.031,142.396

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0626453
  gflops (total): 49.5662
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281579
  gflops (eval):  110.274
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281579,110.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8551
  maximum absolute entry in einsum_ir solution: 57.8551
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136573
  time (eval):    0.0203431
  gflops (eval):  152.636
  gflops (total): 143.033
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136573,0.0203431,152.636,143.033

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0622547
  gflops (total): 49.8772
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027852
  gflops (eval):  111.485
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027852,111.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5063
  maximum absolute entry in einsum_ir solution: 53.5063
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137153
  time (eval):    0.0204451
  gflops (eval):  151.875
  gflops (total): 142.327
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137153,0.0204451,151.875,142.327

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628968
  gflops (total): 49.368
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281767
  gflops (eval):  110.201
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281767,110.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7585
  maximum absolute entry in einsum_ir solution: 54.7585
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138054
  time (eval):    0.0204161
  gflops (eval):  152.09
  gflops (total): 142.457
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138054,0.0204161,152.09,142.457

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624009
  gflops (total): 49.7603
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283197
  gflops (eval):  109.644
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283197,109.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.2001
  maximum absolute entry in einsum_ir solution: 53.2001
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013866
  time (eval):    0.020396
  gflops (eval):  152.24
  gflops (total): 142.549
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013866,0.020396,152.24,142.549

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623498
  gflops (total): 49.8011
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282607
  gflops (eval):  109.873
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282607,109.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.8832
  maximum absolute entry in einsum_ir solution: 55.8832
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139545
  time (eval):    0.0203888
  gflops (eval):  152.294
  gflops (total): 142.539
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139545,0.0203888,152.294,142.539

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625657
  gflops (total): 49.6293
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281742
  gflops (eval):  110.211
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281742,110.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7674
  maximum absolute entry in einsum_ir solution: 54.7674
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013854
  time (eval):    0.0203292
  gflops (eval):  152.74
  gflops (total): 142.995
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013854,0.0203292,152.74,142.995

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624956
  gflops (total): 49.685
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0288462
  gflops (eval):  107.643
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0288462,107.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0592
  maximum absolute entry in einsum_ir solution: 59.0592
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141815
  time (eval):    0.020438
  gflops (eval):  151.927
  gflops (total): 142.069
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141815,0.020438,151.927,142.069

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0622656
  gflops (total): 49.8685
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281542
  gflops (eval):  110.289
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281542,110.289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.5778
  maximum absolute entry in einsum_ir solution: 67.5778
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138214
  time (eval):    0.0203139
  gflops (eval):  152.855
  gflops (total): 143.118
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138214,0.0203139,152.855,143.118

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625065
  gflops (total): 49.6763
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0275105
  gflops (eval):  112.869
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0275105,112.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9356
  maximum absolute entry in einsum_ir solution: 56.9356
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137574
  time (eval):    0.0203993
  gflops (eval):  152.215
  gflops (total): 142.598
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137574,0.0203993,152.215,142.598

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628851
  gflops (total): 49.3772
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.3772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280309
  gflops (eval):  110.774
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280309,110.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3028
  maximum absolute entry in einsum_ir solution: 55.3028
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136416
  time (eval):    0.0203736
  gflops (eval):  152.407
  gflops (total): 142.843
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136416,0.0203736,152.407,142.843

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0619779
  gflops (total): 50.1
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.1

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283602
  gflops (eval):  109.488
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283602,109.488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.3975
  maximum absolute entry in einsum_ir solution: 53.3975
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013749
  time (eval):    0.0204659
  gflops (eval):  151.721
  gflops (total): 142.17
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013749,0.0204659,151.721,142.17

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062324
  gflops (total): 49.8218
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277397
  gflops (eval):  111.937
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277397,111.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.5923
  maximum absolute entry in einsum_ir solution: 56.5923
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139548
  time (eval):    0.0203985
  gflops (eval):  152.221
  gflops (total): 142.475
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139548,0.0203985,152.221,142.475

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624936
  gflops (total): 49.6865
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028079
  gflops (eval):  110.584
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028079,110.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4242
  maximum absolute entry in einsum_ir solution: 55.4242
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138987
  time (eval):    0.0204474
  gflops (eval):  151.857
  gflops (total): 142.192
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138987,0.0204474,151.857,142.192

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623039
  gflops (total): 49.8378
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282407
  gflops (eval):  109.951
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282407,109.951,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.6864
  maximum absolute entry in einsum_ir solution: 53.6864
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138366
  time (eval):    0.0203698
  gflops (eval):  152.436
  gflops (total): 142.74
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138366,0.0203698,152.436,142.74

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624807
  gflops (total): 49.6968
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283613
  gflops (eval):  109.484
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283613,109.484,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9569
  maximum absolute entry in einsum_ir solution: 54.9569
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00149734
  time (eval):    0.0205389
  gflops (eval):  151.181
  gflops (total): 140.909
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00149734,0.0205389,151.181,140.909

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0630138
  gflops (total): 49.2764
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.2764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279847
  gflops (eval):  110.957
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279847,110.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3032
  maximum absolute entry in einsum_ir solution: 56.3032
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139124
  time (eval):    0.0203362
  gflops (eval):  152.688
  gflops (total): 142.911
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139124,0.0203362,152.688,142.911

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062647
  gflops (total): 49.5649
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283693
  gflops (eval):  109.453
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283693,109.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4081
  maximum absolute entry in einsum_ir solution: 60.4081
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00152258
  time (eval):    0.0204067
  gflops (eval):  152.161
  gflops (total): 141.596
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00152258,0.0204067,152.161,141.596

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.06244
  gflops (total): 49.7292
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279732
  gflops (eval):  111.002
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279732,111.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3435
  maximum absolute entry in einsum_ir solution: 60.3435
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136829
  time (eval):    0.0203746
  gflops (eval):  152.4
  gflops (total): 142.809
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136829,0.0203746,152.4,142.809

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0630276
  gflops (total): 49.2656
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.2656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285001
  gflops (eval):  108.95
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285001,108.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6592
  maximum absolute entry in einsum_ir solution: 56.6592
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138413
  time (eval):    0.0204273
  gflops (eval):  152.007
  gflops (total): 142.361
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138413,0.0204273,152.007,142.361

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628183
  gflops (total): 49.4297
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285404
  gflops (eval):  108.796
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285404,108.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.479
  maximum absolute entry in einsum_ir solution: 55.479
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013876
  time (eval):    0.0204209
  gflops (eval):  152.054
  gflops (total): 142.38
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013876,0.0204209,152.054,142.38

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625208
  gflops (total): 49.6649
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283897
  gflops (eval):  109.374
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283897,109.374,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3611
  maximum absolute entry in einsum_ir solution: 54.3611
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138157
  time (eval):    0.0204121
  gflops (eval):  152.12
  gflops (total): 142.477
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138157,0.0204121,152.12,142.477

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0622705
  gflops (total): 49.8646
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0286109
  gflops (eval):  108.528
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0286109,108.528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5058
  maximum absolute entry in einsum_ir solution: 59.5058
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138235
  time (eval):    0.020488
  gflops (eval):  151.557
  gflops (total): 141.977
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138235,0.020488,151.557,141.977

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625112
  gflops (total): 49.6725
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277647
  gflops (eval):  111.836
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277647,111.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9526
  maximum absolute entry in einsum_ir solution: 60.9526
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137393
  time (eval):    0.020423
  gflops (eval):  152.039
  gflops (total): 142.456
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137393,0.020423,152.039,142.456

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0626255
  gflops (total): 49.5819
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285194
  gflops (eval):  108.877
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285194,108.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.339
  maximum absolute entry in einsum_ir solution: 54.339
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142088
  time (eval):    0.0204441
  gflops (eval):  151.882
  gflops (total): 142.012
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142088,0.0204441,151.882,142.012

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628642
  gflops (total): 49.3936
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.3936

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.027975
  gflops (eval):  110.995
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.027975,110.995,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3603
  maximum absolute entry in einsum_ir solution: 58.3603
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00145369
  time (eval):    0.0204306
  gflops (eval):  151.983
  gflops (total): 141.887
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00145369,0.0204306,151.983,141.887

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062422
  gflops (total): 49.7435
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7435

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281406
  gflops (eval):  110.342
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281406,110.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.0994
  maximum absolute entry in einsum_ir solution: 54.0994
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138805
  time (eval):    0.0204458
  gflops (eval):  151.87
  gflops (total): 142.215
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138805,0.0204458,151.87,142.215

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624902
  gflops (total): 49.6893
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6893

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284663
  gflops (eval):  109.079
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284663,109.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1604
  maximum absolute entry in einsum_ir solution: 55.1604
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0016204
  time (eval):    0.0203961
  gflops (eval):  152.239
  gflops (total): 141.035
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0016204,0.0203961,152.239,141.035

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624165
  gflops (total): 49.7479
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278336
  gflops (eval):  111.559
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278336,111.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8318
  maximum absolute entry in einsum_ir solution: 59.8318
  maximum element-wise difference:              2.86102e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013839
  time (eval):    0.0204495
  gflops (eval):  151.842
  gflops (total): 142.218
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013839,0.0204495,151.842,142.218

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0627042
  gflops (total): 49.5197
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283972
  gflops (eval):  109.345
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283972,109.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5453
  maximum absolute entry in einsum_ir solution: 59.5453
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013804
  time (eval):    0.0203384
  gflops (eval):  152.671
  gflops (total): 142.968
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013804,0.0203384,152.671,142.968

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062262
  gflops (total): 49.8714
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028203
  gflops (eval):  110.098
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028203,110.098,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1524
  maximum absolute entry in einsum_ir solution: 54.1524
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138045
  time (eval):    0.0203954
  gflops (eval):  152.244
  gflops (total): 142.593
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138045,0.0203954,152.244,142.593

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0633507
  gflops (total): 49.0143
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.0143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283888
  gflops (eval):  109.377
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283888,109.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5561
  maximum absolute entry in einsum_ir solution: 59.5561
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138619
  time (eval):    0.0204397
  gflops (eval):  151.914
  gflops (total): 142.266
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138619,0.0204397,151.914,142.266

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0621834
  gflops (total): 49.9344
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.9344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281708
  gflops (eval):  110.224
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281708,110.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4441
  maximum absolute entry in einsum_ir solution: 60.4441
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00168162
  time (eval):    0.0203487
  gflops (eval):  152.594
  gflops (total): 140.946
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00168162,0.0203487,152.594,140.946

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062736
  gflops (total): 49.4946
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278568
  gflops (eval):  111.466
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278568,111.466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0443
  maximum absolute entry in einsum_ir solution: 59.0443
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138748
  time (eval):    0.0204512
  gflops (eval):  151.829
  gflops (total): 142.183
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138748,0.0204512,151.829,142.183

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0620915
  gflops (total): 50.0083
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.0083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283809
  gflops (eval):  109.408
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283809,109.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8758
  maximum absolute entry in einsum_ir solution: 54.8758
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138221
  time (eval):    0.0204335
  gflops (eval):  151.961
  gflops (total): 142.333
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138221,0.0204335,151.961,142.333

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0626522
  gflops (total): 49.5608
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278352
  gflops (eval):  111.553
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278352,111.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5916
  maximum absolute entry in einsum_ir solution: 61.5916
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139995
  time (eval):    0.0204624
  gflops (eval):  151.746
  gflops (total): 142.029
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139995,0.0204624,151.746,142.029

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0619987
  gflops (total): 50.0832
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.0832

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282258
  gflops (eval):  110.009
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282258,110.009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.9986
  maximum absolute entry in einsum_ir solution: 67.9986
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143969
  time (eval):    0.0204326
  gflops (eval):  151.967
  gflops (total): 141.964
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143969,0.0204326,151.967,141.964

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0627054
  gflops (total): 49.5187
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5187

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283293
  gflops (eval):  109.607
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283293,109.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6724
  maximum absolute entry in einsum_ir solution: 58.6724
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137715
  time (eval):    0.0203455
  gflops (eval):  152.618
  gflops (total): 142.943
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137715,0.0203455,152.618,142.943

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0621096
  gflops (total): 49.9937
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.9937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280785
  gflops (eval):  110.586
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280785,110.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5454
  maximum absolute entry in einsum_ir solution: 57.5454
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142814
  time (eval):    0.0205533
  gflops (eval):  151.075
  gflops (total): 141.26
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142814,0.0205533,151.075,141.26

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624133
  gflops (total): 49.7505
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279224
  gflops (eval):  111.204
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279224,111.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.5625
  maximum absolute entry in einsum_ir solution: 54.5625
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138131
  time (eval):    0.0204697
  gflops (eval):  151.692
  gflops (total): 142.103
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138131,0.0204697,151.692,142.103

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628133
  gflops (total): 49.4337
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279154
  gflops (eval):  111.232
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279154,111.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.5359
  maximum absolute entry in einsum_ir solution: 67.5359
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00169927
  time (eval):    0.0204654
  gflops (eval):  151.724
  gflops (total): 140.092
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00169927,0.0204654,151.724,140.092

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0627982
  gflops (total): 49.4455
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283466
  gflops (eval):  109.54
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283466,109.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7476
  maximum absolute entry in einsum_ir solution: 56.7476
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136476
  time (eval):    0.0204715
  gflops (eval):  151.679
  gflops (total): 142.199
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136476,0.0204715,151.679,142.199

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625012
  gflops (total): 49.6805
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6805

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285478
  gflops (eval):  108.768
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285478,108.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.1131
  maximum absolute entry in einsum_ir solution: 55.1131
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138175
  time (eval):    0.0203609
  gflops (eval):  152.503
  gflops (total): 142.811
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138175,0.0203609,152.503,142.811

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0619711
  gflops (total): 50.1055
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.1055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279511
  gflops (eval):  111.09
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279511,111.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0458
  maximum absolute entry in einsum_ir solution: 60.0458
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139158
  time (eval):    0.0203762
  gflops (eval):  152.388
  gflops (total): 142.646
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139158,0.0203762,152.388,142.646

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.063299
  gflops (total): 49.0544
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.0544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0286954
  gflops (eval):  108.209
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0286954,108.209,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7527
  maximum absolute entry in einsum_ir solution: 61.7527
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013745
  time (eval):    0.0204558
  gflops (eval):  151.795
  gflops (total): 142.238
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013745,0.0204558,151.795,142.238

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624742
  gflops (total): 49.702
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028414
  gflops (eval):  109.28
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028414,109.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7027
  maximum absolute entry in einsum_ir solution: 62.7027
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013649
  time (eval):    0.020377
  gflops (eval):  152.382
  gflops (total): 142.816
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013649,0.020377,152.382,142.816

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624697
  gflops (total): 49.7055
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7055

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283449
  gflops (eval):  109.547
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283449,109.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1252
  maximum absolute entry in einsum_ir solution: 56.1252
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137854
  time (eval):    0.0204026
  gflops (eval):  152.191
  gflops (total): 142.558
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137854,0.0204026,152.191,142.558

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628925
  gflops (total): 49.3714
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.3714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277726
  gflops (eval):  111.804
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277726,111.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.2635
  maximum absolute entry in einsum_ir solution: 54.2635
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013789
  time (eval):    0.0204638
  gflops (eval):  151.735
  gflops (total): 142.157
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013789,0.0204638,151.735,142.157

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624426
  gflops (total): 49.7271
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279148
  gflops (eval):  111.235
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279148,111.235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5367
  maximum absolute entry in einsum_ir solution: 61.5367
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142376
  time (eval):    0.0203772
  gflops (eval):  152.381
  gflops (total): 142.429
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142376,0.0203772,152.381,142.429

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628089
  gflops (total): 49.4372
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282893
  gflops (eval):  109.762
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282893,109.762,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.4607
  maximum absolute entry in einsum_ir solution: 54.4607
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142931
  time (eval):    0.0203474
  gflops (eval):  152.604
  gflops (total): 142.588
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142931,0.0203474,152.604,142.588

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628544
  gflops (total): 49.4014
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277791
  gflops (eval):  111.778
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277791,111.778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.8073
  maximum absolute entry in einsum_ir solution: 53.8073
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00135826
  time (eval):    0.0204156
  gflops (eval):  152.094
  gflops (total): 142.606
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00135826,0.0204156,152.094,142.606

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623774
  gflops (total): 49.7791
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279562
  gflops (eval):  111.07
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279562,111.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5776
  maximum absolute entry in einsum_ir solution: 58.5776
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138271
  time (eval):    0.020529
  gflops (eval):  151.254
  gflops (total): 141.709
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138271,0.020529,151.254,141.709

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.063009
  gflops (total): 49.2802
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.2802

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281302
  gflops (eval):  110.383
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281302,110.383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5495
  maximum absolute entry in einsum_ir solution: 59.5495
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139402
  time (eval):    0.0204609
  gflops (eval):  151.758
  gflops (total): 142.078
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139402,0.0204609,151.758,142.078

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0630166
  gflops (total): 49.2742
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.2742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283124
  gflops (eval):  109.673
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283124,109.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.658
  maximum absolute entry in einsum_ir solution: 56.658
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141718
  time (eval):    0.0204407
  gflops (eval):  151.907
  gflops (total): 142.058
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141718,0.0204407,151.907,142.058

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623583
  gflops (total): 49.7943
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.02841
  gflops (eval):  109.296
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.02841,109.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1254
  maximum absolute entry in einsum_ir solution: 58.1254
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138148
  time (eval):    0.0203768
  gflops (eval):  152.384
  gflops (total): 142.708
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138148,0.0203768,152.384,142.708

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625315
  gflops (total): 49.6565
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284224
  gflops (eval):  109.248
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284224,109.248,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      51.6727
  maximum absolute entry in einsum_ir solution: 51.6727
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136502
  time (eval):    0.0204327
  gflops (eval):  151.967
  gflops (total): 142.45
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136502,0.0204327,151.967,142.45

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062516
  gflops (total): 49.6688
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279399
  gflops (eval):  111.135
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279399,111.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4936
  maximum absolute entry in einsum_ir solution: 57.4936
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139084
  time (eval):    0.020511
  gflops (eval):  151.387
  gflops (total): 141.773
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139084,0.020511,151.387,141.773

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623498
  gflops (total): 49.8011
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282112
  gflops (eval):  110.066
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282112,110.066,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.555
  maximum absolute entry in einsum_ir solution: 54.555
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138716
  time (eval):    0.0205166
  gflops (eval):  151.346
  gflops (total): 141.761
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138716,0.0205166,151.346,141.761

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624142
  gflops (total): 49.7498
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282408
  gflops (eval):  109.95
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282408,109.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3304
  maximum absolute entry in einsum_ir solution: 57.3304
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141415
  time (eval):    0.020354
  gflops (eval):  152.555
  gflops (total): 142.644
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141415,0.020354,152.555,142.644

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0621797
  gflops (total): 49.9374
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.9374

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278704
  gflops (eval):  111.412
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278704,111.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5055
  maximum absolute entry in einsum_ir solution: 57.5055
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00141961
  time (eval):    0.0204506
  gflops (eval):  151.834
  gflops (total): 141.978
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00141961,0.0204506,151.834,141.978

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0632329
  gflops (total): 49.1056
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.1056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282823
  gflops (eval):  109.789
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282823,109.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.8896
  maximum absolute entry in einsum_ir solution: 56.8896
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00165142
  time (eval):    0.0204233
  gflops (eval):  152.037
  gflops (total): 140.663
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00165142,0.0204233,152.037,140.663

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623159
  gflops (total): 49.8283
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8283

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278767
  gflops (eval):  111.386
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278767,111.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4593
  maximum absolute entry in einsum_ir solution: 55.4594
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137654
  time (eval):    0.020382
  gflops (eval):  152.345
  gflops (total): 142.707
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137654,0.020382,152.345,142.707

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0626423
  gflops (total): 49.5686
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5686

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0277786
  gflops (eval):  111.78
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0277786,111.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2559
  maximum absolute entry in einsum_ir solution: 58.2559
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137987
  time (eval):    0.0204128
  gflops (eval):  152.115
  gflops (total): 142.483
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137987,0.0204128,152.115,142.483

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0620878
  gflops (total): 50.0113
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.0113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0275578
  gflops (eval):  112.676
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0275578,112.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3285
  maximum absolute entry in einsum_ir solution: 56.3285
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137413
  time (eval):    0.020455
  gflops (eval):  151.801
  gflops (total): 142.245
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137413,0.020455,151.801,142.245

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625223
  gflops (total): 49.6637
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028369
  gflops (eval):  109.454
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028369,109.454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0786
  maximum absolute entry in einsum_ir solution: 58.0786
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138794
  time (eval):    0.0204149
  gflops (eval):  152.099
  gflops (total): 142.417
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138794,0.0204149,152.099,142.417

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0622902
  gflops (total): 49.8488
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8488

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279948
  gflops (eval):  110.917
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279948,110.917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2593
  maximum absolute entry in einsum_ir solution: 59.2593
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139252
  time (eval):    0.0204266
  gflops (eval):  152.012
  gflops (total): 142.311
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139252,0.0204266,152.012,142.311

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628946
  gflops (total): 49.3697
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.3697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283877
  gflops (eval):  109.382
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283877,109.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3338
  maximum absolute entry in einsum_ir solution: 58.3338
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137982
  time (eval):    0.0203632
  gflops (eval):  152.486
  gflops (total): 142.809
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137982,0.0203632,152.486,142.809

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625105
  gflops (total): 49.6731
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283154
  gflops (eval):  109.661
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283154,109.661,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4605
  maximum absolute entry in einsum_ir solution: 63.4605
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138404
  time (eval):    0.0204226
  gflops (eval):  152.042
  gflops (total): 142.392
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138404,0.0204226,152.042,142.392

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624331
  gflops (total): 49.7347
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284122
  gflops (eval):  109.287
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284122,109.287,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.699
  maximum absolute entry in einsum_ir solution: 55.699
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138117
  time (eval):    0.0204578
  gflops (eval):  151.78
  gflops (total): 142.181
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138117,0.0204578,151.78,142.181

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.06258
  gflops (total): 49.618
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285526
  gflops (eval):  108.75
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285526,108.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8147
  maximum absolute entry in einsum_ir solution: 58.8147
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00153451
  time (eval):    0.0203863
  gflops (eval):  152.313
  gflops (total): 141.651
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00153451,0.0203863,152.313,141.651

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628675
  gflops (total): 49.3911
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.3911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279056
  gflops (eval):  111.271
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279056,111.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5257
  maximum absolute entry in einsum_ir solution: 57.5257
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142563
  time (eval):    0.0205106
  gflops (eval):  151.39
  gflops (total): 141.551
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142563,0.0205106,151.39,141.551

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0625331
  gflops (total): 49.6552
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.6552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281875
  gflops (eval):  110.158
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281875,110.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1633
  maximum absolute entry in einsum_ir solution: 61.1633
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138529
  time (eval):    0.0204014
  gflops (eval):  152.2
  gflops (total): 142.523
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138529,0.0204014,152.2,142.523

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624203
  gflops (total): 49.7449
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280188
  gflops (eval):  110.822
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280188,110.822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9575
  maximum absolute entry in einsum_ir solution: 55.9575
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137388
  time (eval):    0.0204574
  gflops (eval):  151.783
  gflops (total): 142.231
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137388,0.0204574,151.783,142.231

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0634336
  gflops (total): 48.9503
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,48.9503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284621
  gflops (eval):  109.095
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284621,109.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9156
  maximum absolute entry in einsum_ir solution: 55.9156
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138059
  time (eval):    0.0204082
  gflops (eval):  152.149
  gflops (total): 142.508
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138059,0.0204082,152.149,142.508

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0628268
  gflops (total): 49.4231
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282931
  gflops (eval):  109.747
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282931,109.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7584
  maximum absolute entry in einsum_ir solution: 58.7584
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139162
  time (eval):    0.0203916
  gflops (eval):  152.273
  gflops (total): 142.545
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139162,0.0203916,152.273,142.545

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624445
  gflops (total): 49.7256
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7256

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278496
  gflops (eval):  111.495
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278496,111.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4434
  maximum absolute entry in einsum_ir solution: 56.4434
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138507
  time (eval):    0.0204473
  gflops (eval):  151.858
  gflops (total): 142.224
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138507,0.0204473,151.858,142.224

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0634332
  gflops (total): 48.9506
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,48.9506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0284031
  gflops (eval):  109.322
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0284031,109.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9429
  maximum absolute entry in einsum_ir solution: 55.9429
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142627
  time (eval):    0.0204439
  gflops (eval):  151.883
  gflops (total): 141.978
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142627,0.0204439,151.883,141.978

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623227
  gflops (total): 49.8228
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282823
  gflops (eval):  109.789
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282823,109.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8011
  maximum absolute entry in einsum_ir solution: 54.8011
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138451
  time (eval):    0.0204282
  gflops (eval):  152
  gflops (total): 142.352
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138451,0.0204282,152,142.352

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0622561
  gflops (total): 49.8761
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8761

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279601
  gflops (eval):  111.054
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279601,111.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7102
  maximum absolute entry in einsum_ir solution: 59.7102
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00167342
  time (eval):    0.0203262
  gflops (eval):  152.763
  gflops (total): 141.143
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00167342,0.0203262,152.763,141.143

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0618716
  gflops (total): 50.186
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0281292
  gflops (eval):  110.387
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0281292,110.387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.9884
  maximum absolute entry in einsum_ir solution: 54.9884
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00140243
  time (eval):    0.0204362
  gflops (eval):  151.941
  gflops (total): 142.183
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00140243,0.0204362,151.941,142.183

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623774
  gflops (total): 49.7791
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278085
  gflops (eval):  111.66
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278085,111.66,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9357
  maximum absolute entry in einsum_ir solution: 60.9357
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138615
  time (eval):    0.0204185
  gflops (eval):  152.072
  gflops (total): 142.405
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138615,0.0204185,152.072,142.405

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0624022
  gflops (total): 49.7593
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282325
  gflops (eval):  109.983
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282325,109.983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.0686
  maximum absolute entry in einsum_ir solution: 55.0686
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137477
  time (eval):    0.0204552
  gflops (eval):  151.799
  gflops (total): 142.24
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137477,0.0204552,151.799,142.24

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0623785
  gflops (total): 49.7782
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280672
  gflops (eval):  110.631
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280672,110.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7612
  maximum absolute entry in einsum_ir solution: 57.7612
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00142359
  time (eval):    0.0205036
  gflops (eval):  151.441
  gflops (total): 141.609
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00142359,0.0205036,151.441,141.609

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0627398
  gflops (total): 49.4915
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0282777
  gflops (eval):  109.807
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0282777,109.807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4309
  maximum absolute entry in einsum_ir solution: 55.4309
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00167235
  time (eval):    0.0204179
  gflops (eval):  152.077
  gflops (total): 140.564
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00167235,0.0204179,152.077,140.564

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062103
  gflops (total): 49.9991
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.9991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.02815
  gflops (eval):  110.305
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.02815,110.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.225
  maximum absolute entry in einsum_ir solution: 54.225
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136978
  time (eval):    0.0204639
  gflops (eval):  151.735
  gflops (total): 142.216
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136978,0.0204639,151.735,142.216

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0631682
  gflops (total): 49.156
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028354
  gflops (eval):  109.512
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028354,109.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1567
  maximum absolute entry in einsum_ir solution: 59.1567
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00136365
  time (eval):    0.0203929
  gflops (eval):  152.263
  gflops (total): 142.72
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00136365,0.0203929,152.263,142.72

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0633842
  gflops (total): 48.9884
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,48.9884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0285249
  gflops (eval):  108.855
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0285249,108.855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5268
  maximum absolute entry in einsum_ir solution: 59.5268
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137931
  time (eval):    0.0204422
  gflops (eval):  151.896
  gflops (total): 142.295
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137931,0.0204422,151.896,142.295

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0627406
  gflops (total): 49.4909
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.4909

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280941
  gflops (eval):  110.525
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280941,110.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2085
  maximum absolute entry in einsum_ir solution: 57.2085
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137697
  time (eval):    0.0204763
  gflops (eval):  151.643
  gflops (total): 142.088
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137697,0.0204763,151.643,142.088

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.06243
  gflops (total): 49.7372
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.7372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283562
  gflops (eval):  109.503
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283562,109.503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0017
  maximum absolute entry in einsum_ir solution: 58.0017
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137223
  time (eval):    0.0204246
  gflops (eval):  152.027
  gflops (total): 142.456
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137223,0.0204246,152.027,142.456

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0627245
  gflops (total): 49.5036
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0283592
  gflops (eval):  109.491
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0283592,109.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6189
  maximum absolute entry in einsum_ir solution: 59.6189
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138189
  time (eval):    0.0205071
  gflops (eval):  151.415
  gflops (total): 141.856
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138189,0.0205071,151.415,141.856

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0620168
  gflops (total): 50.0685
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,50.0685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280665
  gflops (eval):  110.633
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280665,110.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.9894
  maximum absolute entry in einsum_ir solution: 53.9894
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.0013883
  time (eval):    0.0204441
  gflops (eval):  151.882
  gflops (total): 142.224
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.0013883,0.0204441,151.882,142.224

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0633562
  gflops (total): 49.0101
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.0101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0278204
  gflops (eval):  111.612
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0278204,111.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8405
  maximum absolute entry in einsum_ir solution: 59.8405
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00143847
  time (eval):    0.0204466
  gflops (eval):  151.863
  gflops (total): 141.881
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00143847,0.0204466,151.863,141.881

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0622302
  gflops (total): 49.8969
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.8969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028614
  gflops (eval):  108.517
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028614,108.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.1181
  maximum absolute entry in einsum_ir solution: 53.1181
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138352
  time (eval):    0.0203906
  gflops (eval):  152.281
  gflops (total): 142.605
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138352,0.0203906,152.281,142.605

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.06261
  gflops (total): 49.5942
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028302
  gflops (eval):  109.713
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028302,109.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7102
  maximum absolute entry in einsum_ir solution: 59.7102
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00137092
  time (eval):    0.0204457
  gflops (eval):  151.87
  gflops (total): 142.327
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00137092,0.0204457,151.87,142.327

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0631946
  gflops (total): 49.1354
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.1354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280458
  gflops (eval):  110.715
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280458,110.715,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3271
  maximum absolute entry in einsum_ir solution: 60.3271
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138183
  time (eval):    0.0204233
  gflops (eval):  152.036
  gflops (total): 142.402
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138183,0.0204233,152.036,142.402

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0626045
  gflops (total): 49.5986
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0280419
  gflops (eval):  110.73
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0280419,110.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.9186
  maximum absolute entry in einsum_ir solution: 55.9186
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138887
  time (eval):    0.0203896
  gflops (eval):  152.288
  gflops (total): 142.576
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138887,0.0203896,152.288,142.576

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.062118
  gflops (total): 49.987
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279181
  gflops (eval):  111.222
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279181,111.222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.7218
  maximum absolute entry in einsum_ir solution: 54.7218
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00144667
  time (eval):    0.0204169
  gflops (eval):  152.084
  gflops (total): 142.021
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00144667,0.0204169,152.084,142.021

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0633315
  gflops (total): 49.0292
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.0292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.028406
  gflops (eval):  109.311
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.028406,109.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      53.5588
  maximum absolute entry in einsum_ir solution: 53.5588
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00138899
  time (eval):    0.0204645
  gflops (eval):  151.731
  gflops (total): 142.087
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00138899,0.0204645,151.731,142.087

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0621816
  gflops (total): 49.9359
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.9359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279396
  gflops (eval):  111.136
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279396,111.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.2987
  maximum absolute entry in einsum_ir solution: 55.2987
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b,a,d
  c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 24
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 2 4 
  string_dim_ids: 4 1 0 3 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,0,3]->[0,1,4,3]],[2,4]->[0,1,2,3]
  #flops:         3105091584
  time (compile): 0.00139284
  time (eval):    0.0203659
  gflops (eval):  152.465
  gflops (total): 142.705
CSV_DATA: einsum_ir,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0.00139284,0.0203659,152.465,142.705

*** benchmarking at::einsum ***
  #flops:         3105091584
  time (total):   0.0626271
  gflops (total): 49.5807
CSV_DATA: at::einsum,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0,0,49.5807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 24 96
  #flops:         3105091584
  time (eval):    0.0279515
  gflops (eval):  111.089
CSV_DATA: at::matmul,"ebad,ce->abcd","96,84,24,84,96","(0,1)",3105091584,0,0.0279515,111.089,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.3726
  maximum absolute entry in einsum_ir solution: 54.3726
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139591
  time (eval):    0.0105193
  gflops (eval):  411.77
  gflops (total): 363.529
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139591,0.0105193,411.77,363.529

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483845
  gflops (total): 89.5228
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0481713
  gflops (eval):  89.9192
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0481713,89.9192,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1399
  maximum absolute entry in einsum_ir solution: 35.1399
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140497
  time (eval):    0.0105343
  gflops (eval):  411.184
  gflops (total): 362.797
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140497,0.0105343,411.184,362.797

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048463
  gflops (total): 89.3779
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479692
  gflops (eval):  90.2979
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479692,90.2979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.1952
  maximum absolute entry in einsum_ir solution: 32.1952
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141686
  time (eval):    0.010503
  gflops (eval):  412.41
  gflops (total): 363.388
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141686,0.010503,412.41,363.388

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0487772
  gflops (total): 88.8022
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.8022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0482572
  gflops (eval):  89.759
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0482572,89.759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7858
  maximum absolute entry in einsum_ir solution: 33.7858
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141168
  time (eval):    0.0105425
  gflops (eval):  410.863
  gflops (total): 362.344
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141168,0.0105425,410.863,362.344

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481564
  gflops (total): 89.9469
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9469

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477628
  gflops (eval):  90.6881
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477628,90.6881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7174
  maximum absolute entry in einsum_ir solution: 35.7174
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139713
  time (eval):    0.010815
  gflops (eval):  400.512
  gflops (total): 354.691
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139713,0.010815,400.512,354.691

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484065
  gflops (total): 89.4821
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4821

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476414
  gflops (eval):  90.9193
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476414,90.9193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1784
  maximum absolute entry in einsum_ir solution: 37.1784
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014294
  time (eval):    0.0105208
  gflops (eval):  411.71
  gflops (total): 362.464
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014294,0.0105208,411.71,362.464

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481567
  gflops (total): 89.9464
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9464

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478544
  gflops (eval):  90.5146
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478544,90.5146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3313
  maximum absolute entry in einsum_ir solution: 35.3313
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141625
  time (eval):    0.0105389
  gflops (eval):  411.004
  gflops (total): 362.315
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141625,0.0105389,411.004,362.315

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483433
  gflops (total): 89.5992
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0475843
  gflops (eval):  91.0283
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0475843,91.0283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3741
  maximum absolute entry in einsum_ir solution: 36.3741
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147426
  time (eval):    0.0105156
  gflops (eval):  411.915
  gflops (total): 361.266
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147426,0.0105156,411.915,361.266

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484859
  gflops (total): 89.3356
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476065
  gflops (eval):  90.9859
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476065,90.9859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4999
  maximum absolute entry in einsum_ir solution: 37.4999
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140835
  time (eval):    0.0105201
  gflops (eval):  411.737
  gflops (total): 363.125
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140835,0.0105201,411.737,363.125

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483903
  gflops (total): 89.5122
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476625
  gflops (eval):  90.879
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476625,90.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.4712
  maximum absolute entry in einsum_ir solution: 36.4712
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140908
  time (eval):    0.0105079
  gflops (eval):  412.216
  gflops (total): 363.475
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140908,0.0105079,412.216,363.475

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485323
  gflops (total): 89.2502
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.2502

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477887
  gflops (eval):  90.639
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477887,90.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6167
  maximum absolute entry in einsum_ir solution: 33.6167
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141681
  time (eval):    0.0105096
  gflops (eval):  412.149
  gflops (total): 363.187
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141681,0.0105096,412.149,363.187

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484288
  gflops (total): 89.441
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479085
  gflops (eval):  90.4124
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479085,90.4124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0272
  maximum absolute entry in einsum_ir solution: 33.0272
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140438
  time (eval):    0.0105242
  gflops (eval):  411.577
  gflops (total): 363.121
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140438,0.0105242,411.577,363.121

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484506
  gflops (total): 89.4007
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477763
  gflops (eval):  90.6626
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477763,90.6626,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2154
  maximum absolute entry in einsum_ir solution: 34.2154
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001408
  time (eval):    0.0105304
  gflops (eval):  411.334
  gflops (total): 362.822
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001408,0.0105304,411.334,362.822

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483587
  gflops (total): 89.5706
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479427
  gflops (eval):  90.3479
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479427,90.3479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6912
  maximum absolute entry in einsum_ir solution: 35.6912
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00170787
  time (eval):    0.0105238
  gflops (eval):  411.592
  gflops (total): 354.123
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00170787,0.0105238,411.592,354.123

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0490395
  gflops (total): 88.3272
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.3272

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0485265
  gflops (eval):  89.2609
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0485265,89.2609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4397
  maximum absolute entry in einsum_ir solution: 35.4397
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142204
  time (eval):    0.010513
  gflops (eval):  412.016
  gflops (total): 362.925
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142204,0.010513,412.016,362.925

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0477759
  gflops (total): 90.6633
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,90.6633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479438
  gflops (eval):  90.3457
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479438,90.3457,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3326
  maximum absolute entry in einsum_ir solution: 34.3326
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141037
  time (eval):    0.0105403
  gflops (eval):  410.949
  gflops (total): 362.451
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141037,0.0105403,410.949,362.451

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483058
  gflops (total): 89.6687
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477158
  gflops (eval):  90.7774
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477158,90.7774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9824
  maximum absolute entry in einsum_ir solution: 34.9824
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144684
  time (eval):    0.0105152
  gflops (eval):  411.929
  gflops (total): 362.105
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144684,0.0105152,411.929,362.105

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048259
  gflops (total): 89.7558
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7558

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0480328
  gflops (eval):  90.1783
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0480328,90.1783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1127
  maximum absolute entry in einsum_ir solution: 38.1127
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140618
  time (eval):    0.0105363
  gflops (eval):  411.106
  gflops (total): 362.699
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140618,0.0105363,411.106,362.699

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048219
  gflops (total): 89.8302
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476456
  gflops (eval):  90.9112
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476456,90.9112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9867
  maximum absolute entry in einsum_ir solution: 33.9867
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140916
  time (eval):    0.0105073
  gflops (eval):  412.238
  gflops (total): 363.49
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140916,0.0105073,412.238,363.49

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482838
  gflops (total): 89.7095
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7095

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478484
  gflops (eval):  90.5259
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478484,90.5259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1424
  maximum absolute entry in einsum_ir solution: 33.1424
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140199
  time (eval):    0.0105485
  gflops (eval):  410.628
  gflops (total): 362.455
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140199,0.0105485,410.628,362.455

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0480848
  gflops (total): 90.0809
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,90.0809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476441
  gflops (eval):  90.914
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476441,90.914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.1925
  maximum absolute entry in einsum_ir solution: 40.1925
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140191
  time (eval):    0.0105378
  gflops (eval):  411.047
  gflops (total): 362.783
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140191,0.0105378,411.047,362.783

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048795
  gflops (total): 88.7697
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.7697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0485497
  gflops (eval):  89.2182
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0485497,89.2182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8189
  maximum absolute entry in einsum_ir solution: 34.8189
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139012
  time (eval):    0.0105178
  gflops (eval):  411.826
  gflops (total): 363.75
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139012,0.0105178,411.826,363.75

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484236
  gflops (total): 89.4505
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479228
  gflops (eval):  90.3854
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479228,90.3854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5175
  maximum absolute entry in einsum_ir solution: 35.5175
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141334
  time (eval):    0.0105144
  gflops (eval):  411.961
  gflops (total): 363.147
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141334,0.0105144,411.961,363.147

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485249
  gflops (total): 89.264
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.264

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.047826
  gflops (eval):  90.5683
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.047826,90.5683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.282
  maximum absolute entry in einsum_ir solution: 36.282
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140534
  time (eval):    0.0105557
  gflops (eval):  410.349
  gflops (total): 362.136
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140534,0.0105557,410.349,362.136

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482372
  gflops (total): 89.7963
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478946
  gflops (eval):  90.4386
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478946,90.4386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7102
  maximum absolute entry in einsum_ir solution: 36.7102
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140356
  time (eval):    0.0105144
  gflops (eval):  411.961
  gflops (total): 363.445
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140356,0.0105144,411.961,363.445

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481777
  gflops (total): 89.9072
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476612
  gflops (eval):  90.8815
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476612,90.8815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8438
  maximum absolute entry in einsum_ir solution: 33.8438
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141387
  time (eval):    0.0105423
  gflops (eval):  410.87
  gflops (total): 362.283
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141387,0.0105423,410.87,362.283

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484701
  gflops (total): 89.3649
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477907
  gflops (eval):  90.6352
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477907,90.6352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2919
  maximum absolute entry in einsum_ir solution: 35.2919
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139989
  time (eval):    0.0105214
  gflops (eval):  411.685
  gflops (total): 363.342
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139989,0.0105214,411.685,363.342

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482884
  gflops (total): 89.7011
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477837
  gflops (eval):  90.6486
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477837,90.6486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4133
  maximum absolute entry in einsum_ir solution: 34.4133
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014092
  time (eval):    0.0105322
  gflops (eval):  411.264
  gflops (total): 362.731
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014092,0.0105322,411.264,362.731

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485279
  gflops (total): 89.2584
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.2584

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477699
  gflops (eval):  90.6746
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477699,90.6746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9137
  maximum absolute entry in einsum_ir solution: 36.9137
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144306
  time (eval):    0.0105047
  gflops (eval):  412.343
  gflops (total): 362.539
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144306,0.0105047,412.343,362.539

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0489121
  gflops (total): 88.5572
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.5572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.048523
  gflops (eval):  89.2673
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.048523,89.2673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2743
  maximum absolute entry in einsum_ir solution: 34.2743
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140358
  time (eval):    0.0105296
  gflops (eval):  411.365
  gflops (total): 362.98
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140358,0.0105296,411.365,362.98

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484508
  gflops (total): 89.4003
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478904
  gflops (eval):  90.4464
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478904,90.4464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4078
  maximum absolute entry in einsum_ir solution: 34.4078
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141845
  time (eval):    0.010522
  gflops (eval):  411.663
  gflops (total): 362.76
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141845,0.010522,411.663,362.76

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048149
  gflops (total): 89.9608
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.047744
  gflops (eval):  90.7238
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.047744,90.7238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2084
  maximum absolute entry in einsum_ir solution: 34.2084
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141621
  time (eval):    0.0105896
  gflops (eval):  409.034
  gflops (total): 360.784
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141621,0.0105896,409.034,360.784

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0486525
  gflops (total): 89.0298
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.0298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0480637
  gflops (eval):  90.1204
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0480637,90.1204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0042
  maximum absolute entry in einsum_ir solution: 36.0042
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140868
  time (eval):    0.0105276
  gflops (eval):  411.444
  gflops (total): 362.887
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140868,0.0105276,411.444,362.887

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048162
  gflops (total): 89.9365
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0474137
  gflops (eval):  91.3559
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0474137,91.3559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4809
  maximum absolute entry in einsum_ir solution: 33.4809
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145421
  time (eval):    0.0105292
  gflops (eval):  411.383
  gflops (total): 361.461
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145421,0.0105292,411.383,361.461

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482825
  gflops (total): 89.712
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0474988
  gflops (eval):  91.1922
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0474988,91.1922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.558
  maximum absolute entry in einsum_ir solution: 36.558
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147805
  time (eval):    0.0105428
  gflops (eval):  410.853
  gflops (total): 360.335
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147805,0.0105428,410.853,360.335

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484593
  gflops (total): 89.3846
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478205
  gflops (eval):  90.5788
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478205,90.5788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0794
  maximum absolute entry in einsum_ir solution: 33.0794
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140378
  time (eval):    0.010531
  gflops (eval):  411.311
  gflops (total): 362.932
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140378,0.010531,411.311,362.932

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048367
  gflops (total): 89.5553
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476996
  gflops (eval):  90.8084
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476996,90.8084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0233
  maximum absolute entry in einsum_ir solution: 37.0233
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140298
  time (eval):    0.0105211
  gflops (eval):  411.7
  gflops (total): 363.259
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140298,0.0105211,411.7,363.259

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481779
  gflops (total): 89.9068
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476757
  gflops (eval):  90.8538
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476757,90.8538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7818
  maximum absolute entry in einsum_ir solution: 38.7818
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141364
  time (eval):    0.0105319
  gflops (eval):  411.277
  gflops (total): 362.606
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141364,0.0105319,411.277,362.606

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0486907
  gflops (total): 88.9599
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.9599

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478701
  gflops (eval):  90.485
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478701,90.485,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7327
  maximum absolute entry in einsum_ir solution: 33.7327
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141849
  time (eval):    0.0105428
  gflops (eval):  410.853
  gflops (total): 362.13
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141849,0.0105428,410.853,362.13

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481751
  gflops (total): 89.912
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476671
  gflops (eval):  90.8702
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476671,90.8702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9435
  maximum absolute entry in einsum_ir solution: 34.9435
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142254
  time (eval):    0.0104978
  gflops (eval):  412.611
  gflops (total): 363.372
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142254,0.0104978,412.611,363.372

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483613
  gflops (total): 89.5659
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5659

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479875
  gflops (eval):  90.2634
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479875,90.2634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.268
  maximum absolute entry in einsum_ir solution: 32.268
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142913
  time (eval):    0.0105439
  gflops (eval):  410.807
  gflops (total): 361.772
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142913,0.0105439,410.807,361.772

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484725
  gflops (total): 89.3604
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477461
  gflops (eval):  90.7198
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477461,90.7198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2017
  maximum absolute entry in einsum_ir solution: 34.2017
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140485
  time (eval):    0.0105062
  gflops (eval):  412.283
  gflops (total): 363.656
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140485,0.0105062,412.283,363.656

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485781
  gflops (total): 89.1661
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.1661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0480826
  gflops (eval):  90.0849
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0480826,90.0849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5605
  maximum absolute entry in einsum_ir solution: 37.5605
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00153594
  time (eval):    0.0105046
  gflops (eval):  412.347
  gflops (total): 359.746
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00153594,0.0105046,412.347,359.746

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0486537
  gflops (total): 89.0276
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.0276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0480891
  gflops (eval):  90.0727
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0480891,90.0727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0185
  maximum absolute entry in einsum_ir solution: 34.0185
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140391
  time (eval):    0.0105496
  gflops (eval):  410.586
  gflops (total): 362.364
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140391,0.0105496,410.586,362.364

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048476
  gflops (total): 89.3539
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477879
  gflops (eval):  90.6405
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477879,90.6405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2825
  maximum absolute entry in einsum_ir solution: 37.2825
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141548
  time (eval):    0.010541
  gflops (eval):  410.921
  gflops (total): 362.274
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141548,0.010541,410.921,362.274

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485126
  gflops (total): 89.2864
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.2864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477727
  gflops (eval):  90.6694
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477727,90.6694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6732
  maximum absolute entry in einsum_ir solution: 33.6732
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142183
  time (eval):    0.0105233
  gflops (eval):  411.613
  gflops (total): 362.619
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142183,0.0105233,411.613,362.619

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481956
  gflops (total): 89.8737
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0486409
  gflops (eval):  89.051
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0486409,89.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0534
  maximum absolute entry in einsum_ir solution: 36.0534
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141844
  time (eval):    0.0105583
  gflops (eval):  410.249
  gflops (total): 361.662
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141844,0.0105583,410.249,361.662

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0477288
  gflops (total): 90.7527
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,90.7527

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0474586
  gflops (eval):  91.2694
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0474586,91.2694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8259
  maximum absolute entry in einsum_ir solution: 34.8259
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141335
  time (eval):    0.0104965
  gflops (eval):  412.662
  gflops (total): 363.691
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141335,0.0104965,412.662,363.691

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0486175
  gflops (total): 89.0939
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.0939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.047989
  gflops (eval):  90.2607
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.047989,90.2607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9726
  maximum absolute entry in einsum_ir solution: 32.9726
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149036
  time (eval):    0.0105199
  gflops (eval):  411.745
  gflops (total): 360.651
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149036,0.0105199,411.745,360.651

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484341
  gflops (total): 89.4312
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476747
  gflops (eval):  90.8558
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476747,90.8558,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0005
  maximum absolute entry in einsum_ir solution: 34.0005
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140803
  time (eval):    0.0105233
  gflops (eval):  411.614
  gflops (total): 363.039
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140803,0.0105233,411.614,363.039

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483322
  gflops (total): 89.6197
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0475792
  gflops (eval):  91.038
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0475792,91.038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6801
  maximum absolute entry in einsum_ir solution: 35.6801
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140697
  time (eval):    0.0105124
  gflops (eval):  412.039
  gflops (total): 363.401
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140697,0.0105124,412.039,363.401

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481937
  gflops (total): 89.8772
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477449
  gflops (eval):  90.7222
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477449,90.7222,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6536
  maximum absolute entry in einsum_ir solution: 33.6536
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141353
  time (eval):    0.0105156
  gflops (eval):  411.915
  gflops (total): 363.105
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141353,0.0105156,411.915,363.105

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0487908
  gflops (total): 88.7775
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.7775

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0484342
  gflops (eval):  89.4311
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0484342,89.4311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5764
  maximum absolute entry in einsum_ir solution: 34.5764
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140353
  time (eval):    0.010497
  gflops (eval):  412.642
  gflops (total): 363.976
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140353,0.010497,412.642,363.976

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048406
  gflops (total): 89.4831
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478571
  gflops (eval):  90.5095
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478571,90.5095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.6571
  maximum absolute entry in einsum_ir solution: 38.6571
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141492
  time (eval):    0.0105187
  gflops (eval):  411.792
  gflops (total): 362.968
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141492,0.0105187,411.792,362.968

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482491
  gflops (total): 89.7741
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7741

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476411
  gflops (eval):  90.9199
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476411,90.9199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5441
  maximum absolute entry in einsum_ir solution: 34.5441
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142674
  time (eval):    0.0105027
  gflops (eval):  412.419
  gflops (total): 363.094
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142674,0.0105027,412.419,363.094

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484567
  gflops (total): 89.3896
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476913
  gflops (eval):  90.8242
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476913,90.8242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1646
  maximum absolute entry in einsum_ir solution: 35.1646
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141429
  time (eval):    0.0105058
  gflops (eval):  412.297
  gflops (total): 363.379
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141429,0.0105058,412.297,363.379

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.04827
  gflops (total): 89.7353
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477965
  gflops (eval):  90.6242
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477965,90.6242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2599
  maximum absolute entry in einsum_ir solution: 36.2599
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141274
  time (eval):    0.010543
  gflops (eval):  410.842
  gflops (total): 362.295
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141274,0.010543,410.842,362.295

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482484
  gflops (total): 89.7753
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476527
  gflops (eval):  90.8977
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476527,90.8977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1178
  maximum absolute entry in einsum_ir solution: 34.1178
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142034
  time (eval):    0.0105217
  gflops (eval):  411.674
  gflops (total): 362.712
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142034,0.0105217,411.674,362.712

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481976
  gflops (total): 89.8701
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476032
  gflops (eval):  90.9923
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476032,90.9923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6609
  maximum absolute entry in einsum_ir solution: 33.6609
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140909
  time (eval):    0.0105359
  gflops (eval):  411.12
  gflops (total): 362.622
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140909,0.0105359,411.12,362.622

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481569
  gflops (total): 89.946
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477359
  gflops (eval):  90.7393
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477359,90.7393,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.8706
  maximum absolute entry in einsum_ir solution: 31.8706
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141633
  time (eval):    0.0105444
  gflops (eval):  410.789
  gflops (total): 362.145
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141633,0.0105444,410.789,362.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482496
  gflops (total): 89.7732
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7732

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476396
  gflops (eval):  90.9227
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476396,90.9227,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5323
  maximum absolute entry in einsum_ir solution: 33.5323
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141447
  time (eval):    0.0108292
  gflops (eval):  399.985
  gflops (total): 353.776
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141447,0.0108292,399.985,353.776

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483704
  gflops (total): 89.5489
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479555
  gflops (eval):  90.3237
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479555,90.3237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6681
  maximum absolute entry in einsum_ir solution: 36.6681
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145458
  time (eval):    0.0105154
  gflops (eval):  411.921
  gflops (total): 361.865
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145458,0.0105154,411.921,361.865

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484519
  gflops (total): 89.3984
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3984

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0481628
  gflops (eval):  89.935
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0481628,89.935,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8595
  maximum absolute entry in einsum_ir solution: 32.8595
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140666
  time (eval):    0.010511
  gflops (eval):  412.094
  gflops (total): 363.454
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140666,0.010511,412.094,363.454

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483027
  gflops (total): 89.6746
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478815
  gflops (eval):  90.4634
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478815,90.4634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3726
  maximum absolute entry in einsum_ir solution: 38.3726
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142579
  time (eval):    0.0105178
  gflops (eval):  411.827
  gflops (total): 362.665
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142579,0.0105178,411.827,362.665

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484418
  gflops (total): 89.4171
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0480119
  gflops (eval):  90.2177
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0480119,90.2177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4362
  maximum absolute entry in einsum_ir solution: 35.4362
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142784
  time (eval):    0.0105675
  gflops (eval):  409.891
  gflops (total): 361.1
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142784,0.0105675,409.891,361.1

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484677
  gflops (total): 89.3691
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477283
  gflops (eval):  90.7536
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477283,90.7536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9228
  maximum absolute entry in einsum_ir solution: 34.9228
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141882
  time (eval):    0.0105721
  gflops (eval):  409.712
  gflops (total): 361.233
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141882,0.0105721,409.712,361.233

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483758
  gflops (total): 89.5391
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5391

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476565
  gflops (eval):  90.8905
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476565,90.8905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5917
  maximum absolute entry in einsum_ir solution: 35.5917
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142844
  time (eval):    0.0105186
  gflops (eval):  411.795
  gflops (total): 362.559
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142844,0.0105186,411.795,362.559

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482127
  gflops (total): 89.8418
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.048104
  gflops (eval):  90.0449
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.048104,90.0449,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9208
  maximum absolute entry in einsum_ir solution: 32.9208
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140589
  time (eval):    0.0105293
  gflops (eval):  411.379
  gflops (total): 362.921
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140589,0.0105293,411.379,362.921

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048304
  gflops (total): 89.672
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476994
  gflops (eval):  90.8086
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476994,90.8086,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7994
  maximum absolute entry in einsum_ir solution: 33.7994
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142624
  time (eval):    0.0105015
  gflops (eval):  412.465
  gflops (total): 363.145
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142624,0.0105015,412.465,363.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482162
  gflops (total): 89.8353
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8353

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479474
  gflops (eval):  90.339
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479474,90.339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.422
  maximum absolute entry in einsum_ir solution: 35.422
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149994
  time (eval):    0.0104921
  gflops (eval):  412.835
  gflops (total): 361.199
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149994,0.0104921,412.835,361.199

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484827
  gflops (total): 89.3416
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3416

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477141
  gflops (eval):  90.7807
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477141,90.7807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1452
  maximum absolute entry in einsum_ir solution: 35.1452
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144371
  time (eval):    0.0105164
  gflops (eval):  411.883
  gflops (total): 362.164
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144371,0.0105164,411.883,362.164

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481854
  gflops (total): 89.8928
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8928

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478465
  gflops (eval):  90.5296
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478465,90.5296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0502
  maximum absolute entry in einsum_ir solution: 35.0502
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142045
  time (eval):    0.0105117
  gflops (eval):  412.066
  gflops (total): 363.012
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142045,0.0105117,412.066,363.012

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484147
  gflops (total): 89.4671
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478251
  gflops (eval):  90.57
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478251,90.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5064
  maximum absolute entry in einsum_ir solution: 33.5064
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146445
  time (eval):    0.0105017
  gflops (eval):  412.46
  gflops (total): 361.982
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146445,0.0105017,412.46,361.982

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482595
  gflops (total): 89.7548
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477827
  gflops (eval):  90.6505
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477827,90.6505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7633
  maximum absolute entry in einsum_ir solution: 32.7633
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001456
  time (eval):    0.0105335
  gflops (eval):  411.213
  gflops (total): 361.276
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001456,0.0105335,411.213,361.276

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484231
  gflops (total): 89.4515
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4515

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479197
  gflops (eval):  90.3911
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479197,90.3911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.066
  maximum absolute entry in einsum_ir solution: 35.066
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152366
  time (eval):    0.0105203
  gflops (eval):  411.728
  gflops (total): 359.642
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152366,0.0105203,411.728,359.642

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481182
  gflops (total): 90.0183
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,90.0183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479948
  gflops (eval):  90.2497
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479948,90.2497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4053
  maximum absolute entry in einsum_ir solution: 34.4053
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146188
  time (eval):    0.0104961
  gflops (eval):  412.678
  gflops (total): 362.228
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146188,0.0104961,412.678,362.228

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483001
  gflops (total): 89.6793
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0481832
  gflops (eval):  89.8968
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0481832,89.8968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4397
  maximum absolute entry in einsum_ir solution: 35.4397
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149398
  time (eval):    0.0105656
  gflops (eval):  409.966
  gflops (total): 359.178
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149398,0.0105656,409.966,359.178

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482274
  gflops (total): 89.8146
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.8146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.047681
  gflops (eval):  90.8437
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.047681,90.8437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8739
  maximum absolute entry in einsum_ir solution: 33.8739
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140433
  time (eval):    0.0105242
  gflops (eval):  411.578
  gflops (total): 363.123
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140433,0.0105242,411.578,363.123

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482731
  gflops (total): 89.7294
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477606
  gflops (eval):  90.6923
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477606,90.6923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9083
  maximum absolute entry in einsum_ir solution: 36.9083
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141857
  time (eval):    0.0105156
  gflops (eval):  411.914
  gflops (total): 362.951
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141857,0.0105156,411.914,362.951

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0486162
  gflops (total): 89.0963
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.0963

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.048453
  gflops (eval):  89.3962
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.048453,89.3962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5511
  maximum absolute entry in einsum_ir solution: 33.5511
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142447
  time (eval):    0.010541
  gflops (eval):  410.921
  gflops (total): 362.002
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142447,0.010541,410.921,362.002

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482672
  gflops (total): 89.7404
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.047783
  gflops (eval):  90.6499
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.047783,90.6499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0855
  maximum absolute entry in einsum_ir solution: 33.0855
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144403
  time (eval):    0.0105684
  gflops (eval):  409.856
  gflops (total): 360.586
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144403,0.0105684,409.856,360.586

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482912
  gflops (total): 89.6958
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477916
  gflops (eval):  90.6335
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477916,90.6335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7233
  maximum absolute entry in einsum_ir solution: 33.7233
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140751
  time (eval):    0.0105129
  gflops (eval):  412.018
  gflops (total): 363.369
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140751,0.0105129,412.018,363.369

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484894
  gflops (total): 89.3292
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.3292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478421
  gflops (eval):  90.5379
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478421,90.5379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4179
  maximum absolute entry in einsum_ir solution: 37.4179
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014185
  time (eval):    0.0105229
  gflops (eval):  411.629
  gflops (total): 362.732
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014185,0.0105229,411.629,362.732

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481811
  gflops (total): 89.9009
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477333
  gflops (eval):  90.7442
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477333,90.7442,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6822
  maximum absolute entry in einsum_ir solution: 36.6822
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141995
  time (eval):    0.0108048
  gflops (eval):  400.887
  gflops (total): 354.322
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141995,0.0108048,400.887,354.322

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482433
  gflops (total): 89.7848
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.7848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479277
  gflops (eval):  90.3761
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479277,90.3761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6986
  maximum absolute entry in einsum_ir solution: 33.6986
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141565
  time (eval):    0.010524
  gflops (eval):  411.585
  gflops (total): 362.785
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141565,0.010524,411.585,362.785

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0490316
  gflops (total): 88.3414
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.3414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0485105
  gflops (eval):  89.2903
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0485105,89.2903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3459
  maximum absolute entry in einsum_ir solution: 35.3459
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143674
  time (eval):    0.0105165
  gflops (eval):  411.879
  gflops (total): 362.373
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143674,0.0105165,411.879,362.373

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483814
  gflops (total): 89.5287
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5287

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0475793
  gflops (eval):  91.0379
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0475793,91.0379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9352
  maximum absolute entry in einsum_ir solution: 34.9352
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140913
  time (eval):    0.0105943
  gflops (eval):  408.853
  gflops (total): 360.856
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140913,0.0105943,408.853,360.856

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484003
  gflops (total): 89.4937
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0475663
  gflops (eval):  91.0627
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0475663,91.0627,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4692
  maximum absolute entry in einsum_ir solution: 33.4692
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143419
  time (eval):    0.010522
  gflops (eval):  411.665
  gflops (total): 362.284
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143419,0.010522,411.665,362.284

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0486148
  gflops (total): 89.0988
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.0988

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0481901
  gflops (eval):  89.884
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0481901,89.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.8497
  maximum absolute entry in einsum_ir solution: 37.8497
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143491
  time (eval):    0.0105289
  gflops (eval):  411.394
  gflops (total): 362.052
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143491,0.0105289,411.394,362.052

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483362
  gflops (total): 89.6123
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6123

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0475894
  gflops (eval):  91.0186
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0475894,91.0186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4682
  maximum absolute entry in einsum_ir solution: 34.4682
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00135529
  time (eval):    0.01054
  gflops (eval):  410.961
  gflops (total): 364.138
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00135529,0.01054,410.961,364.138

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483868
  gflops (total): 89.5186
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.5186

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.048117
  gflops (eval):  90.0206
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.048117,90.0206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0087
  maximum absolute entry in einsum_ir solution: 35.0087
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140685
  time (eval):    0.0105318
  gflops (eval):  411.282
  gflops (total): 362.816
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140685,0.0105318,411.282,362.816

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484189
  gflops (total): 89.4592
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479261
  gflops (eval):  90.3792
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479261,90.3792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0285
  maximum absolute entry in einsum_ir solution: 35.0285
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143778
  time (eval):    0.0105122
  gflops (eval):  412.046
  gflops (total): 362.47
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143778,0.0105122,412.046,362.47

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0481559
  gflops (total): 89.9479
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.9479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0477579
  gflops (eval):  90.6974
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0477579,90.6974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0917
  maximum absolute entry in einsum_ir solution: 38.0917
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141507
  time (eval):    0.0105083
  gflops (eval):  412.201
  gflops (total): 363.281
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141507,0.0105083,412.201,363.281

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0484318
  gflops (total): 89.4355
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.4355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478203
  gflops (eval):  90.5792
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478203,90.5792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2381
  maximum absolute entry in einsum_ir solution: 34.2381
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145328
  time (eval):    0.0105035
  gflops (eval):  412.387
  gflops (total): 362.264
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145328,0.0105035,412.387,362.264

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0483341
  gflops (total): 89.6163
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0479553
  gflops (eval):  90.3242
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0479553,90.3242,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3559
  maximum absolute entry in einsum_ir solution: 34.3559
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001747
  time (eval):    0.010507
  gflops (eval):  412.252
  gflops (total): 353.478
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001747,0.010507,412.252,353.478

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485183
  gflops (total): 89.276
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.047845
  gflops (eval):  90.5324
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.047845,90.5324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0966
  maximum absolute entry in einsum_ir solution: 38.0966
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140711
  time (eval):    0.010547
  gflops (eval):  410.688
  gflops (total): 362.346
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140711,0.010547,410.688,362.346

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0482395
  gflops (total): 89.792
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0478197
  gflops (eval):  90.5803
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0478197,90.5803,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1714
  maximum absolute entry in einsum_ir solution: 34.1714
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141574
  time (eval):    0.010523
  gflops (eval):  411.625
  gflops (total): 362.813
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141574,0.010523,411.625,362.813

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485697
  gflops (total): 89.1816
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.1816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0480999
  gflops (eval):  90.0526
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0480999,90.0526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7585
  maximum absolute entry in einsum_ir solution: 33.7585
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139391
  time (eval):    0.0105106
  gflops (eval):  412.108
  gflops (total): 363.854
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139391,0.0105106,412.108,363.854

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.048319
  gflops (total): 89.6442
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.6442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0476371
  gflops (eval):  90.9275
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0476371,90.9275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2128
  maximum absolute entry in einsum_ir solution: 34.2128
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140121
  time (eval):    0.010538
  gflops (eval):  411.038
  gflops (total): 362.798
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140121,0.010538,411.038,362.798

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0485872
  gflops (total): 89.1493
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,89.1493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.0481674
  gflops (eval):  89.9264
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0481674,89.9264,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4999
  maximum absolute entry in einsum_ir solution: 33.4999
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,a
  g,f,b,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 0 6 5 1 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,1,2]->[1,2,6,5]],[[3,4,6,0]->[0,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140044
  time (eval):    0.0105563
  gflops (eval):  410.327
  gflops (total): 362.267
CSV_DATA: einsum_ir,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140044,0.0105563,410.327,362.267

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0490558
  gflops (total): 88.2979
CSV_DATA: at::einsum,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,88.2979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8000 11520 24
  #flops:         4331520000
  time (eval):    0.048105
  gflops (eval):  90.0431
CSV_DATA: at::matmul,"dega,gfbc->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.048105,90.0431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.7159
  maximum absolute entry in einsum_ir solution: 39.7159
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014374
  time (eval):    0.01105
  gflops (eval):  391.994
  gflops (total): 346.872
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014374,0.01105,391.994,346.872

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050108
  gflops (total): 86.4437
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496861
  gflops (eval):  87.1778
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496861,87.1778,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7168
  maximum absolute entry in einsum_ir solution: 37.7168
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141646
  time (eval):    0.0110095
  gflops (eval):  393.433
  gflops (total): 348.585
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141646,0.0110095,393.433,348.585

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506628
  gflops (total): 85.497
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502835
  gflops (eval):  86.1419
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502835,86.1419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8468
  maximum absolute entry in einsum_ir solution: 32.8468
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142041
  time (eval):    0.0110103
  gflops (eval):  393.406
  gflops (total): 348.453
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142041,0.0110103,393.406,348.453

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503717
  gflops (total): 85.9911
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499202
  gflops (eval):  86.7689
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499202,86.7689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1282
  maximum absolute entry in einsum_ir solution: 34.1282
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143771
  time (eval):    0.0110705
  gflops (eval):  391.269
  gflops (total): 346.296
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143771,0.0110705,391.269,346.296

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500193
  gflops (total): 86.597
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.597

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499742
  gflops (eval):  86.6751
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499742,86.6751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4328
  maximum absolute entry in einsum_ir solution: 33.4328
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143056
  time (eval):    0.0109915
  gflops (eval):  394.078
  gflops (total): 348.695
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143056,0.0109915,394.078,348.695

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502198
  gflops (total): 86.2512
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491459
  gflops (eval):  88.1359
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491459,88.1359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4792
  maximum absolute entry in einsum_ir solution: 33.4792
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141771
  time (eval):    0.0110373
  gflops (eval):  392.444
  gflops (total): 347.773
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141771,0.0110373,392.444,347.773

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502136
  gflops (total): 86.2618
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492891
  gflops (eval):  87.8799
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492891,87.8799,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9306
  maximum absolute entry in einsum_ir solution: 34.9306
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145817
  time (eval):    0.0110344
  gflops (eval):  392.547
  gflops (total): 346.728
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145817,0.0110344,392.547,346.728

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511523
  gflops (total): 84.679
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495842
  gflops (eval):  87.3569
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495842,87.3569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8372
  maximum absolute entry in einsum_ir solution: 36.8372
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00169589
  time (eval):    0.0109745
  gflops (eval):  394.689
  gflops (total): 341.861
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00169589,0.0109745,394.689,341.861

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501465
  gflops (total): 86.3773
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495247
  gflops (eval):  87.4618
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495247,87.4618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8928
  maximum absolute entry in einsum_ir solution: 33.8928
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141778
  time (eval):    0.011003
  gflops (eval):  393.667
  gflops (total): 348.731
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141778,0.011003,393.667,348.731

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507939
  gflops (total): 85.2763
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501945
  gflops (eval):  86.2947
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501945,86.2947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5979
  maximum absolute entry in einsum_ir solution: 35.5979
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00150216
  time (eval):    0.0110066
  gflops (eval):  393.539
  gflops (total): 346.279
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00150216,0.0110066,393.539,346.279

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503286
  gflops (total): 86.0648
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498741
  gflops (eval):  86.8491
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498741,86.8491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.115
  maximum absolute entry in einsum_ir solution: 34.115
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142343
  time (eval):    0.01101
  gflops (eval):  393.415
  gflops (total): 348.376
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142343,0.01101,393.415,348.376

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050596
  gflops (total): 85.6099
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497265
  gflops (eval):  87.1069
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497265,87.1069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.78
  maximum absolute entry in einsum_ir solution: 33.78
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143341
  time (eval):    0.0110075
  gflops (eval):  393.507
  gflops (total): 348.168
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143341,0.0110075,393.507,348.168

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050909
  gflops (total): 85.0835
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0835

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502167
  gflops (eval):  86.2566
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502167,86.2566,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4971
  maximum absolute entry in einsum_ir solution: 37.4971
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141001
  time (eval):    0.0109879
  gflops (eval):  394.21
  gflops (total): 349.376
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141001,0.0109879,394.21,349.376

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508565
  gflops (total): 85.1714
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050361
  gflops (eval):  86.0095
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050361,86.0095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1456
  maximum absolute entry in einsum_ir solution: 34.1456
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141361
  time (eval):    0.0110399
  gflops (eval):  392.352
  gflops (total): 347.816
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141361,0.0110399,392.352,347.816

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502244
  gflops (total): 86.2433
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2433

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494769
  gflops (eval):  87.5463
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494769,87.5463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.7781
  maximum absolute entry in einsum_ir solution: 38.7781
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145367
  time (eval):    0.0109852
  gflops (eval):  394.305
  gflops (total): 348.224
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145367,0.0109852,394.305,348.224

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503791
  gflops (total): 85.9785
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9785

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495405
  gflops (eval):  87.4339
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495405,87.4339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1928
  maximum absolute entry in einsum_ir solution: 37.1928
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143955
  time (eval):    0.0109986
  gflops (eval):  393.823
  gflops (total): 348.244
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143955,0.0109986,393.823,348.244

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507859
  gflops (total): 85.2898
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501609
  gflops (eval):  86.3525
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501609,86.3525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      44.4636
  maximum absolute entry in einsum_ir solution: 44.4636
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142367
  time (eval):    0.0109821
  gflops (eval):  394.415
  gflops (total): 349.153
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142367,0.0109821,394.415,349.153

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509299
  gflops (total): 85.0486
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498294
  gflops (eval):  86.927
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498294,86.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.8236
  maximum absolute entry in einsum_ir solution: 38.8236
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141857
  time (eval):    0.0110689
  gflops (eval):  391.323
  gflops (total): 346.869
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141857,0.0110689,391.323,346.869

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050601
  gflops (total): 85.6015
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500016
  gflops (eval):  86.6276
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500016,86.6276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9762
  maximum absolute entry in einsum_ir solution: 33.9762
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0016062
  time (eval):    0.0109921
  gflops (eval):  394.058
  gflops (total): 343.818
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0016062,0.0109921,394.058,343.818

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503677
  gflops (total): 85.998
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495587
  gflops (eval):  87.4018
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495587,87.4018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5246
  maximum absolute entry in einsum_ir solution: 33.5246
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142687
  time (eval):    0.0109799
  gflops (eval):  394.495
  gflops (total): 349.125
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142687,0.0109799,394.495,349.125

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503193
  gflops (total): 86.0807
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502149
  gflops (eval):  86.2597
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502149,86.2597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6027
  maximum absolute entry in einsum_ir solution: 33.6027
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014483
  time (eval):    0.0110568
  gflops (eval):  391.753
  gflops (total): 346.381
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014483,0.0110568,391.753,346.381

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504012
  gflops (total): 85.9409
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049918
  gflops (eval):  86.7727
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049918,86.7727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8488
  maximum absolute entry in einsum_ir solution: 35.8488
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143059
  time (eval):    0.0110598
  gflops (eval):  391.646
  gflops (total): 346.789
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143059,0.0110598,391.646,346.789

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507416
  gflops (total): 85.3642
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496975
  gflops (eval):  87.1577
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496975,87.1577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3605
  maximum absolute entry in einsum_ir solution: 32.3605
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143001
  time (eval):    0.0109828
  gflops (eval):  394.393
  gflops (total): 348.957
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143001,0.0109828,394.393,348.957

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501559
  gflops (total): 86.3612
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498901
  gflops (eval):  86.8213
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498901,86.8213,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5205
  maximum absolute entry in einsum_ir solution: 34.5205
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142241
  time (eval):    0.0109958
  gflops (eval):  393.925
  gflops (total): 348.804
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142241,0.0109958,393.925,348.804

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509585
  gflops (total): 85.0009
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501891
  gflops (eval):  86.304
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501891,86.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6859
  maximum absolute entry in einsum_ir solution: 33.6859
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140585
  time (eval):    0.0110452
  gflops (eval):  392.163
  gflops (total): 347.884
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140585,0.0110452,392.163,347.884

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500635
  gflops (total): 86.5205
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499918
  gflops (eval):  86.6446
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499918,86.6446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4102
  maximum absolute entry in einsum_ir solution: 34.4102
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143806
  time (eval):    0.011021
  gflops (eval):  393.023
  gflops (total): 347.66
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143806,0.011021,393.023,347.66

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05084
  gflops (total): 85.199
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0506055
  gflops (eval):  85.5939
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0506055,85.5939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3432
  maximum absolute entry in einsum_ir solution: 33.3432
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142872
  time (eval):    0.0110086
  gflops (eval):  393.467
  gflops (total): 348.268
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142872,0.0110086,393.467,348.268

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503613
  gflops (total): 86.009
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505089
  gflops (eval):  85.7575
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505089,85.7575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1097
  maximum absolute entry in einsum_ir solution: 35.1097
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141261
  time (eval):    0.011136
  gflops (eval):  388.964
  gflops (total): 345.178
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141261,0.011136,388.964,345.178

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504148
  gflops (total): 85.9176
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500559
  gflops (eval):  86.5337
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500559,86.5337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5567
  maximum absolute entry in einsum_ir solution: 34.5567
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014262
  time (eval):    0.0110155
  gflops (eval):  393.22
  gflops (total): 348.145
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014262,0.0110155,393.22,348.145

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505612
  gflops (total): 85.6688
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0507062
  gflops (eval):  85.4238
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0507062,85.4238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0622
  maximum absolute entry in einsum_ir solution: 33.0622
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141833
  time (eval):    0.0111149
  gflops (eval):  389.704
  gflops (total): 345.603
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141833,0.0111149,389.704,345.603

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499928
  gflops (total): 86.6428
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503854
  gflops (eval):  85.9677
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503854,85.9677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4797
  maximum absolute entry in einsum_ir solution: 35.4797
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143208
  time (eval):    0.0110466
  gflops (eval):  392.113
  gflops (total): 347.114
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143208,0.0110466,392.113,347.114

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499776
  gflops (total): 86.6692
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495645
  gflops (eval):  87.3917
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495645,87.3917,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0229
  maximum absolute entry in einsum_ir solution: 34.0229
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0016994
  time (eval):    0.011016
  gflops (eval):  393.202
  gflops (total): 340.651
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0016994,0.011016,393.202,340.651

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504728
  gflops (total): 85.8189
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499799
  gflops (eval):  86.6652
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499799,86.6652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1203
  maximum absolute entry in einsum_ir solution: 36.1203
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142625
  time (eval):    0.0110003
  gflops (eval):  393.764
  gflops (total): 348.57
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142625,0.0110003,393.764,348.57

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501161
  gflops (total): 86.4297
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4297

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496494
  gflops (eval):  87.2421
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496494,87.2421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9336
  maximum absolute entry in einsum_ir solution: 34.9336
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142023
  time (eval):    0.010948
  gflops (eval):  395.646
  gflops (total): 350.214
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142023,0.010948,395.646,350.214

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505583
  gflops (total): 85.6738
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501551
  gflops (eval):  86.3624
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501551,86.3624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.643
  maximum absolute entry in einsum_ir solution: 33.643
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014073
  time (eval):    0.0109767
  gflops (eval):  394.609
  gflops (total): 349.766
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014073,0.0109767,394.609,349.766

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510174
  gflops (total): 84.9028
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9028

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501193
  gflops (eval):  86.4243
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501193,86.4243,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5901
  maximum absolute entry in einsum_ir solution: 34.5901
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141228
  time (eval):    0.0111588
  gflops (eval):  388.172
  gflops (total): 344.563
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141228,0.0111588,388.172,344.563

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503225
  gflops (total): 86.0752
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0752

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049396
  gflops (eval):  87.6897
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049396,87.6897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2254
  maximum absolute entry in einsum_ir solution: 33.2254
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142592
  time (eval):    0.0109746
  gflops (eval):  394.687
  gflops (total): 349.303
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142592,0.0109746,394.687,349.303

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504875
  gflops (total): 85.7939
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0506131
  gflops (eval):  85.581
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0506131,85.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1598
  maximum absolute entry in einsum_ir solution: 36.1598
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140994
  time (eval):    0.0109837
  gflops (eval):  394.359
  gflops (total): 349.496
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140994,0.0109837,394.359,349.496

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503828
  gflops (total): 85.9722
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494166
  gflops (eval):  87.6532
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494166,87.6532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3902
  maximum absolute entry in einsum_ir solution: 35.3902
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141863
  time (eval):    0.0109689
  gflops (eval):  394.892
  gflops (total): 349.669
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141863,0.0109689,394.892,349.669

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503981
  gflops (total): 85.9461
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492982
  gflops (eval):  87.8636
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492982,87.8636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8767
  maximum absolute entry in einsum_ir solution: 34.8767
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014355
  time (eval):    0.0110929
  gflops (eval):  390.476
  gflops (total): 345.735
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014355,0.0110929,390.476,345.735

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508125
  gflops (total): 85.2451
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2451

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502669
  gflops (eval):  86.1705
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502669,86.1705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.9284
  maximum absolute entry in einsum_ir solution: 39.9284
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142311
  time (eval):    0.0110633
  gflops (eval):  391.521
  gflops (total): 346.898
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142311,0.0110633,391.521,346.898

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505824
  gflops (total): 85.6329
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500086
  gflops (eval):  86.6155
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500086,86.6155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3354
  maximum absolute entry in einsum_ir solution: 36.3354
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140886
  time (eval):    0.0109861
  gflops (eval):  394.274
  gflops (total): 349.459
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140886,0.0109861,394.274,349.459

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504684
  gflops (total): 85.8265
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494624
  gflops (eval):  87.572
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494624,87.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8499
  maximum absolute entry in einsum_ir solution: 34.8499
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142673
  time (eval):    0.0110385
  gflops (eval):  392.401
  gflops (total): 347.488
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142673,0.0110385,392.401,347.488

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508129
  gflops (total): 85.2446
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505232
  gflops (eval):  85.7333
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505232,85.7333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7862
  maximum absolute entry in einsum_ir solution: 35.7862
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142358
  time (eval):    0.0110531
  gflops (eval):  391.882
  gflops (total): 347.169
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142358,0.0110531,391.882,347.169

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503093
  gflops (total): 86.0978
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050142
  gflops (eval):  86.385
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050142,86.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2739
  maximum absolute entry in einsum_ir solution: 35.2739
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141359
  time (eval):    0.0110212
  gflops (eval):  393.017
  gflops (total): 348.339
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141359,0.0110212,393.017,348.339

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503866
  gflops (total): 85.9658
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9658

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493266
  gflops (eval):  87.813
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493266,87.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1934
  maximum absolute entry in einsum_ir solution: 35.1934
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144092
  time (eval):    0.0110264
  gflops (eval):  392.833
  gflops (total): 347.431
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144092,0.0110264,392.833,347.431

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507175
  gflops (total): 85.4048
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4048

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049782
  gflops (eval):  87.0097
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049782,87.0097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.714
  maximum absolute entry in einsum_ir solution: 36.714
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141936
  time (eval):    0.0109938
  gflops (eval):  393.998
  gflops (total): 348.947
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141936,0.0109938,393.998,348.947

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500161
  gflops (total): 86.6024
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492683
  gflops (eval):  87.9169
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492683,87.9169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2027
  maximum absolute entry in einsum_ir solution: 35.2027
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155394
  time (eval):    0.0110107
  gflops (eval):  393.39
  gflops (total): 344.738
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155394,0.0110107,393.39,344.738

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498146
  gflops (total): 86.9529
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.9529

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496176
  gflops (eval):  87.2981
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496176,87.2981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7704
  maximum absolute entry in einsum_ir solution: 33.7704
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142566
  time (eval):    0.010992
  gflops (eval):  394.062
  gflops (total): 348.82
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142566,0.010992,394.062,348.82

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505195
  gflops (total): 85.7396
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7396

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499141
  gflops (eval):  86.7795
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499141,86.7795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.1155
  maximum absolute entry in einsum_ir solution: 39.1155
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141511
  time (eval):    0.011086
  gflops (eval):  390.72
  gflops (total): 346.491
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141511,0.011086,390.72,346.491

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505189
  gflops (total): 85.7405
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7405

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050066
  gflops (eval):  86.5162
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050066,86.5162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8459
  maximum absolute entry in einsum_ir solution: 36.8459
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142049
  time (eval):    0.0110534
  gflops (eval):  391.871
  gflops (total): 347.246
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142049,0.0110534,391.871,347.246

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500994
  gflops (total): 86.4585
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496922
  gflops (eval):  87.167
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496922,87.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.368
  maximum absolute entry in einsum_ir solution: 34.368
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145752
  time (eval):    0.010957
  gflops (eval):  395.319
  gflops (total): 348.907
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145752,0.010957,395.319,348.907

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504731
  gflops (total): 85.8184
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496386
  gflops (eval):  87.2611
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496386,87.2611,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0697
  maximum absolute entry in einsum_ir solution: 34.0697
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148278
  time (eval):    0.011063
  gflops (eval):  391.531
  gflops (total): 345.256
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148278,0.011063,391.531,345.256

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509924
  gflops (total): 84.9444
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050365
  gflops (eval):  86.0025
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050365,86.0025,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2085
  maximum absolute entry in einsum_ir solution: 34.2085
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00167401
  time (eval):    0.0109792
  gflops (eval):  394.519
  gflops (total): 342.324
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00167401,0.0109792,394.519,342.324

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506395
  gflops (total): 85.5364
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495509
  gflops (eval):  87.4156
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495509,87.4156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1382
  maximum absolute entry in einsum_ir solution: 34.1382
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142377
  time (eval):    0.0110088
  gflops (eval):  393.46
  gflops (total): 348.401
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142377,0.0110088,393.46,348.401

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506197
  gflops (total): 85.5699
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5699

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502995
  gflops (eval):  86.1146
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502995,86.1146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7092
  maximum absolute entry in einsum_ir solution: 34.7092
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014269
  time (eval):    0.0110081
  gflops (eval):  393.484
  gflops (total): 348.333
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014269,0.0110081,393.484,348.333

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507864
  gflops (total): 85.289
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499239
  gflops (eval):  86.7625
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499239,86.7625,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1399
  maximum absolute entry in einsum_ir solution: 35.1399
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142958
  time (eval):    0.0110965
  gflops (eval):  390.352
  gflops (total): 345.801
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142958,0.0110965,390.352,345.801

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511561
  gflops (total): 84.6725
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.6725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0506405
  gflops (eval):  85.5347
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0506405,85.5347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.89
  maximum absolute entry in einsum_ir solution: 32.89
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141598
  time (eval):    0.0109813
  gflops (eval):  394.445
  gflops (total): 349.392
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141598,0.0109813,394.445,349.392

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507878
  gflops (total): 85.2866
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503431
  gflops (eval):  86.04
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503431,86.04,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1648
  maximum absolute entry in einsum_ir solution: 34.1648
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146381
  time (eval):    0.0110275
  gflops (eval):  392.791
  gflops (total): 346.762
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146381,0.0110275,392.791,346.762

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509181
  gflops (total): 85.0684
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0510631
  gflops (eval):  84.8268
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0510631,84.8268,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.9921
  maximum absolute entry in einsum_ir solution: 31.9921
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014159
  time (eval):    0.0110571
  gflops (eval):  391.741
  gflops (total): 347.271
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014159,0.0110571,391.741,347.271

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509705
  gflops (total): 84.9809
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503281
  gflops (eval):  86.0657
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503281,86.0657,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7725
  maximum absolute entry in einsum_ir solution: 35.7725
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144519
  time (eval):    0.0109869
  gflops (eval):  394.242
  gflops (total): 348.413
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144519,0.0109869,394.242,348.413

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510131
  gflops (total): 84.91
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504125
  gflops (eval):  85.9215
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504125,85.9215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0762
  maximum absolute entry in einsum_ir solution: 34.0762
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142432
  time (eval):    0.0110121
  gflops (eval):  393.342
  gflops (total): 348.293
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142432,0.0110121,393.342,348.293

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504173
  gflops (total): 85.9134
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.04954
  gflops (eval):  87.4347
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.04954,87.4347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      50.4775
  maximum absolute entry in einsum_ir solution: 50.4775
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143596
  time (eval):    0.011026
  gflops (eval):  392.846
  gflops (total): 347.58
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143596,0.011026,392.846,347.58

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050655
  gflops (total): 85.5103
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503809
  gflops (eval):  85.9754
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503809,85.9754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4484
  maximum absolute entry in einsum_ir solution: 37.4484
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143294
  time (eval):    0.0111095
  gflops (eval):  389.894
  gflops (total): 345.35
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143294,0.0111095,389.894,345.35

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0496834
  gflops (total): 87.1824
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,87.1824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492526
  gflops (eval):  87.945
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492526,87.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0039
  maximum absolute entry in einsum_ir solution: 34.0039
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143231
  time (eval):    0.0109799
  gflops (eval):  394.496
  gflops (total): 348.973
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143231,0.0109799,394.496,348.973

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501384
  gflops (total): 86.3912
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493413
  gflops (eval):  87.787
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493413,87.787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8679
  maximum absolute entry in einsum_ir solution: 33.8679
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141531
  time (eval):    0.0110789
  gflops (eval):  390.971
  gflops (total): 346.683
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141531,0.0110789,390.971,346.683

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501832
  gflops (total): 86.3141
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3141

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495596
  gflops (eval):  87.4003
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495596,87.4003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9939
  maximum absolute entry in einsum_ir solution: 33.9939
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014116
  time (eval):    0.0110035
  gflops (eval):  393.648
  gflops (total): 348.891
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014116,0.0110035,393.648,348.891

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510112
  gflops (total): 84.9131
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503601
  gflops (eval):  86.0109
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503601,86.0109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3058
  maximum absolute entry in einsum_ir solution: 35.3058
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142649
  time (eval):    0.0109923
  gflops (eval):  394.052
  gflops (total): 348.789
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142649,0.0109923,394.052,348.789

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050855
  gflops (total): 85.174
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049408
  gflops (eval):  87.6683
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049408,87.6683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3819
  maximum absolute entry in einsum_ir solution: 36.3819
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145195
  time (eval):    0.0110317
  gflops (eval):  392.643
  gflops (total): 346.975
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145195,0.0110317,392.643,346.975

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505606
  gflops (total): 85.6698
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502882
  gflops (eval):  86.1339
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502882,86.1339,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0281
  maximum absolute entry in einsum_ir solution: 36.0281
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142792
  time (eval):    0.011001
  gflops (eval):  393.74
  gflops (total): 348.505
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142792,0.011001,393.74,348.505

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499491
  gflops (total): 86.7188
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496736
  gflops (eval):  87.1996
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496736,87.1996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7405
  maximum absolute entry in einsum_ir solution: 37.7405
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00188529
  time (eval):    0.0109915
  gflops (eval):  394.077
  gflops (total): 336.381
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00188529,0.0109915,394.077,336.381

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506501
  gflops (total): 85.5184
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502904
  gflops (eval):  86.1301
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502904,86.1301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2987
  maximum absolute entry in einsum_ir solution: 34.2987
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141208
  time (eval):    0.0110261
  gflops (eval):  392.842
  gflops (total): 348.244
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141208,0.0110261,392.842,348.244

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506762
  gflops (total): 85.4745
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498611
  gflops (eval):  86.8717
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498611,86.8717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3862
  maximum absolute entry in einsum_ir solution: 34.3862
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00196896
  time (eval):    0.0109518
  gflops (eval):  395.506
  gflops (total): 335.236
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00196896,0.0109518,395.506,335.236

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050378
  gflops (total): 85.9803
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495098
  gflops (eval):  87.4881
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495098,87.4881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0388
  maximum absolute entry in einsum_ir solution: 36.0388
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141264
  time (eval):    0.0110286
  gflops (eval):  392.755
  gflops (total): 348.159
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141264,0.0110286,392.755,348.159

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504545
  gflops (total): 85.85
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.85

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494383
  gflops (eval):  87.6147
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494383,87.6147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7504
  maximum absolute entry in einsum_ir solution: 36.7504
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014136
  time (eval):    0.0109953
  gflops (eval):  393.943
  gflops (total): 349.065
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014136,0.0109953,393.943,349.065

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503135
  gflops (total): 86.0906
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494246
  gflops (eval):  87.6389
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494246,87.6389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9378
  maximum absolute entry in einsum_ir solution: 36.9378
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143156
  time (eval):    0.0110465
  gflops (eval):  392.118
  gflops (total): 347.131
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143156,0.0110465,392.118,347.131

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501645
  gflops (total): 86.3463
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495278
  gflops (eval):  87.4563
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495278,87.4563,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.359
  maximum absolute entry in einsum_ir solution: 33.359
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142542
  time (eval):    0.0111712
  gflops (eval):  387.738
  gflops (total): 343.863
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142542,0.0111712,387.738,343.863

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501749
  gflops (total): 86.3285
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498271
  gflops (eval):  86.931
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498271,86.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1663
  maximum absolute entry in einsum_ir solution: 33.1663
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143787
  time (eval):    0.0110652
  gflops (eval):  391.456
  gflops (total): 346.438
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143787,0.0110652,391.456,346.438

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506134
  gflops (total): 85.5806
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495094
  gflops (eval):  87.4889
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495094,87.4889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9429
  maximum absolute entry in einsum_ir solution: 35.9429
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141643
  time (eval):    0.0111845
  gflops (eval):  387.28
  gflops (total): 343.747
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141643,0.0111845,387.28,343.747

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507538
  gflops (total): 85.3437
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496591
  gflops (eval):  87.2251
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496591,87.2251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9532
  maximum absolute entry in einsum_ir solution: 33.9532
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00171546
  time (eval):    0.0110664
  gflops (eval):  391.413
  gflops (total): 338.881
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00171546,0.0110664,391.413,338.881

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504267
  gflops (total): 85.8973
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502976
  gflops (eval):  86.1179
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502976,86.1179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5159
  maximum absolute entry in einsum_ir solution: 36.5159
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00159744
  time (eval):    0.0109875
  gflops (eval):  394.222
  gflops (total): 344.183
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00159744,0.0109875,394.222,344.183

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504051
  gflops (total): 85.9342
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491387
  gflops (eval):  88.1488
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491387,88.1488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9176
  maximum absolute entry in einsum_ir solution: 32.9176
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155289
  time (eval):    0.01105
  gflops (eval):  391.992
  gflops (total): 343.692
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155289,0.01105,391.992,343.692

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508219
  gflops (total): 85.2294
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494346
  gflops (eval):  87.6213
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494346,87.6213,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7225
  maximum absolute entry in einsum_ir solution: 36.7225
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142026
  time (eval):    0.0109875
  gflops (eval):  394.224
  gflops (total): 349.099
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142026,0.0109875,394.224,349.099

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508406
  gflops (total): 85.198
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049633
  gflops (eval):  87.271
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049633,87.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8049
  maximum absolute entry in einsum_ir solution: 32.8049
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014206
  time (eval):    0.0110324
  gflops (eval):  392.618
  gflops (total): 347.829
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014206,0.0110324,392.618,347.829

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504034
  gflops (total): 85.937
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497574
  gflops (eval):  87.0528
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497574,87.0528,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4517
  maximum absolute entry in einsum_ir solution: 33.4517
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014298
  time (eval):    0.0110078
  gflops (eval):  393.495
  gflops (total): 348.259
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014298,0.0110078,393.495,348.259

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500691
  gflops (total): 86.5109
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496446
  gflops (eval):  87.2506
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496446,87.2506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6534
  maximum absolute entry in einsum_ir solution: 35.6534
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142062
  time (eval):    0.0109932
  gflops (eval):  394.02
  gflops (total): 348.929
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142062,0.0109932,394.02,348.929

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502543
  gflops (total): 86.1921
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497061
  gflops (eval):  87.1426
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497061,87.1426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5364
  maximum absolute entry in einsum_ir solution: 35.5364
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143209
  time (eval):    0.0110383
  gflops (eval):  392.409
  gflops (total): 347.345
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143209,0.0110383,392.409,347.345

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509378
  gflops (total): 85.0354
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050381
  gflops (eval):  85.9752
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050381,85.9752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4197
  maximum absolute entry in einsum_ir solution: 33.4197
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149768
  time (eval):    0.0110117
  gflops (eval):  393.355
  gflops (total): 346.261
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149768,0.0110117,393.355,346.261

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502439
  gflops (total): 86.2098
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2098

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504269
  gflops (eval):  85.897
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504269,85.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6654
  maximum absolute entry in einsum_ir solution: 34.6654
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152595
  time (eval):    0.0110148
  gflops (eval):  393.245
  gflops (total): 345.395
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152595,0.0110148,393.245,345.395

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506349
  gflops (total): 85.5441
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505114
  gflops (eval):  85.7534
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505114,85.7534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8828
  maximum absolute entry in einsum_ir solution: 33.8828
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142401
  time (eval):    0.0110417
  gflops (eval):  392.287
  gflops (total): 347.474
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142401,0.0110417,392.287,347.474

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050922
  gflops (total): 85.0618
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496219
  gflops (eval):  87.2905
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496219,87.2905,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6954
  maximum absolute entry in einsum_ir solution: 35.6954
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142214
  time (eval):    0.0110334
  gflops (eval):  392.582
  gflops (total): 347.758
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142214,0.0110334,392.582,347.758

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507623
  gflops (total): 85.3294
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3294

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500836
  gflops (eval):  86.4858
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500836,86.4858,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2704
  maximum absolute entry in einsum_ir solution: 36.2704
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140801
  time (eval):    0.0110842
  gflops (eval):  390.782
  gflops (total): 346.737
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140801,0.0110842,390.782,346.737

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505213
  gflops (total): 85.7365
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049741
  gflops (eval):  87.0816
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049741,87.0816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7305
  maximum absolute entry in einsum_ir solution: 33.7305
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151041
  time (eval):    0.0110329
  gflops (eval):  392.599
  gflops (total): 345.324
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151041,0.0110329,392.599,345.324

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507918
  gflops (total): 85.28
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499319
  gflops (eval):  86.7486
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499319,86.7486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3415
  maximum absolute entry in einsum_ir solution: 34.3415
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00157478
  time (eval):    0.0111176
  gflops (eval):  389.609
  gflops (total): 341.269
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00157478,0.0111176,389.609,341.269

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511026
  gflops (total): 84.7613
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.7613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050484
  gflops (eval):  85.7998
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050484,85.7998,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3219
  maximum absolute entry in einsum_ir solution: 36.3219
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143613
  time (eval):    0.0109854
  gflops (eval):  394.299
  gflops (total): 348.712
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143613,0.0109854,394.299,348.712

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502806
  gflops (total): 86.147
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.147

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503718
  gflops (eval):  85.991
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503718,85.991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.1793
  maximum absolute entry in einsum_ir solution: 38.1793
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141529
  time (eval):    0.0110292
  gflops (eval):  392.731
  gflops (total): 348.067
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141529,0.0110292,392.731,348.067

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502359
  gflops (total): 86.2237
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504229
  gflops (eval):  85.9038
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504229,85.9038,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.846
  maximum absolute entry in einsum_ir solution: 34.846
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142261
  time (eval):    0.0110159
  gflops (eval):  393.208
  gflops (total): 348.236
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142261,0.0110159,393.208,348.236

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498834
  gflops (total): 86.833
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494429
  gflops (eval):  87.6064
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494429,87.6064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0278
  maximum absolute entry in einsum_ir solution: 33.0278
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141509
  time (eval):    0.0110446
  gflops (eval):  392.185
  gflops (total): 347.643
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141509,0.0110446,392.185,347.643

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503169
  gflops (total): 86.0848
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496779
  gflops (eval):  87.1921
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496779,87.1921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2237
  maximum absolute entry in einsum_ir solution: 35.2237
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141546
  time (eval):    0.0109869
  gflops (eval):  394.243
  gflops (total): 349.249
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141546,0.0109869,394.243,349.249

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502877
  gflops (total): 86.1347
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491944
  gflops (eval):  88.049
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491944,88.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.1598
  maximum absolute entry in einsum_ir solution: 32.1598
  maximum element-wise difference:              0
parsed tensors:
  d,f,g,b
  g,e,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 5 6 1 6 4 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[3,5,6,1]->[1,3,6,5]],[[6,4,0,2]->[0,2,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145568
  time (eval):    0.0110666
  gflops (eval):  391.404
  gflops (total): 345.904
CSV_DATA: einsum_ir,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145568,0.0110666,391.404,345.904

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.05007
  gflops (total): 86.5094
CSV_DATA: at::einsum,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501611
  gflops (eval):  86.3522
CSV_DATA: at::matmul,"dfgb,geac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501611,86.3522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3749
  maximum absolute entry in einsum_ir solution: 34.3749
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141612
  time (eval):    0.0106687
  gflops (eval):  406.001
  gflops (total): 358.426
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141612,0.0106687,406.001,358.426

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505806
  gflops (total): 85.636
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501589
  gflops (eval):  86.3559
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501589,86.3559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.274
  maximum absolute entry in einsum_ir solution: 35.274
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140841
  time (eval):    0.0106613
  gflops (eval):  406.285
  gflops (total): 358.876
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140841,0.0106613,406.285,358.876

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501347
  gflops (total): 86.3977
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498619
  gflops (eval):  86.8703
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498619,86.8703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0187
  maximum absolute entry in einsum_ir solution: 35.0187
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142498
  time (eval):    0.0106414
  gflops (eval):  407.043
  gflops (total): 358.973
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142498,0.0106414,407.043,358.973

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505419
  gflops (total): 85.7015
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503783
  gflops (eval):  85.9798
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503783,85.9798,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9542
  maximum absolute entry in einsum_ir solution: 36.9542
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141031
  time (eval):    0.0106254
  gflops (eval):  407.656
  gflops (total): 359.888
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141031,0.0106254,407.656,359.888

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050214
  gflops (total): 86.2612
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494278
  gflops (eval):  87.6333
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494278,87.6333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0127
  maximum absolute entry in einsum_ir solution: 33.0127
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014574
  time (eval):    0.01064
  gflops (eval):  407.099
  gflops (total): 358.055
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014574,0.01064,407.099,358.055

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505222
  gflops (total): 85.735
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050557
  gflops (eval):  85.676
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050557,85.676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9847
  maximum absolute entry in einsum_ir solution: 34.9847
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141596
  time (eval):    0.0106292
  gflops (eval):  407.511
  gflops (total): 359.606
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141596,0.0106292,407.511,359.606

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498513
  gflops (total): 86.8889
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.8889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497602
  gflops (eval):  87.0478
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497602,87.0478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5999
  maximum absolute entry in einsum_ir solution: 37.5999
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140945
  time (eval):    0.0106607
  gflops (eval):  406.306
  gflops (total): 358.861
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140945,0.0106607,406.306,358.861

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503815
  gflops (total): 85.9744
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504059
  gflops (eval):  85.9328
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504059,85.9328,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9007
  maximum absolute entry in einsum_ir solution: 33.9007
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014197
  time (eval):    0.0106407
  gflops (eval):  407.07
  gflops (total): 359.151
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014197,0.0106407,407.07,359.151

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502036
  gflops (total): 86.2791
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503384
  gflops (eval):  86.0479
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503384,86.0479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2981
  maximum absolute entry in einsum_ir solution: 33.2981
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141934
  time (eval):    0.0106134
  gflops (eval):  408.116
  gflops (total): 359.977
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141934,0.0106134,408.116,359.977

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503634
  gflops (total): 86.0052
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0052

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0489778
  gflops (eval):  88.4383
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0489778,88.4383,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.157
  maximum absolute entry in einsum_ir solution: 35.157
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140748
  time (eval):    0.0106341
  gflops (eval):  407.325
  gflops (total): 359.715
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140748,0.0106341,407.325,359.715

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501166
  gflops (total): 86.4288
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497707
  gflops (eval):  87.0295
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497707,87.0295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6488
  maximum absolute entry in einsum_ir solution: 34.6488
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00136395
  time (eval):    0.0106294
  gflops (eval):  407.504
  gflops (total): 361.16
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00136395,0.0106294,407.504,361.16

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507445
  gflops (total): 85.3595
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3595

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493558
  gflops (eval):  87.761
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493558,87.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7987
  maximum absolute entry in einsum_ir solution: 33.7987
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140369
  time (eval):    0.0106337
  gflops (eval):  407.34
  gflops (total): 359.84
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140369,0.0106337,407.34,359.84

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501297
  gflops (total): 86.4063
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4063

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049727
  gflops (eval):  87.1059
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049727,87.1059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7256
  maximum absolute entry in einsum_ir solution: 33.7256
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014167
  time (eval):    0.0106359
  gflops (eval):  407.253
  gflops (total): 359.384
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014167,0.0106359,407.253,359.384

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504292
  gflops (total): 85.8931
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8931

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503051
  gflops (eval):  86.1049
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503051,86.1049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7868
  maximum absolute entry in einsum_ir solution: 33.7868
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141588
  time (eval):    0.0106231
  gflops (eval):  407.744
  gflops (total): 359.79
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141588,0.0106231,407.744,359.79

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501096
  gflops (total): 86.441
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.441

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493822
  gflops (eval):  87.7142
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493822,87.7142,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7158
  maximum absolute entry in einsum_ir solution: 35.7158
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00170969
  time (eval):    0.0106467
  gflops (eval):  406.84
  gflops (total): 350.548
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00170969,0.0106467,406.84,350.548

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500347
  gflops (total): 86.5703
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504747
  gflops (eval):  85.8156
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504747,85.8156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0355
  maximum absolute entry in einsum_ir solution: 37.0355
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141626
  time (eval):    0.0106028
  gflops (eval):  408.525
  gflops (total): 360.387
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141626,0.0106028,408.525,360.387

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500914
  gflops (total): 86.4723
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493996
  gflops (eval):  87.6832
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493996,87.6832,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0539
  maximum absolute entry in einsum_ir solution: 34.0539
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140437
  time (eval):    0.0106255
  gflops (eval):  407.652
  gflops (total): 360.063
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140437,0.0106255,407.652,360.063

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509239
  gflops (total): 85.0588
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0588

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505939
  gflops (eval):  85.6135
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505939,85.6135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.279
  maximum absolute entry in einsum_ir solution: 35.279
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014178
  time (eval):    0.0106123
  gflops (eval):  408.162
  gflops (total): 360.058
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014178,0.0106123,408.162,360.058

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502495
  gflops (total): 86.2003
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501215
  gflops (eval):  86.4203
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501215,86.4203,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.273
  maximum absolute entry in einsum_ir solution: 35.273
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014189
  time (eval):    0.0106376
  gflops (eval):  407.191
  gflops (total): 359.27
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014189,0.0106376,407.191,359.27

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502252
  gflops (total): 86.2419
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497747
  gflops (eval):  87.0226
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497747,87.0226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9082
  maximum absolute entry in einsum_ir solution: 36.9082
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142374
  time (eval):    0.0106392
  gflops (eval):  407.127
  gflops (total): 359.076
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142374,0.0106392,407.127,359.076

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503651
  gflops (total): 86.0024
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503979
  gflops (eval):  85.9464
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503979,85.9464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9445
  maximum absolute entry in einsum_ir solution: 33.9445
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140612
  time (eval):    0.0106231
  gflops (eval):  407.744
  gflops (total): 360.082
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140612,0.0106231,407.744,360.082

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510031
  gflops (total): 84.9266
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9266

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502056
  gflops (eval):  86.2757
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502056,86.2757,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5627
  maximum absolute entry in einsum_ir solution: 35.5627
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140318
  time (eval):    0.0106418
  gflops (eval):  407.029
  gflops (total): 359.612
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140318,0.0106418,407.029,359.612

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499996
  gflops (total): 86.631
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491193
  gflops (eval):  88.1836
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491193,88.1836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8387
  maximum absolute entry in einsum_ir solution: 34.8387
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139046
  time (eval):    0.0106288
  gflops (eval):  407.527
  gflops (total): 360.381
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139046,0.0106288,407.527,360.381

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501453
  gflops (total): 86.3794
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494607
  gflops (eval):  87.575
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494607,87.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4566
  maximum absolute entry in einsum_ir solution: 34.4566
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141266
  time (eval):    0.0106217
  gflops (eval):  407.799
  gflops (total): 359.929
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141266,0.0106217,407.799,359.929

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509861
  gflops (total): 84.9549
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505483
  gflops (eval):  85.6907
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505483,85.6907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4875
  maximum absolute entry in einsum_ir solution: 35.4875
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141995
  time (eval):    0.0106068
  gflops (eval):  408.373
  gflops (total): 360.158
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141995,0.0106068,408.373,360.158

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508105
  gflops (total): 85.2486
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501682
  gflops (eval):  86.3399
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501682,86.3399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0054
  maximum absolute entry in einsum_ir solution: 34.0054
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00154774
  time (eval):    0.0106297
  gflops (eval):  407.492
  gflops (total): 355.7
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00154774,0.0106297,407.492,355.7

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501284
  gflops (total): 86.4084
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500293
  gflops (eval):  86.5796
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500293,86.5796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1662
  maximum absolute entry in einsum_ir solution: 33.1662
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139864
  time (eval):    0.010644
  gflops (eval):  406.943
  gflops (total): 359.681
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139864,0.010644,406.943,359.681

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503713
  gflops (total): 85.9919
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498644
  gflops (eval):  86.8659
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498644,86.8659,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7387
  maximum absolute entry in einsum_ir solution: 33.7387
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140879
  time (eval):    0.0106204
  gflops (eval):  407.847
  gflops (total): 360.083
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140879,0.0106204,407.847,360.083

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503766
  gflops (total): 85.9828
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0507096
  gflops (eval):  85.4181
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0507096,85.4181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6271
  maximum absolute entry in einsum_ir solution: 34.6271
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140507
  time (eval):    0.0106224
  gflops (eval):  407.771
  gflops (total): 360.134
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140507,0.0106224,407.771,360.134

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502076
  gflops (total): 86.2722
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502207
  gflops (eval):  86.2497
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502207,86.2497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3976
  maximum absolute entry in einsum_ir solution: 34.3976
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141812
  time (eval):    0.010646
  gflops (eval):  406.869
  gflops (total): 359.042
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141812,0.010646,406.869,359.042

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500718
  gflops (total): 86.5062
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5062

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049446
  gflops (eval):  87.6009
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049446,87.6009,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7044
  maximum absolute entry in einsum_ir solution: 34.7044
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140905
  time (eval):    0.0106357
  gflops (eval):  407.261
  gflops (total): 359.618
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140905,0.0106357,407.261,359.618

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500918
  gflops (total): 86.4716
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501656
  gflops (eval):  86.3444
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501656,86.3444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4419
  maximum absolute entry in einsum_ir solution: 37.4419
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145452
  time (eval):    0.0106008
  gflops (eval):  408.602
  gflops (total): 359.303
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145452,0.0106008,408.602,359.303

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501654
  gflops (total): 86.3448
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496745
  gflops (eval):  87.1981
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496745,87.1981,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3913
  maximum absolute entry in einsum_ir solution: 34.3913
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00152588
  time (eval):    0.0106432
  gflops (eval):  406.974
  gflops (total): 355.944
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00152588,0.0106432,406.974,355.944

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500699
  gflops (total): 86.5094
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497006
  gflops (eval):  87.1523
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497006,87.1523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7197
  maximum absolute entry in einsum_ir solution: 34.7197
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141214
  time (eval):    0.0106472
  gflops (eval):  406.821
  gflops (total): 359.183
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141214,0.0106472,406.821,359.183

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498904
  gflops (total): 86.8207
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.8207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049391
  gflops (eval):  87.6986
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049391,87.6986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5839
  maximum absolute entry in einsum_ir solution: 33.5839
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142222
  time (eval):    0.0106202
  gflops (eval):  407.857
  gflops (total): 359.688
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142222,0.0106202,407.857,359.688

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050472
  gflops (total): 85.8203
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498722
  gflops (eval):  86.8524
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498722,86.8524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0277
  maximum absolute entry in einsum_ir solution: 35.0277
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014182
  time (eval):    0.0106873
  gflops (eval):  405.297
  gflops (total): 357.815
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014182,0.0106873,405.297,357.815

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506477
  gflops (total): 85.5225
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492195
  gflops (eval):  88.0042
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492195,88.0042,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2306
  maximum absolute entry in einsum_ir solution: 33.2306
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141742
  time (eval):    0.0106262
  gflops (eval):  407.628
  gflops (total): 359.654
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141742,0.0106262,407.628,359.654

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504525
  gflops (total): 85.8535
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497135
  gflops (eval):  87.1297
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497135,87.1297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9573
  maximum absolute entry in einsum_ir solution: 34.9573
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141856
  time (eval):    0.0106532
  gflops (eval):  406.592
  gflops (total): 358.813
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141856,0.0106532,406.592,358.813

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504484
  gflops (total): 85.8604
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492089
  gflops (eval):  88.0232
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492089,88.0232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2742
  maximum absolute entry in einsum_ir solution: 34.2742
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140972
  time (eval):    0.0106269
  gflops (eval):  407.601
  gflops (total): 359.863
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140972,0.0106269,407.601,359.863

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501103
  gflops (total): 86.4397
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0489997
  gflops (eval):  88.3989
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0489997,88.3989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.3072
  maximum absolute entry in einsum_ir solution: 33.3072
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141239
  time (eval):    0.010654
  gflops (eval):  406.561
  gflops (total): 358.973
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141239,0.010654,406.561,358.973

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499586
  gflops (total): 86.7021
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7021

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491097
  gflops (eval):  88.201
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491097,88.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.642
  maximum absolute entry in einsum_ir solution: 34.642
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014193
  time (eval):    0.0106322
  gflops (eval):  407.396
  gflops (total): 359.417
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014193,0.0106322,407.396,359.417

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508459
  gflops (total): 85.1892
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504481
  gflops (eval):  85.861
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504481,85.861,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3636
  maximum absolute entry in einsum_ir solution: 34.3636
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141292
  time (eval):    0.0106362
  gflops (eval):  407.244
  gflops (total): 359.489
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141292,0.0106362,407.244,359.489

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507468
  gflops (total): 85.3555
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3555

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499495
  gflops (eval):  86.718
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499495,86.718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9996
  maximum absolute entry in einsum_ir solution: 33.9996
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141699
  time (eval):    0.0106232
  gflops (eval):  407.74
  gflops (total): 359.754
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141699,0.0106232,407.74,359.754

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505202
  gflops (total): 85.7384
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494162
  gflops (eval):  87.6539
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494162,87.6539,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5504
  maximum absolute entry in einsum_ir solution: 34.5504
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141036
  time (eval):    0.0106248
  gflops (eval):  407.681
  gflops (total): 359.907
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141036,0.0106248,407.681,359.907

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502289
  gflops (total): 86.2355
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493668
  gflops (eval):  87.7415
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493668,87.7415,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3241
  maximum absolute entry in einsum_ir solution: 32.3241
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140579
  time (eval):    0.0106369
  gflops (eval):  407.217
  gflops (total): 359.681
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140579,0.0106369,407.217,359.681

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505512
  gflops (total): 85.6859
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0490066
  gflops (eval):  88.3864
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0490066,88.3864,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.0731
  maximum absolute entry in einsum_ir solution: 36.0731
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00178842
  time (eval):    0.0106347
  gflops (eval):  407.302
  gflops (total): 348.667
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00178842,0.0106347,407.302,348.667

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499656
  gflops (total): 86.69
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492564
  gflops (eval):  87.9382
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492564,87.9382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      39.0079
  maximum absolute entry in einsum_ir solution: 39.0079
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00181834
  time (eval):    0.0106078
  gflops (eval):  408.333
  gflops (total): 348.581
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00181834,0.0106078,408.333,348.581

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503931
  gflops (total): 85.9546
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.04947
  gflops (eval):  87.5586
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.04947,87.5586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9873
  maximum absolute entry in einsum_ir solution: 34.9873
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140118
  time (eval):    0.0106184
  gflops (eval):  407.928
  gflops (total): 360.373
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140118,0.0106184,407.928,360.373

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503415
  gflops (total): 86.0427
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049513
  gflops (eval):  87.4825
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049513,87.4825,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0849
  maximum absolute entry in einsum_ir solution: 34.0849
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142517
  time (eval):    0.010623
  gflops (eval):  407.75
  gflops (total): 359.517
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142517,0.010623,407.75,359.517

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050208
  gflops (total): 86.2715
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493352
  gflops (eval):  87.7977
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493352,87.7977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9889
  maximum absolute entry in einsum_ir solution: 37.9889
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142113
  time (eval):    0.0106421
  gflops (eval):  407.016
  gflops (total): 359.067
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142113,0.0106421,407.016,359.067

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502195
  gflops (total): 86.2518
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499068
  gflops (eval):  86.7922
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499068,86.7922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.7262
  maximum absolute entry in einsum_ir solution: 37.7262
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140213
  time (eval):    0.0106428
  gflops (eval):  406.989
  gflops (total): 359.612
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140213,0.0106428,406.989,359.612

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505148
  gflops (total): 85.7475
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7475

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502067
  gflops (eval):  86.2738
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502067,86.2738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1755
  maximum absolute entry in einsum_ir solution: 35.1755
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141913
  time (eval):    0.0106206
  gflops (eval):  407.843
  gflops (total): 359.77
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141913,0.0106206,407.843,359.77

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501914
  gflops (total): 86.3
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491109
  gflops (eval):  88.1988
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491109,88.1988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5812
  maximum absolute entry in einsum_ir solution: 33.5812
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139375
  time (eval):    0.010696
  gflops (eval):  404.967
  gflops (total): 358.281
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139375,0.010696,404.967,358.281

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509296
  gflops (total): 85.0492
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503372
  gflops (eval):  86.0501
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503372,86.0501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9304
  maximum absolute entry in einsum_ir solution: 33.9304
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141531
  time (eval):    0.0106118
  gflops (eval):  408.181
  gflops (total): 360.147
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141531,0.0106118,408.181,360.147

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507789
  gflops (total): 85.3015
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3015

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494414
  gflops (eval):  87.6092
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494414,87.6092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.716
  maximum absolute entry in einsum_ir solution: 35.716
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141305
  time (eval):    0.0106391
  gflops (eval):  407.134
  gflops (total): 359.399
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141305,0.0106391,407.134,359.399

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507735
  gflops (total): 85.3107
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501834
  gflops (eval):  86.3138
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501834,86.3138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0462
  maximum absolute entry in einsum_ir solution: 35.0462
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140306
  time (eval):    0.0106549
  gflops (eval):  406.527
  gflops (total): 359.224
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140306,0.0106549,406.527,359.224

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504299
  gflops (total): 85.892
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498252
  gflops (eval):  86.9343
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498252,86.9343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7364
  maximum absolute entry in einsum_ir solution: 33.7364
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014187
  time (eval):    0.0106476
  gflops (eval):  406.806
  gflops (total): 358.976
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014187,0.0106476,406.806,358.976

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507802
  gflops (total): 85.2994
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505633
  gflops (eval):  85.6652
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505633,85.6652,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.8272
  maximum absolute entry in einsum_ir solution: 35.8272
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141948
  time (eval):    0.0106381
  gflops (eval):  407.171
  gflops (total): 359.237
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141948,0.0106381,407.171,359.237

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502234
  gflops (total): 86.245
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493993
  gflops (eval):  87.6839
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493993,87.6839,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.9997
  maximum absolute entry in einsum_ir solution: 37.9997
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155694
  time (eval):    0.010659
  gflops (eval):  406.373
  gflops (total): 354.58
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155694,0.010659,406.373,354.58

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511373
  gflops (total): 84.7038
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.7038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502795
  gflops (eval):  86.1488
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502795,86.1488,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0809
  maximum absolute entry in einsum_ir solution: 33.0809
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141552
  time (eval):    0.0106285
  gflops (eval):  407.539
  gflops (total): 359.641
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141552,0.0106285,407.539,359.641

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501571
  gflops (total): 86.359
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497622
  gflops (eval):  87.0444
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497622,87.0444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2844
  maximum absolute entry in einsum_ir solution: 34.2844
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142476
  time (eval):    0.0106066
  gflops (eval):  408.381
  gflops (total): 360.02
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142476,0.0106066,408.381,360.02

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499464
  gflops (total): 86.7234
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497409
  gflops (eval):  87.0817
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497409,87.0817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3914
  maximum absolute entry in einsum_ir solution: 35.3914
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141905
  time (eval):    0.0106186
  gflops (eval):  407.918
  gflops (total): 359.831
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141905,0.0106186,407.918,359.831

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510464
  gflops (total): 84.8546
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.8546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502515
  gflops (eval):  86.1968
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502515,86.1968,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5464
  maximum absolute entry in einsum_ir solution: 37.5464
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141069
  time (eval):    0.0106294
  gflops (eval):  407.505
  gflops (total): 359.759
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141069,0.0106294,407.505,359.759

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508801
  gflops (total): 85.1319
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497632
  gflops (eval):  87.0427
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497632,87.0427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.623
  maximum absolute entry in einsum_ir solution: 35.623
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00137576
  time (eval):    0.0106187
  gflops (eval):  407.915
  gflops (total): 361.127
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00137576,0.0106187,407.915,361.127

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510827
  gflops (total): 84.7942
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.7942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050377
  gflops (eval):  85.982
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050377,85.982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.5451
  maximum absolute entry in einsum_ir solution: 40.5451
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142088
  time (eval):    0.0106221
  gflops (eval):  407.783
  gflops (total): 359.671
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142088,0.0106221,407.783,359.671

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509527
  gflops (total): 85.0106
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503184
  gflops (eval):  86.0822
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503184,86.0822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      31.8378
  maximum absolute entry in einsum_ir solution: 31.8378
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141654
  time (eval):    0.0106314
  gflops (eval):  407.425
  gflops (total): 359.522
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141654,0.0106314,407.425,359.522

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501025
  gflops (total): 86.4531
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501243
  gflops (eval):  86.4155
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501243,86.4155,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4155
  maximum absolute entry in einsum_ir solution: 35.4155
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146968
  time (eval):    0.010606
  gflops (eval):  408.404
  gflops (total): 358.699
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146968,0.010606,408.404,358.699

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508156
  gflops (total): 85.24
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.24

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502416
  gflops (eval):  86.2138
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502416,86.2138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6794
  maximum absolute entry in einsum_ir solution: 34.6794
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146183
  time (eval):    0.0106044
  gflops (eval):  408.465
  gflops (total): 358.98
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146183,0.0106044,408.465,358.98

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505481
  gflops (total): 85.6911
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505071
  gflops (eval):  85.7606
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505071,85.7606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2382
  maximum absolute entry in einsum_ir solution: 34.2382
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014058
  time (eval):    0.0106209
  gflops (eval):  407.83
  gflops (total): 360.159
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014058,0.0106209,407.83,360.159

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506375
  gflops (total): 85.5398
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498774
  gflops (eval):  86.8433
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498774,86.8433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.785
  maximum absolute entry in einsum_ir solution: 34.785
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146541
  time (eval):    0.0106062
  gflops (eval):  408.394
  gflops (total): 358.818
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146541,0.0106062,408.394,358.818

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511267
  gflops (total): 84.7213
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.7213

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502834
  gflops (eval):  86.1421
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502834,86.1421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.084
  maximum absolute entry in einsum_ir solution: 37.084
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141204
  time (eval):    0.0106348
  gflops (eval):  407.295
  gflops (total): 359.555
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141204,0.0106348,407.295,359.555

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498649
  gflops (total): 86.8652
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.8652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494475
  gflops (eval):  87.5984
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494475,87.5984,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1981
  maximum absolute entry in einsum_ir solution: 36.1981
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141008
  time (eval):    0.0106479
  gflops (eval):  406.794
  gflops (total): 359.223
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141008,0.0106479,406.794,359.223

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505149
  gflops (total): 85.7473
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494278
  gflops (eval):  87.6333
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494278,87.6333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0262
  maximum absolute entry in einsum_ir solution: 37.0262
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140059
  time (eval):    0.0106349
  gflops (eval):  407.292
  gflops (total): 359.895
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140059,0.0106349,407.292,359.895

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.051342
  gflops (total): 84.366
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503291
  gflops (eval):  86.064
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503291,86.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9654
  maximum absolute entry in einsum_ir solution: 33.9654
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142096
  time (eval):    0.0106114
  gflops (eval):  408.194
  gflops (total): 359.988
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142096,0.0106114,408.194,359.988

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506239
  gflops (total): 85.5627
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495779
  gflops (eval):  87.368
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495779,87.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5363
  maximum absolute entry in einsum_ir solution: 33.5363
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141062
  time (eval):    0.0106495
  gflops (eval):  406.733
  gflops (total): 359.16
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141062,0.0106495,406.733,359.16

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508462
  gflops (total): 85.1887
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1887

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503936
  gflops (eval):  85.9538
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503936,85.9538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4848
  maximum absolute entry in einsum_ir solution: 32.4848
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141828
  time (eval):    0.0106185
  gflops (eval):  407.924
  gflops (total): 359.858
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141828,0.0106185,407.924,359.858

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504139
  gflops (total): 85.9191
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493838
  gflops (eval):  87.7113
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493838,87.7113,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.8398
  maximum absolute entry in einsum_ir solution: 36.8398
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140186
  time (eval):    0.0106249
  gflops (eval):  407.675
  gflops (total): 360.156
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140186,0.0106249,407.675,360.156

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.049949
  gflops (total): 86.7188
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498167
  gflops (eval):  86.9491
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498167,86.9491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6919
  maximum absolute entry in einsum_ir solution: 33.6919
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142474
  time (eval):    0.0106148
  gflops (eval):  408.066
  gflops (total): 359.776
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142474,0.0106148,408.066,359.776

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050383
  gflops (total): 85.9718
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9718

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503686
  gflops (eval):  85.9965
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503686,85.9965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.6557
  maximum absolute entry in einsum_ir solution: 36.6557
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141686
  time (eval):    0.0106106
  gflops (eval):  408.224
  gflops (total): 360.135
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141686,0.0106106,408.224,360.135

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499774
  gflops (total): 86.6696
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493516
  gflops (eval):  87.7686
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493516,87.7686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8015
  maximum absolute entry in einsum_ir solution: 34.8015
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143617
  time (eval):    0.0106346
  gflops (eval):  407.304
  gflops (total): 358.843
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143617,0.0106346,407.304,358.843

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511153
  gflops (total): 84.7402
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.7402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498601
  gflops (eval):  86.8736
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498601,86.8736,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.2468
  maximum absolute entry in einsum_ir solution: 35.2468
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142677
  time (eval):    0.0106389
  gflops (eval):  407.14
  gflops (total): 358.995
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142677,0.0106389,407.14,358.995

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503877
  gflops (total): 85.9639
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9639

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502489
  gflops (eval):  86.2013
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502489,86.2013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9103
  maximum absolute entry in einsum_ir solution: 34.9103
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147038
  time (eval):    0.0106203
  gflops (eval):  407.851
  gflops (total): 358.251
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147038,0.0106203,407.851,358.251

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499452
  gflops (total): 86.7255
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491273
  gflops (eval):  88.1694
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491273,88.1694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.3987
  maximum absolute entry in einsum_ir solution: 32.3987
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141722
  time (eval):    0.0106207
  gflops (eval):  407.836
  gflops (total): 359.822
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141722,0.0106207,407.836,359.822

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500146
  gflops (total): 86.6051
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493552
  gflops (eval):  87.7621
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493552,87.7621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4258
  maximum absolute entry in einsum_ir solution: 34.4258
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.001414
  time (eval):    0.0106301
  gflops (eval):  407.479
  gflops (total): 359.64
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.001414,0.0106301,407.479,359.64

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500302
  gflops (total): 86.5782
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049401
  gflops (eval):  87.6807
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049401,87.6807,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.603
  maximum absolute entry in einsum_ir solution: 34.603
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140493
  time (eval):    0.0106279
  gflops (eval):  407.561
  gflops (total): 359.975
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140493,0.0106279,407.561,359.975

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505869
  gflops (total): 85.6252
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495895
  gflops (eval):  87.3474
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495895,87.3474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0013
  maximum absolute entry in einsum_ir solution: 33.0013
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00164961
  time (eval):    0.0106117
  gflops (eval):  408.182
  gflops (total): 353.266
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00164961,0.0106117,408.182,353.266

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506681
  gflops (total): 85.4881
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049578
  gflops (eval):  87.3677
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049578,87.3677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.8159
  maximum absolute entry in einsum_ir solution: 32.8159
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141897
  time (eval):    0.0106049
  gflops (eval):  408.447
  gflops (total): 360.245
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141897,0.0106049,408.447,360.245

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508709
  gflops (total): 85.1474
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493462
  gflops (eval):  87.7782
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493462,87.7782,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1699
  maximum absolute entry in einsum_ir solution: 35.1699
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141679
  time (eval):    0.0106335
  gflops (eval):  407.348
  gflops (total): 359.455
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141679,0.0106335,407.348,359.455

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502342
  gflops (total): 86.2265
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050372
  gflops (eval):  85.9907
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050372,85.9907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5085
  maximum absolute entry in einsum_ir solution: 33.5085
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142243
  time (eval):    0.0106417
  gflops (eval):  407.033
  gflops (total): 359.042
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142243,0.0106417,407.033,359.042

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503642
  gflops (total): 86.0039
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498633
  gflops (eval):  86.8679
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498633,86.8679,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4365
  maximum absolute entry in einsum_ir solution: 34.4365
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144298
  time (eval):    0.010631
  gflops (eval):  407.443
  gflops (total): 358.749
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144298,0.010631,407.443,358.749

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500805
  gflops (total): 86.4912
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.4912

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491446
  gflops (eval):  88.1382
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491446,88.1382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.2599
  maximum absolute entry in einsum_ir solution: 37.2599
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140549
  time (eval):    0.0106208
  gflops (eval):  407.834
  gflops (total): 360.171
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140549,0.0106208,407.834,360.171

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499655
  gflops (total): 86.6902
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497222
  gflops (eval):  87.1144
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497222,87.1144,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5772
  maximum absolute entry in einsum_ir solution: 34.5772
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145211
  time (eval):    0.0106089
  gflops (eval):  408.29
  gflops (total): 359.133
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145211,0.0106089,408.29,359.133

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505021
  gflops (total): 85.7691
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495167
  gflops (eval):  87.4759
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495167,87.4759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1607
  maximum absolute entry in einsum_ir solution: 37.1607
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141784
  time (eval):    0.0106663
  gflops (eval):  406.095
  gflops (total): 358.448
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141784,0.0106663,406.095,358.448

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511366
  gflops (total): 84.7049
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.7049

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502762
  gflops (eval):  86.1545
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502762,86.1545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6105
  maximum absolute entry in einsum_ir solution: 34.6105
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00149539
  time (eval):    0.0106129
  gflops (eval):  408.136
  gflops (total): 357.731
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00149539,0.0106129,408.136,357.731

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499647
  gflops (total): 86.6915
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496039
  gflops (eval):  87.3221
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496039,87.3221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.979
  maximum absolute entry in einsum_ir solution: 35.979
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140858
  time (eval):    0.0106047
  gflops (eval):  408.451
  gflops (total): 360.56
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140858,0.0106047,408.451,360.56

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.051269
  gflops (total): 84.4861
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.4861

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495803
  gflops (eval):  87.3637
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495803,87.3637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.3613
  maximum absolute entry in einsum_ir solution: 36.3613
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014366
  time (eval):    0.0106502
  gflops (eval):  406.708
  gflops (total): 358.368
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014366,0.0106502,406.708,358.368

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050813
  gflops (total): 85.2444
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501722
  gflops (eval):  86.333
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501722,86.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6896
  maximum absolute entry in einsum_ir solution: 32.6896
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142256
  time (eval):    0.0106105
  gflops (eval):  408.23
  gflops (total): 359.969
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142256,0.0106105,408.23,359.969

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506293
  gflops (total): 85.5536
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494572
  gflops (eval):  87.5812
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494572,87.5812,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1738
  maximum absolute entry in einsum_ir solution: 36.1738
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141071
  time (eval):    0.0106482
  gflops (eval):  406.783
  gflops (total): 359.195
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141071,0.0106482,406.783,359.195

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499085
  gflops (total): 86.7892
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493347
  gflops (eval):  87.7987
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493347,87.7987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7519
  maximum absolute entry in einsum_ir solution: 36.7519
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140598
  time (eval):    0.0106518
  gflops (eval):  406.648
  gflops (total): 359.231
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140598,0.0106518,406.648,359.231

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502702
  gflops (total): 86.1648
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493664
  gflops (eval):  87.7423
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493664,87.7423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2215
  maximum absolute entry in einsum_ir solution: 34.2215
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,b
  g,f,a,c
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 1 6 5 0 2 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,2]->[0,2,6,5]],[[3,4,6,1]->[1,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140748
  time (eval):    0.0105912
  gflops (eval):  408.974
  gflops (total): 361
CSV_DATA: einsum_ir,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140748,0.0105912,408.974,361

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506227
  gflops (total): 85.5648
CSV_DATA: at::einsum,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497099
  gflops (eval):  87.1359
CSV_DATA: at::matmul,"degb,gfac->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497099,87.1359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.7516
  maximum absolute entry in einsum_ir solution: 32.7516
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141077
  time (eval):    0.0116251
  gflops (eval):  372.6
  gflops (total): 332.277
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141077,0.0116251,372.6,332.277

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502607
  gflops (total): 86.1811
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493132
  gflops (eval):  87.837
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493132,87.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.219
  maximum absolute entry in einsum_ir solution: 33.219
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00179284
  time (eval):    0.0116297
  gflops (eval):  372.453
  gflops (total): 322.704
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00179284,0.0116297,372.453,322.704

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505508
  gflops (total): 85.6864
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501757
  gflops (eval):  86.3271
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501757,86.3271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9243
  maximum absolute entry in einsum_ir solution: 32.9243
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141761
  time (eval):    0.0116315
  gflops (eval):  372.394
  gflops (total): 331.939
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141761,0.0116315,372.394,331.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503505
  gflops (total): 86.0274
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0274

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495476
  gflops (eval):  87.4214
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495476,87.4214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4531
  maximum absolute entry in einsum_ir solution: 34.4531
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014029
  time (eval):    0.011643
  gflops (eval):  372.029
  gflops (total): 332.022
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014029,0.011643,372.029,332.022

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0511879
  gflops (total): 84.62
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501644
  gflops (eval):  86.3465
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501644,86.3465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1387
  maximum absolute entry in einsum_ir solution: 35.1387
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142258
  time (eval):    0.0116265
  gflops (eval):  372.554
  gflops (total): 331.939
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142258,0.0116265,372.554,331.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050147
  gflops (total): 86.3764
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3764

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497839
  gflops (eval):  87.0065
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497839,87.0065,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9619
  maximum absolute entry in einsum_ir solution: 34.9619
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014591
  time (eval):    0.0116325
  gflops (eval):  372.365
  gflops (total): 330.863
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014591,0.0116325,372.365,330.863

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504413
  gflops (total): 85.8724
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049166
  gflops (eval):  88.0999
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049166,88.0999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5468
  maximum absolute entry in einsum_ir solution: 34.5468
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014227
  time (eval):    0.0116119
  gflops (eval):  373.023
  gflops (total): 332.308
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014227,0.0116119,373.023,332.308

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503732
  gflops (total): 85.9886
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0506076
  gflops (eval):  85.5904
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0506076,85.5904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9517
  maximum absolute entry in einsum_ir solution: 33.9517
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141405
  time (eval):    0.0116382
  gflops (eval):  372.181
  gflops (total): 331.859
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141405,0.0116382,372.181,331.859

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503111
  gflops (total): 86.0947
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0947

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497532
  gflops (eval):  87.0602
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497532,87.0602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6784
  maximum absolute entry in einsum_ir solution: 32.6784
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00156518
  time (eval):    0.0116404
  gflops (eval):  372.112
  gflops (total): 328.008
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00156518,0.0116404,372.112,328.008

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505491
  gflops (total): 85.6894
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6894

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499363
  gflops (eval):  86.741
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499363,86.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.7078
  maximum absolute entry in einsum_ir solution: 33.7078
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00146265
  time (eval):    0.011637
  gflops (eval):  372.22
  gflops (total): 330.66
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00146265,0.011637,372.22,330.66

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507373
  gflops (total): 85.3715
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494638
  gflops (eval):  87.5696
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494638,87.5696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4355
  maximum absolute entry in einsum_ir solution: 35.4355
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141177
  time (eval):    0.0116395
  gflops (eval):  372.139
  gflops (total): 331.884
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141177,0.0116395,372.139,331.884

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500702
  gflops (total): 86.509
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495327
  gflops (eval):  87.4476
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495327,87.4476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7331
  maximum absolute entry in einsum_ir solution: 35.7331
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140415
  time (eval):    0.0116321
  gflops (eval):  372.376
  gflops (total): 332.267
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140415,0.0116321,372.376,332.267

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050175
  gflops (total): 86.3282
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492517
  gflops (eval):  87.9466
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492517,87.9466,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.323
  maximum absolute entry in einsum_ir solution: 33.323
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147927
  time (eval):    0.0116483
  gflops (eval):  371.86
  gflops (total): 329.957
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147927,0.0116483,371.86,329.957

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0496864
  gflops (total): 87.1772
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,87.1772

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492972
  gflops (eval):  87.8655
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492972,87.8655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.215
  maximum absolute entry in einsum_ir solution: 33.215
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139996
  time (eval):    0.0116263
  gflops (eval):  372.561
  gflops (total): 332.522
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139996,0.0116263,372.561,332.522

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506722
  gflops (total): 85.4811
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499532
  gflops (eval):  86.7116
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499532,86.7116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6689
  maximum absolute entry in einsum_ir solution: 33.6689
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141999
  time (eval):    0.0116387
  gflops (eval):  372.166
  gflops (total): 331.697
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141999,0.0116387,372.166,331.697

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506193
  gflops (total): 85.5705
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496311
  gflops (eval):  87.2743
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496311,87.2743,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1552
  maximum absolute entry in einsum_ir solution: 36.1552
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00174374
  time (eval):    0.0116405
  gflops (eval):  372.108
  gflops (total): 323.629
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00174374,0.0116405,372.108,323.629

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508289
  gflops (total): 85.2177
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503016
  gflops (eval):  86.111
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503016,86.111,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5912
  maximum absolute entry in einsum_ir solution: 37.5912
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140696
  time (eval):    0.011628
  gflops (eval):  372.508
  gflops (total): 332.301
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140696,0.011628,372.508,332.301

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503846
  gflops (total): 85.9691
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494382
  gflops (eval):  87.6148
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494382,87.6148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7038
  maximum absolute entry in einsum_ir solution: 34.7038
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142283
  time (eval):    0.0116331
  gflops (eval):  372.345
  gflops (total): 331.767
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142283,0.0116331,372.345,331.767

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502115
  gflops (total): 86.2654
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496833
  gflops (eval):  87.1827
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496833,87.1827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6401
  maximum absolute entry in einsum_ir solution: 34.6401
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139928
  time (eval):    0.0116536
  gflops (eval):  371.69
  gflops (total): 331.844
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139928,0.0116536,371.69,331.844

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505844
  gflops (total): 85.6295
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049445
  gflops (eval):  87.6027
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049445,87.6027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.0899
  maximum absolute entry in einsum_ir solution: 37.0899
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144885
  time (eval):    0.0116195
  gflops (eval):  372.779
  gflops (total): 331.45
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144885,0.0116195,372.779,331.45

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508638
  gflops (total): 85.1592
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503032
  gflops (eval):  86.1083
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503032,86.1083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.6102
  maximum absolute entry in einsum_ir solution: 40.6102
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144755
  time (eval):    0.0116348
  gflops (eval):  372.291
  gflops (total): 331.097
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144755,0.0116348,372.291,331.097

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506374
  gflops (total): 85.54
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494098
  gflops (eval):  87.6651
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494098,87.6651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4191
  maximum absolute entry in einsum_ir solution: 33.4191
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142658
  time (eval):    0.0116215
  gflops (eval):  372.717
  gflops (total): 331.967
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142658,0.0116215,372.717,331.967

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499184
  gflops (total): 86.7719
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495988
  gflops (eval):  87.3311
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495988,87.3311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3539
  maximum absolute entry in einsum_ir solution: 35.3539
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141405
  time (eval):    0.0116385
  gflops (eval):  372.172
  gflops (total): 331.853
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141405,0.0116385,372.172,331.853

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508913
  gflops (total): 85.1131
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500474
  gflops (eval):  86.5483
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500474,86.5483,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9961
  maximum absolute entry in einsum_ir solution: 33.9961
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141283
  time (eval):    0.0116418
  gflops (eval):  372.066
  gflops (total): 331.8
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141283,0.0116418,372.066,331.8

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504323
  gflops (total): 85.8879
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493459
  gflops (eval):  87.7786
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493459,87.7786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9968
  maximum absolute entry in einsum_ir solution: 36.9968
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141739
  time (eval):    0.0116373
  gflops (eval):  372.21
  gflops (total): 331.798
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141739,0.0116373,372.21,331.798

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502324
  gflops (total): 86.2296
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500438
  gflops (eval):  86.5546
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500438,86.5546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4923
  maximum absolute entry in einsum_ir solution: 35.4923
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141214
  time (eval):    0.0116511
  gflops (eval):  371.771
  gflops (total): 331.582
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141214,0.0116511,371.771,331.582

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499495
  gflops (total): 86.7179
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493609
  gflops (eval):  87.752
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493609,87.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.2807
  maximum absolute entry in einsum_ir solution: 36.2807
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140498
  time (eval):    0.0116384
  gflops (eval):  372.175
  gflops (total): 332.086
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140498,0.0116384,372.175,332.086

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508676
  gflops (total): 85.1528
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0505683
  gflops (eval):  85.6569
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0505683,85.6569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      40.8517
  maximum absolute entry in einsum_ir solution: 40.8517
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141278
  time (eval):    0.0116343
  gflops (eval):  372.307
  gflops (total): 331.992
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141278,0.0116343,372.307,331.992

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505183
  gflops (total): 85.7417
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7417

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497686
  gflops (eval):  87.0331
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497686,87.0331,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0219
  maximum absolute entry in einsum_ir solution: 33.0219
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014513
  time (eval):    0.0116376
  gflops (eval):  372.2
  gflops (total): 330.931
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014513,0.0116376,372.2,330.931

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505507
  gflops (total): 85.6866
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496568
  gflops (eval):  87.2292
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496568,87.2292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0845
  maximum absolute entry in einsum_ir solution: 33.0845
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141141
  time (eval):    0.0116599
  gflops (eval):  371.488
  gflops (total): 331.376
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141141,0.0116599,371.488,331.376

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502451
  gflops (total): 86.2078
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495918
  gflops (eval):  87.3435
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495918,87.3435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1898
  maximum absolute entry in einsum_ir solution: 34.1898
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141959
  time (eval):    0.0119108
  gflops (eval):  363.662
  gflops (total): 324.935
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141959,0.0119108,363.662,324.935

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500234
  gflops (total): 86.5898
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493793
  gflops (eval):  87.7194
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493793,87.7194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.878
  maximum absolute entry in einsum_ir solution: 34.878
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144026
  time (eval):    0.0116267
  gflops (eval):  372.55
  gflops (total): 331.487
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144026,0.0116267,372.55,331.487

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502924
  gflops (total): 86.1267
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050002
  gflops (eval):  86.6269
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050002,86.6269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4269
  maximum absolute entry in einsum_ir solution: 37.4269
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140424
  time (eval):    0.0116292
  gflops (eval):  372.469
  gflops (total): 332.338
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140424,0.0116292,372.469,332.338

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508929
  gflops (total): 85.1104
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.1104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0508228
  gflops (eval):  85.2278
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0508228,85.2278,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.4227
  maximum absolute entry in einsum_ir solution: 34.4227
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140719
  time (eval):    0.0116262
  gflops (eval):  372.566
  gflops (total): 332.341
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140719,0.0116262,372.566,332.341

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506179
  gflops (total): 85.5728
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501547
  gflops (eval):  86.3631
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501547,86.3631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.837
  maximum absolute entry in einsum_ir solution: 33.837
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141059
  time (eval):    0.0116354
  gflops (eval):  372.27
  gflops (total): 332.018
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141059,0.0116354,372.27,332.018

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507909
  gflops (total): 85.2813
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0511022
  gflops (eval):  84.7619
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0511022,84.7619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.7868
  maximum absolute entry in einsum_ir solution: 34.7868
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141635
  time (eval):    0.0116356
  gflops (eval):  372.264
  gflops (total): 331.867
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141635,0.0116356,372.264,331.867

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498201
  gflops (total): 86.9432
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.9432

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496162
  gflops (eval):  87.3005
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496162,87.3005,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.742
  maximum absolute entry in einsum_ir solution: 33.742
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141574
  time (eval):    0.0116243
  gflops (eval):  372.627
  gflops (total): 332.171
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141574,0.0116243,372.627,332.171

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506511
  gflops (total): 85.5167
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498854
  gflops (eval):  86.8295
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498854,86.8295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0037
  maximum absolute entry in einsum_ir solution: 34.0037
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014549
  time (eval):    0.011645
  gflops (eval):  371.963
  gflops (total): 330.652
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014549,0.011645,371.963,330.652

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509227
  gflops (total): 85.0608
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050465
  gflops (eval):  85.8321
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050465,85.8321,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5483
  maximum absolute entry in einsum_ir solution: 33.5483
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141359
  time (eval):    0.0116388
  gflops (eval):  372.161
  gflops (total): 331.855
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141359,0.0116388,372.161,331.855

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0496581
  gflops (total): 87.2268
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,87.2268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495296
  gflops (eval):  87.4531
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495296,87.4531,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9499
  maximum absolute entry in einsum_ir solution: 34.9499
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141573
  time (eval):    0.0116504
  gflops (eval):  371.79
  gflops (total): 331.507
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141573,0.0116504,371.79,331.507

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507835
  gflops (total): 85.2938
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0506258
  gflops (eval):  85.5595
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0506258,85.5595,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.935
  maximum absolute entry in einsum_ir solution: 36.935
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141772
  time (eval):    0.0116411
  gflops (eval):  372.089
  gflops (total): 331.693
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141772,0.0116411,372.089,331.693

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505349
  gflops (total): 85.7135
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497331
  gflops (eval):  87.0953
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497331,87.0953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8999
  maximum absolute entry in einsum_ir solution: 33.8999
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014205
  time (eval):    0.0116477
  gflops (eval):  371.876
  gflops (total): 331.454
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014205,0.0116477,371.876,331.454

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510719
  gflops (total): 84.8121
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.8121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493418
  gflops (eval):  87.7859
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493418,87.7859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.6428
  maximum absolute entry in einsum_ir solution: 35.6428
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141415
  time (eval):    0.0116538
  gflops (eval):  371.682
  gflops (total): 331.46
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141415,0.0116538,371.682,331.46

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507216
  gflops (total): 85.3979
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3979

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502816
  gflops (eval):  86.1452
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502816,86.1452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.0502
  maximum absolute entry in einsum_ir solution: 33.0502
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00158855
  time (eval):    0.011612
  gflops (eval):  373.022
  gflops (total): 328.133
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00158855,0.011612,373.022,328.133

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502511
  gflops (total): 86.1976
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1976

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503129
  gflops (eval):  86.0916
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503129,86.0916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.675
  maximum absolute entry in einsum_ir solution: 34.675
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0013992
  time (eval):    0.0116284
  gflops (eval):  372.496
  gflops (total): 332.489
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0013992,0.0116284,372.496,332.489

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500404
  gflops (total): 86.5605
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5605

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491332
  gflops (eval):  88.1588
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491332,88.1588,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5817
  maximum absolute entry in einsum_ir solution: 33.5817
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141384
  time (eval):    0.0116285
  gflops (eval):  372.492
  gflops (total): 332.112
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141384,0.0116285,372.492,332.112

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507692
  gflops (total): 85.3179
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.3179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499953
  gflops (eval):  86.6385
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499953,86.6385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0844
  maximum absolute entry in einsum_ir solution: 34.0844
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00138821
  time (eval):    0.0116051
  gflops (eval):  373.241
  gflops (total): 333.364
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00138821,0.0116051,373.241,333.364

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.051045
  gflops (total): 84.8569
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.8569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0504699
  gflops (eval):  85.8239
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0504699,85.8239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.8658
  maximum absolute entry in einsum_ir solution: 34.8658
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140346
  time (eval):    0.0116372
  gflops (eval):  372.213
  gflops (total): 332.154
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140346,0.0116372,372.213,332.154

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502553
  gflops (total): 86.1903
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1903

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492634
  gflops (eval):  87.9258
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492634,87.9258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0015
  maximum absolute entry in einsum_ir solution: 35.0015
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141872
  time (eval):    0.0116113
  gflops (eval):  373.043
  gflops (total): 332.426
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141872,0.0116113,373.043,332.426

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500009
  gflops (total): 86.6288
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.6288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501549
  gflops (eval):  86.3629
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501549,86.3629,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9108
  maximum absolute entry in einsum_ir solution: 32.9108
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143071
  time (eval):    0.0116231
  gflops (eval):  372.665
  gflops (total): 331.82
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143071,0.0116231,372.665,331.82

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.051412
  gflops (total): 84.2511
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.2511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0491778
  gflops (eval):  88.0787
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0491778,88.0787,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.9255
  maximum absolute entry in einsum_ir solution: 34.9255
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143716
  time (eval):    0.0116608
  gflops (eval):  371.46
  gflops (total): 330.702
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143716,0.0116608,371.46,330.702

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503205
  gflops (total): 86.0786
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0786

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0507467
  gflops (eval):  85.3557
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0507467,85.3557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.0832
  maximum absolute entry in einsum_ir solution: 38.0832
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140838
  time (eval):    0.011647
  gflops (eval):  371.901
  gflops (total): 331.781
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140838,0.011647,371.901,331.781

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505323
  gflops (total): 85.7179
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498217
  gflops (eval):  86.9404
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498217,86.9404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.9336
  maximum absolute entry in einsum_ir solution: 36.9336
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141589
  time (eval):    0.0116537
  gflops (eval):  371.685
  gflops (total): 331.419
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141589,0.0116537,371.685,331.419

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502189
  gflops (total): 86.2528
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499591
  gflops (eval):  86.7014
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499591,86.7014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.4358
  maximum absolute entry in einsum_ir solution: 32.4358
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140756
  time (eval):    0.01165
  gflops (eval):  371.804
  gflops (total): 331.725
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140756,0.01165,371.804,331.725

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050587
  gflops (total): 85.6252
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050197
  gflops (eval):  86.2904
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050197,86.2904,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.19
  maximum absolute entry in einsum_ir solution: 35.19
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00147437
  time (eval):    0.0116414
  gflops (eval):  372.079
  gflops (total): 330.252
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00147437,0.0116414,372.079,330.252

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506051
  gflops (total): 85.5946
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499565
  gflops (eval):  86.7059
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499565,86.7059,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.5528
  maximum absolute entry in einsum_ir solution: 36.5528
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143044
  time (eval):    0.0116355
  gflops (eval):  372.268
  gflops (total): 331.513
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143044,0.0116355,372.268,331.513

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506634
  gflops (total): 85.4961
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4961

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498961
  gflops (eval):  86.8107
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498961,86.8107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1152
  maximum absolute entry in einsum_ir solution: 34.1152
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142619
  time (eval):    0.011652
  gflops (eval):  371.74
  gflops (total): 331.202
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142619,0.011652,371.74,331.202

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0514754
  gflops (total): 84.1474
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.1474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501675
  gflops (eval):  86.3412
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501675,86.3412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.6063
  maximum absolute entry in einsum_ir solution: 33.6063
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139008
  time (eval):    0.0116687
  gflops (eval):  371.21
  gflops (total): 331.695
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139008,0.0116687,371.21,331.695

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502805
  gflops (total): 86.1471
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.1471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501344
  gflops (eval):  86.3982
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501344,86.3982,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.2686
  maximum absolute entry in einsum_ir solution: 34.2686
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142031
  time (eval):    0.0116302
  gflops (eval):  372.437
  gflops (total): 331.904
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142031,0.0116302,372.437,331.904

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0512978
  gflops (total): 84.4387
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.4387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494515
  gflops (eval):  87.5914
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494515,87.5914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.5783
  maximum absolute entry in einsum_ir solution: 35.5783
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139452
  time (eval):    0.0116485
  gflops (eval):  371.851
  gflops (total): 332.094
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139452,0.0116485,371.851,332.094

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506652
  gflops (total): 85.4929
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496338
  gflops (eval):  87.2696
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496338,87.2696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.4538
  maximum absolute entry in einsum_ir solution: 33.4538
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142702
  time (eval):    0.0118414
  gflops (eval):  365.794
  gflops (total): 326.453
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142702,0.0118414,365.794,326.453

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502303
  gflops (total): 86.2332
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494131
  gflops (eval):  87.6594
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494131,87.6594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.5923
  maximum absolute entry in einsum_ir solution: 37.5923
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143325
  time (eval):    0.0116529
  gflops (eval):  371.713
  gflops (total): 331.002
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143325,0.0116529,371.713,331.002

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0499392
  gflops (total): 86.7358
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.7358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503956
  gflops (eval):  85.9504
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503956,85.9504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3707
  maximum absolute entry in einsum_ir solution: 34.3707
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0014551
  time (eval):    0.0116479
  gflops (eval):  371.873
  gflops (total): 330.576
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0014551,0.0116479,371.873,330.576

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504062
  gflops (total): 85.9323
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500629
  gflops (eval):  86.5215
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500629,86.5215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.8371
  maximum absolute entry in einsum_ir solution: 33.8371
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141861
  time (eval):    0.0116592
  gflops (eval):  371.51
  gflops (total): 331.211
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141861,0.0116592,371.51,331.211

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504137
  gflops (total): 85.9195
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9195

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492923
  gflops (eval):  87.8742
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492923,87.8742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.5888
  maximum absolute entry in einsum_ir solution: 38.5888
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139991
  time (eval):    0.0116369
  gflops (eval):  372.222
  gflops (total): 332.253
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139991,0.0116369,372.222,332.253

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502044
  gflops (total): 86.2778
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049265
  gflops (eval):  87.9228
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049265,87.9228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.4641
  maximum absolute entry in einsum_ir solution: 37.4641
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00138958
  time (eval):    0.0116192
  gflops (eval):  372.791
  gflops (total): 332.97
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00138958,0.0116192,372.791,332.97

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505464
  gflops (total): 85.6939
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503314
  gflops (eval):  86.06
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503314,86.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.4834
  maximum absolute entry in einsum_ir solution: 35.4834
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141279
  time (eval):    0.0116133
  gflops (eval):  372.98
  gflops (total): 332.527
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141279,0.0116133,372.98,332.527

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505349
  gflops (total): 85.7134
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497758
  gflops (eval):  87.0207
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497758,87.0207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1149
  maximum absolute entry in einsum_ir solution: 36.1149
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00191395
  time (eval):    0.0116344
  gflops (eval):  372.302
  gflops (total): 319.708
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00191395,0.0116344,372.302,319.708

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502222
  gflops (total): 86.2472
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494417
  gflops (eval):  87.6087
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494417,87.6087,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5928
  maximum absolute entry in einsum_ir solution: 34.5928
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141466
  time (eval):    0.0116235
  gflops (eval):  372.651
  gflops (total): 332.218
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141466,0.0116235,372.651,332.218

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0512757
  gflops (total): 84.4751
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.4751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0497865
  gflops (eval):  87.002
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0497865,87.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.178
  maximum absolute entry in einsum_ir solution: 38.178
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00151439
  time (eval):    0.0116441
  gflops (eval):  371.993
  gflops (total): 329.181
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00151439,0.0116441,371.993,329.181

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0497953
  gflops (total): 86.9865
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.9865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050307
  gflops (eval):  86.1018
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050307,86.1018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6044
  maximum absolute entry in einsum_ir solution: 34.6044
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144997
  time (eval):    0.0116352
  gflops (eval):  372.277
  gflops (total): 331.025
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144997,0.0116352,372.277,331.025

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501647
  gflops (total): 86.3459
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3459

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501428
  gflops (eval):  86.3836
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501428,86.3836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.3584
  maximum absolute entry in einsum_ir solution: 38.3584
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141702
  time (eval):    0.0116493
  gflops (eval):  371.826
  gflops (total): 331.502
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141702,0.0116493,371.826,331.502

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504184
  gflops (total): 85.9115
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501406
  gflops (eval):  86.3874
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501406,86.3874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2971
  maximum absolute entry in einsum_ir solution: 33.2971
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00160127
  time (eval):    0.011638
  gflops (eval):  372.187
  gflops (total): 327.172
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00160127,0.011638,372.187,327.172

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509804
  gflops (total): 84.9644
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.9644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500888
  gflops (eval):  86.4769
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500888,86.4769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.355
  maximum absolute entry in einsum_ir solution: 35.355
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141195
  time (eval):    0.0116372
  gflops (eval):  372.214
  gflops (total): 331.939
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141195,0.0116372,372.214,331.939

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504098
  gflops (total): 85.9262
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.9262

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496235
  gflops (eval):  87.2876
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496235,87.2876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.3363
  maximum absolute entry in einsum_ir solution: 35.3363
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142183
  time (eval):    0.0116264
  gflops (eval):  372.558
  gflops (total): 331.962
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142183,0.0116264,372.558,331.962

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0510783
  gflops (total): 84.8016
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,84.8016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500051
  gflops (eval):  86.6215
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500051,86.6215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.6022
  maximum absolute entry in einsum_ir solution: 32.6022
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142523
  time (eval):    0.0116331
  gflops (eval):  372.343
  gflops (total): 331.705
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142523,0.0116331,372.343,331.705

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505847
  gflops (total): 85.6291
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494921
  gflops (eval):  87.5195
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494921,87.5195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.5773
  maximum absolute entry in einsum_ir solution: 33.5773
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00155079
  time (eval):    0.0116261
  gflops (eval):  372.567
  gflops (total): 328.72
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00155079,0.0116261,372.567,328.72

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503333
  gflops (total): 86.0567
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494974
  gflops (eval):  87.51
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494974,87.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.9198
  maximum absolute entry in einsum_ir solution: 35.9198
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00156481
  time (eval):    0.0116266
  gflops (eval):  372.554
  gflops (total): 328.36
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00156481,0.0116266,372.554,328.36

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502409
  gflops (total): 86.2151
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495065
  gflops (eval):  87.494
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495065,87.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.0473
  maximum absolute entry in einsum_ir solution: 35.0473
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00142222
  time (eval):    0.011618
  gflops (eval):  372.83
  gflops (total): 332.167
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00142222,0.011618,372.83,332.167

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0500389
  gflops (total): 86.563
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0496151
  gflops (eval):  87.3024
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0496151,87.3024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.6536
  maximum absolute entry in einsum_ir solution: 34.6536
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143176
  time (eval):    0.0116485
  gflops (eval):  371.852
  gflops (total): 331.15
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143176,0.0116485,371.852,331.15

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050155
  gflops (total): 86.3627
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495961
  gflops (eval):  87.336
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495961,87.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1309
  maximum absolute entry in einsum_ir solution: 33.1309
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140279
  time (eval):    0.0116196
  gflops (eval):  372.778
  gflops (total): 332.622
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140279,0.0116196,372.778,332.622

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501809
  gflops (total): 86.3181
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0500117
  gflops (eval):  86.6102
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0500117,86.6102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      32.9598
  maximum absolute entry in einsum_ir solution: 32.9598
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140739
  time (eval):    0.0116652
  gflops (eval):  371.318
  gflops (total): 331.343
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140739,0.0116652,371.318,331.343

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501438
  gflops (total): 86.3819
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049421
  gflops (eval):  87.6454
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049421,87.6454,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1699
  maximum absolute entry in einsum_ir solution: 34.1699
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141485
  time (eval):    0.0116241
  gflops (eval):  372.633
  gflops (total): 332.199
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141485,0.0116241,372.633,332.199

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502496
  gflops (total): 86.2
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501041
  gflops (eval):  86.4504
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501041,86.4504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.2619
  maximum absolute entry in einsum_ir solution: 33.2619
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140989
  time (eval):    0.0116249
  gflops (eval):  372.608
  gflops (total): 332.305
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140989,0.0116249,372.608,332.305

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505499
  gflops (total): 85.6881
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494729
  gflops (eval):  87.5534
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494729,87.5534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.3379
  maximum absolute entry in einsum_ir solution: 34.3379
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140422
  time (eval):    0.011622
  gflops (eval):  372.699
  gflops (total): 332.522
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140422,0.011622,372.699,332.522

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0507976
  gflops (total): 85.2702
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.2702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503496
  gflops (eval):  86.0289
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503496,86.0289,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.9501
  maximum absolute entry in einsum_ir solution: 33.9501
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141598
  time (eval):    0.011614
  gflops (eval):  372.956
  gflops (total): 332.427
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141598,0.011614,372.956,332.427

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0502335
  gflops (total): 86.2276
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.2276

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0502034
  gflops (eval):  86.2794
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0502034,86.2794,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      38.636
  maximum absolute entry in einsum_ir solution: 38.636
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141338
  time (eval):    0.011631
  gflops (eval):  372.411
  gflops (total): 332.06
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141338,0.011631,372.411,332.06

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504326
  gflops (total): 85.8872
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.050381
  gflops (eval):  85.9752
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.050381,85.9752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1202
  maximum absolute entry in einsum_ir solution: 36.1202
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141962
  time (eval):    0.0116071
  gflops (eval):  373.18
  gflops (total): 332.511
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141962,0.0116071,373.18,332.511

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503405
  gflops (total): 86.0444
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.049434
  gflops (eval):  87.6223
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.049434,87.6223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.5396
  maximum absolute entry in einsum_ir solution: 34.5396
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141482
  time (eval):    0.0116293
  gflops (eval):  372.466
  gflops (total): 332.067
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141482,0.0116293,372.466,332.067

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.050054
  gflops (total): 86.5369
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.5369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494732
  gflops (eval):  87.5529
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494732,87.5529,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.37
  maximum absolute entry in einsum_ir solution: 34.37
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00145884
  time (eval):    0.0116264
  gflops (eval):  372.559
  gflops (total): 331.023
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00145884,0.0116264,372.559,331.023

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504779
  gflops (total): 85.8103
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.8103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0493359
  gflops (eval):  87.7965
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0493359,87.7965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.1957
  maximum absolute entry in einsum_ir solution: 36.1957
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140514
  time (eval):    0.0116421
  gflops (eval):  372.058
  gflops (total): 331.988
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140514,0.0116421,372.058,331.988

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506471
  gflops (total): 85.5236
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499107
  gflops (eval):  86.7853
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499107,86.7853,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1762
  maximum absolute entry in einsum_ir solution: 34.1762
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141493
  time (eval):    0.0116099
  gflops (eval):  373.087
  gflops (total): 332.558
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141493,0.0116099,373.087,332.558

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0509137
  gflops (total): 85.0757
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.0757

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0499705
  gflops (eval):  86.6815
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0499705,86.6815,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0971
  maximum absolute entry in einsum_ir solution: 34.0971
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140272
  time (eval):    0.0116316
  gflops (eval):  372.391
  gflops (total): 332.316
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140272,0.0116316,372.391,332.316

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506357
  gflops (total): 85.5428
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.5428

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494851
  gflops (eval):  87.5319
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494851,87.5319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      33.1514
  maximum absolute entry in einsum_ir solution: 33.1514
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00141837
  time (eval):    0.0116242
  gflops (eval):  372.628
  gflops (total): 332.105
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00141837,0.0116242,372.628,332.105

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0498531
  gflops (total): 86.8857
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.8857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498747
  gflops (eval):  86.848
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498747,86.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.1261
  maximum absolute entry in einsum_ir solution: 34.1261
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00148701
  time (eval):    0.0116061
  gflops (eval):  373.21
  gflops (total): 330.824
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00148701,0.0116061,373.21,330.824

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0506734
  gflops (total): 85.4792
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.4792

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0494936
  gflops (eval):  87.5167
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0494936,87.5167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      36.7976
  maximum absolute entry in einsum_ir solution: 36.7976
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00143904
  time (eval):    0.0116338
  gflops (eval):  372.323
  gflops (total): 331.338
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00143904,0.0116338,372.323,331.338

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0504999
  gflops (total): 85.7729
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.7729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0492515
  gflops (eval):  87.9469
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0492515,87.9469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      37.1817
  maximum absolute entry in einsum_ir solution: 37.1817
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00139924
  time (eval):    0.0116369
  gflops (eval):  372.223
  gflops (total): 332.27
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00139924,0.0116369,372.223,332.27

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0508842
  gflops (total): 85.125
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0503357
  gflops (eval):  86.0526
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0503357,86.0526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.7104
  maximum absolute entry in einsum_ir solution: 35.7104
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00140338
  time (eval):    0.0116083
  gflops (eval):  373.14
  gflops (total): 332.895
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00140338,0.0116083,373.14,332.895

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0503534
  gflops (total): 86.0224
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.0224

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0495735
  gflops (eval):  87.3757
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0495735,87.3757,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      34.0335
  maximum absolute entry in einsum_ir solution: 34.0335
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.0017061
  time (eval):    0.0116744
  gflops (eval):  371.026
  gflops (total): 323.718
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.0017061,0.0116744,371.026,323.718

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0505922
  gflops (total): 85.6163
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,85.6163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0501609
  gflops (eval):  86.3525
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0501609,86.3525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.588
  maximum absolute entry in einsum_ir solution: 35.588
  maximum element-wise difference:              0
parsed tensors:
  d,e,g,c
  g,f,a,b
  a,b,c,d,e,f
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
  g: 6
parsed dimension sizes:
  a: 24
  b: 20
  c: 20
  d: 24
  e: 20
  f: 20
  g: 24
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 6 
  string_dim_ids: 3 4 6 2 6 5 0 1 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[6,5,0,1]->[0,1,6,5]],[[3,4,6,2]->[2,3,4,6]]->[0,1,2,3,4,5]
  #flops:         4331520000
  time (compile): 0.00144425
  time (eval):    0.0116373
  gflops (eval):  372.21
  gflops (total): 331.116
CSV_DATA: einsum_ir,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0.00144425,0.0116373,372.21,331.116

*** benchmarking at::einsum ***
  #flops:         4331520000
  time (total):   0.0501417
  gflops (total): 86.3856
CSV_DATA: at::einsum,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0,0,86.3856

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 9600 9600 24
  #flops:         4331520000
  time (eval):    0.0498919
  gflops (eval):  86.8181
CSV_DATA: at::matmul,"degc,gfab->abcdef","24,20,20,24,20,20,24","(0,1)",4331520000,0,0.0498919,86.8181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      35.1941
  maximum absolute entry in einsum_ir solution: 35.1941
  maximum element-wise difference:              0
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140022
  time (eval):    0.0168804
  gflops (eval):  157.45
  gflops (total): 145.39
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140022,0.0168804,157.45,145.39

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112807
  gflops (total): 23.5608
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273327
  gflops (eval):  97.2398
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273327,97.2398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.843
  maximum absolute entry in einsum_ir solution: 106.843
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138499
  time (eval):    0.0168503
  gflops (eval):  157.731
  gflops (total): 145.752
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138499,0.0168503,157.731,145.752

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.114111
  gflops (total): 23.2916
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.2916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272097
  gflops (eval):  97.6791
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272097,97.6791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.895
  maximum absolute entry in einsum_ir solution: 101.895
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.001386
  time (eval):    0.017038
  gflops (eval):  155.994
  gflops (total): 144.259
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.001386,0.017038,155.994,144.259

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113235
  gflops (total): 23.4716
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027211
  gflops (eval):  97.6746
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027211,97.6746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.497
  maximum absolute entry in einsum_ir solution: 100.497
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137916
  time (eval):    0.0166992
  gflops (eval):  159.158
  gflops (total): 147.016
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137916,0.0166992,159.158,147.016

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112956
  gflops (total): 23.5298
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5298

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271859
  gflops (eval):  97.7648
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271859,97.7648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.336
  maximum absolute entry in einsum_ir solution: 107.336
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138721
  time (eval):    0.0168115
  gflops (eval):  158.095
  gflops (total): 146.044
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138721,0.0168115,158.095,146.044

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112874
  gflops (total): 23.5468
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274458
  gflops (eval):  96.8389
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274458,96.8389,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.613
  maximum absolute entry in einsum_ir solution: 106.613
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013844
  time (eval):    0.016884
  gflops (eval):  157.417
  gflops (total): 145.488
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013844,0.016884,157.417,145.488

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113431
  gflops (total): 23.4311
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273183
  gflops (eval):  97.2909
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273183,97.2909,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.028
  maximum absolute entry in einsum_ir solution: 105.028
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139452
  time (eval):    0.0167277
  gflops (eval):  158.887
  gflops (total): 146.661
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139452,0.0167277,158.887,146.661

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113206
  gflops (total): 23.4778
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271445
  gflops (eval):  97.9137
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271445,97.9137,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.393
  maximum absolute entry in einsum_ir solution: 107.393
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00167484
  time (eval):    0.0168664
  gflops (eval):  157.581
  gflops (total): 143.347
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00167484,0.0168664,157.581,143.347

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113428
  gflops (total): 23.4317
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274894
  gflops (eval):  96.6854
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274894,96.6854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.5999
  maximum absolute entry in einsum_ir solution: 98.5999
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138836
  time (eval):    0.0169884
  gflops (eval):  156.449
  gflops (total): 144.63
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138836,0.0169884,156.449,144.63

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111941
  gflops (total): 23.7431
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273872
  gflops (eval):  97.0463
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273872,97.0463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.023
  maximum absolute entry in einsum_ir solution: 116.023
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138075
  time (eval):    0.0168124
  gflops (eval):  158.087
  gflops (total): 146.089
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138075,0.0168124,158.087,146.089

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11294
  gflops (total): 23.5331
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275038
  gflops (eval):  96.6346
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275038,96.6346,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.528
  maximum absolute entry in einsum_ir solution: 102.528
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139081
  time (eval):    0.0166565
  gflops (eval):  159.566
  gflops (total): 147.27
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139081,0.0166565,159.566,147.27

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.114374
  gflops (total): 23.238
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274236
  gflops (eval):  96.9174
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274236,96.9174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.869
  maximum absolute entry in einsum_ir solution: 110.869
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00193429
  time (eval):    0.0169179
  gflops (eval):  157.102
  gflops (total): 140.982
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00193429,0.0169179,157.102,140.982

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112765
  gflops (total): 23.5695
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273636
  gflops (eval):  97.13
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273636,97.13,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.396
  maximum absolute entry in einsum_ir solution: 102.396
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139411
  time (eval):    0.0170302
  gflops (eval):  156.065
  gflops (total): 144.256
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139411,0.0170302,156.065,144.256

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113481
  gflops (total): 23.4208
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4208

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272107
  gflops (eval):  97.6755
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272107,97.6755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.049
  maximum absolute entry in einsum_ir solution: 100.049
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138215
  time (eval):    0.0168348
  gflops (eval):  157.877
  gflops (total): 145.898
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138215,0.0168348,157.877,145.898

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112265
  gflops (total): 23.6746
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6746

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271344
  gflops (eval):  97.9503
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271344,97.9503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.917
  maximum absolute entry in einsum_ir solution: 104.917
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137424
  time (eval):    0.0169102
  gflops (eval):  157.173
  gflops (total): 145.36
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137424,0.0169102,157.173,145.36

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113369
  gflops (total): 23.4439
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272899
  gflops (eval):  97.392
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272899,97.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.818
  maximum absolute entry in einsum_ir solution: 101.818
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138407
  time (eval):    0.016763
  gflops (eval):  158.553
  gflops (total): 146.46
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138407,0.016763,158.553,146.46

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113142
  gflops (total): 23.4911
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027391
  gflops (eval):  97.0327
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027391,97.0327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      94.0656
  maximum absolute entry in einsum_ir solution: 94.0656
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00154749
  time (eval):    0.0169017
  gflops (eval):  157.252
  gflops (total): 144.062
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00154749,0.0169017,157.252,144.062

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.114087
  gflops (total): 23.2965
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.2965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0269773
  gflops (eval):  98.5207
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0269773,98.5207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.524
  maximum absolute entry in einsum_ir solution: 99.524
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00183103
  time (eval):    0.0167711
  gflops (eval):  158.477
  gflops (total): 142.878
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00183103,0.0167711,158.477,142.878

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113451
  gflops (total): 23.4269
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272995
  gflops (eval):  97.3579
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272995,97.3579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.857
  maximum absolute entry in einsum_ir solution: 111.857
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139795
  time (eval):    0.0169438
  gflops (eval):  156.861
  gflops (total): 144.905
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139795,0.0169438,156.861,144.905

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113093
  gflops (total): 23.5012
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275241
  gflops (eval):  96.5633
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275241,96.5633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.027
  maximum absolute entry in einsum_ir solution: 103.027
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013903
  time (eval):    0.0169792
  gflops (eval):  156.534
  gflops (total): 144.687
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013903,0.0169792,156.534,144.687

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113514
  gflops (total): 23.414
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272635
  gflops (eval):  97.4865
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272635,97.4865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.666
  maximum absolute entry in einsum_ir solution: 101.666
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.001438
  time (eval):    0.0167964
  gflops (eval):  158.237
  gflops (total): 145.758
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.001438,0.0167964,158.237,145.758

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112739
  gflops (total): 23.5751
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027466
  gflops (eval):  96.7675
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027466,96.7675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.011
  maximum absolute entry in einsum_ir solution: 109.011
  maximum element-wise difference:              4.86374e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137977
  time (eval):    0.01682
  gflops (eval):  158.015
  gflops (total): 146.036
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137977,0.01682,158.015,146.036

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113259
  gflops (total): 23.4668
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4668

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272215
  gflops (eval):  97.6367
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272215,97.6367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.7498
  maximum absolute entry in einsum_ir solution: 95.7498
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138236
  time (eval):    0.0168693
  gflops (eval):  157.554
  gflops (total): 145.621
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138236,0.0168693,157.554,145.621

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112988
  gflops (total): 23.523
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273603
  gflops (eval):  97.1414
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273603,97.1414,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.245
  maximum absolute entry in einsum_ir solution: 105.245
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013852
  time (eval):    0.0168135
  gflops (eval):  158.076
  gflops (total): 146.044
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013852,0.0168135,158.076,146.044

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112175
  gflops (total): 23.6934
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271653
  gflops (eval):  97.8387
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271653,97.8387,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.942
  maximum absolute entry in einsum_ir solution: 111.942
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013949
  time (eval):    0.0170226
  gflops (eval):  156.135
  gflops (total): 144.309
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013949,0.0170226,156.135,144.309

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113688
  gflops (total): 23.3781
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.3781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275121
  gflops (eval):  96.6054
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275121,96.6054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.1281
  maximum absolute entry in einsum_ir solution: 99.1281
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137189
  time (eval):    0.0167876
  gflops (eval):  158.32
  gflops (total): 146.36
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137189,0.0167876,158.32,146.36

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113607
  gflops (total): 23.3949
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.3949

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273373
  gflops (eval):  97.2231
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273373,97.2231,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.668
  maximum absolute entry in einsum_ir solution: 108.668
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138964
  time (eval):    0.0169514
  gflops (eval):  156.791
  gflops (total): 144.911
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138964,0.0169514,156.791,144.911

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.114615
  gflops (total): 23.1891
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.1891

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276397
  gflops (eval):  96.1594
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276397,96.1594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.362
  maximum absolute entry in einsum_ir solution: 103.362
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137087
  time (eval):    0.016871
  gflops (eval):  157.538
  gflops (total): 145.699
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137087,0.016871,157.538,145.699

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112822
  gflops (total): 23.5577
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273211
  gflops (eval):  97.281
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273211,97.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.42
  maximum absolute entry in einsum_ir solution: 102.42
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139594
  time (eval):    0.0168389
  gflops (eval):  157.838
  gflops (total): 145.755
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139594,0.0168389,157.838,145.755

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112844
  gflops (total): 23.5531
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272665
  gflops (eval):  97.4758
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272665,97.4758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.308
  maximum absolute entry in einsum_ir solution: 121.308
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013812
  time (eval):    0.0170447
  gflops (eval):  155.933
  gflops (total): 144.244
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013812,0.0170447,155.933,144.244

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113055
  gflops (total): 23.509
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272458
  gflops (eval):  97.5497
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272458,97.5497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.784
  maximum absolute entry in einsum_ir solution: 105.784
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139846
  time (eval):    0.0167548
  gflops (eval):  158.631
  gflops (total): 146.41
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139846,0.0167548,158.631,146.41

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113084
  gflops (total): 23.503
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272901
  gflops (eval):  97.3914
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272901,97.3914,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.948
  maximum absolute entry in einsum_ir solution: 104.948
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013907
  time (eval):    0.0169455
  gflops (eval):  156.846
  gflops (total): 144.95
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013907,0.0169455,156.846,144.95

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113894
  gflops (total): 23.336
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271515
  gflops (eval):  97.8887
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271515,97.8887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.092
  maximum absolute entry in einsum_ir solution: 101.092
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00155793
  time (eval):    0.0168006
  gflops (eval):  158.198
  gflops (total): 144.773
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00155793,0.0168006,158.198,144.773

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113631
  gflops (total): 23.3899
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.3899

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273626
  gflops (eval):  97.1334
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273626,97.1334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.578
  maximum absolute entry in einsum_ir solution: 100.578
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140043
  time (eval):    0.0169932
  gflops (eval):  156.405
  gflops (total): 144.497
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140043,0.0169932,156.405,144.497

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.1131
  gflops (total): 23.4998
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275607
  gflops (eval):  96.4351
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275607,96.4351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.5408
  maximum absolute entry in einsum_ir solution: 97.5408
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138078
  time (eval):    0.0168135
  gflops (eval):  158.076
  gflops (total): 146.08
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138078,0.0168135,158.076,146.08

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113485
  gflops (total): 23.42
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.42

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0277569
  gflops (eval):  95.7534
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0277569,95.7534,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      93.3783
  maximum absolute entry in einsum_ir solution: 93.3783
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145354
  time (eval):    0.0169131
  gflops (eval):  157.146
  gflops (total): 144.709
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145354,0.0169131,157.146,144.709

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.1128
  gflops (total): 23.5622
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5622

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273287
  gflops (eval):  97.254
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273287,97.254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.063
  maximum absolute entry in einsum_ir solution: 109.063
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00141887
  time (eval):    0.0170284
  gflops (eval):  156.082
  gflops (total): 144.077
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00141887,0.0170284,156.082,144.077

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111862
  gflops (total): 23.7598
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.7598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273894
  gflops (eval):  97.0382
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273894,97.0382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.499
  maximum absolute entry in einsum_ir solution: 98.499
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00144438
  time (eval):    0.0169048
  gflops (eval):  157.222
  gflops (total): 144.846
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00144438,0.0169048,157.222,144.846

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112877
  gflops (total): 23.5463
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273868
  gflops (eval):  97.0476
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273868,97.0476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.031
  maximum absolute entry in einsum_ir solution: 117.031
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139503
  time (eval):    0.0168699
  gflops (eval):  157.548
  gflops (total): 145.515
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139503,0.0168699,157.548,145.515

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112276
  gflops (total): 23.6723
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271573
  gflops (eval):  97.8676
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271573,97.8676,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.087
  maximum absolute entry in einsum_ir solution: 110.087
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138407
  time (eval):    0.0170163
  gflops (eval):  156.192
  gflops (total): 144.444
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138407,0.0170163,156.192,144.444

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112862
  gflops (total): 23.5494
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5494

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276213
  gflops (eval):  96.2235
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276213,96.2235,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.096
  maximum absolute entry in einsum_ir solution: 107.096
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00146602
  time (eval):    0.0168425
  gflops (eval):  157.804
  gflops (total): 145.169
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00146602,0.0168425,157.804,145.169

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112948
  gflops (total): 23.5314
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0264255
  gflops (eval):  100.578
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0264255,100.578,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.679
  maximum absolute entry in einsum_ir solution: 104.679
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138964
  time (eval):    0.0168703
  gflops (eval):  157.545
  gflops (total): 145.555
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138964,0.0168703,157.545,145.555

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113611
  gflops (total): 23.394
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274873
  gflops (eval):  96.6926
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274873,96.6926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.964
  maximum absolute entry in einsum_ir solution: 102.964
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137955
  time (eval):    0.0170141
  gflops (eval):  156.213
  gflops (total): 144.497
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137955,0.0170141,156.213,144.497

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11331
  gflops (total): 23.4562
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272721
  gflops (eval):  97.4556
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272721,97.4556,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.842
  maximum absolute entry in einsum_ir solution: 99.842
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00164133
  time (eval):    0.0168827
  gflops (eval):  157.429
  gflops (total): 143.48
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00164133,0.0168827,157.429,143.48

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113644
  gflops (total): 23.3872
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.3872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273245
  gflops (eval):  97.2688
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273245,97.2688,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.1
  maximum absolute entry in einsum_ir solution: 113.1
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137693
  time (eval):    0.016876
  gflops (eval):  157.491
  gflops (total): 145.61
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137693,0.016876,157.491,145.61

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112682
  gflops (total): 23.5869
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271409
  gflops (eval):  97.9269
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271409,97.9269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.214
  maximum absolute entry in einsum_ir solution: 103.214
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00168633
  time (eval):    0.0167769
  gflops (eval):  158.422
  gflops (total): 143.952
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00168633,0.0167769,158.422,143.952

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112877
  gflops (total): 23.5461
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273921
  gflops (eval):  97.0286
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273921,97.0286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.833
  maximum absolute entry in einsum_ir solution: 106.833
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013812
  time (eval):    0.0168549
  gflops (eval):  157.689
  gflops (total): 145.745
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013812,0.0168549,157.689,145.745

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113373
  gflops (total): 23.4431
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275268
  gflops (eval):  96.554
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275268,96.554,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.22
  maximum absolute entry in einsum_ir solution: 110.22
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140231
  time (eval):    0.0169547
  gflops (eval):  156.76
  gflops (total): 144.785
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140231,0.0169547,156.76,144.785

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113243
  gflops (total): 23.4701
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273829
  gflops (eval):  97.0613
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273829,97.0613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.848
  maximum absolute entry in einsum_ir solution: 101.848
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137781
  time (eval):    0.0167785
  gflops (eval):  158.407
  gflops (total): 146.386
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137781,0.0167785,158.407,146.386

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113205
  gflops (total): 23.4778
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0270897
  gflops (eval):  98.1117
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0270897,98.1117,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.383
  maximum absolute entry in einsum_ir solution: 101.383
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137854
  time (eval):    0.0169564
  gflops (eval):  156.744
  gflops (total): 144.959
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137854,0.0169564,156.744,144.959

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112726
  gflops (total): 23.5778
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274028
  gflops (eval):  96.9908
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274028,96.9908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.3254
  maximum absolute entry in einsum_ir solution: 98.3254
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00149476
  time (eval):    0.0167815
  gflops (eval):  158.378
  gflops (total): 145.425
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00149476,0.0167815,158.378,145.425

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11338
  gflops (total): 23.4418
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4418

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275393
  gflops (eval):  96.51
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275393,96.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.342
  maximum absolute entry in einsum_ir solution: 103.342
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139363
  time (eval):    0.0170381
  gflops (eval):  155.993
  gflops (total): 144.198
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139363,0.0170381,155.993,144.198

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11359
  gflops (total): 23.3983
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.3983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273622
  gflops (eval):  97.1349
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273622,97.1349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.136
  maximum absolute entry in einsum_ir solution: 106.136
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0017155
  time (eval):    0.0167428
  gflops (eval):  158.744
  gflops (total): 143.991
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0017155,0.0167428,158.744,143.991

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112922
  gflops (total): 23.5368
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027068
  gflops (eval):  98.1906
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027068,98.1906,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.683
  maximum absolute entry in einsum_ir solution: 111.683
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139276
  time (eval):    0.0167954
  gflops (eval):  158.247
  gflops (total): 146.13
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139276,0.0167954,158.247,146.13

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112757
  gflops (total): 23.5711
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027624
  gflops (eval):  96.2143
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027624,96.2143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      97.8043
  maximum absolute entry in einsum_ir solution: 97.8043
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013867
  time (eval):    0.0169626
  gflops (eval):  156.687
  gflops (total): 144.846
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013867,0.0169626,156.687,144.846

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113316
  gflops (total): 23.4549
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272687
  gflops (eval):  97.4677
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272687,97.4677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.905
  maximum absolute entry in einsum_ir solution: 100.905
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143353
  time (eval):    0.0169161
  gflops (eval):  157.117
  gflops (total): 144.843
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143353,0.0169161,157.117,144.843

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112276
  gflops (total): 23.6722
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276341
  gflops (eval):  96.179
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276341,96.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.0405
  maximum absolute entry in einsum_ir solution: 98.0405
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137341
  time (eval):    0.0168055
  gflops (eval):  158.152
  gflops (total): 146.203
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137341,0.0168055,158.152,146.203

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113336
  gflops (total): 23.4508
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0266228
  gflops (eval):  99.8324
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0266228,99.8324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.531
  maximum absolute entry in einsum_ir solution: 104.531
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00157058
  time (eval):    0.0169726
  gflops (eval):  156.595
  gflops (total): 143.331
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00157058,0.0169726,156.595,143.331

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113048
  gflops (total): 23.5105
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274894
  gflops (eval):  96.6854
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274894,96.6854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.427
  maximum absolute entry in einsum_ir solution: 107.427
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00164167
  time (eval):    0.0168171
  gflops (eval):  158.043
  gflops (total): 143.987
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00164167,0.0168171,158.043,143.987

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11318
  gflops (total): 23.4831
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272431
  gflops (eval):  97.5593
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272431,97.5593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.31
  maximum absolute entry in einsum_ir solution: 104.31
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139657
  time (eval):    0.0170437
  gflops (eval):  155.942
  gflops (total): 144.132
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139657,0.0170437,155.942,144.132

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112505
  gflops (total): 23.6239
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027272
  gflops (eval):  97.456
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027272,97.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.879
  maximum absolute entry in einsum_ir solution: 102.879
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138742
  time (eval):    0.0170354
  gflops (eval):  156.017
  gflops (total): 144.268
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138742,0.0170354,156.017,144.268

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113047
  gflops (total): 23.5107
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273965
  gflops (eval):  97.013
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273965,97.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.805
  maximum absolute entry in einsum_ir solution: 106.805
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138105
  time (eval):    0.016979
  gflops (eval):  156.536
  gflops (total): 144.761
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138105,0.016979,156.536,144.761

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11235
  gflops (total): 23.6565
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6565

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273617
  gflops (eval):  97.1366
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273617,97.1366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.289
  maximum absolute entry in einsum_ir solution: 102.289
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145456
  time (eval):    0.0169191
  gflops (eval):  157.09
  gflops (total): 144.654
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145456,0.0169191,157.09,144.654

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113388
  gflops (total): 23.4401
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4401

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273156
  gflops (eval):  97.3004
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273156,97.3004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.029
  maximum absolute entry in einsum_ir solution: 103.029
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00143615
  time (eval):    0.0167975
  gflops (eval):  158.227
  gflops (total): 145.765
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00143615,0.0167975,158.227,145.765

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112796
  gflops (total): 23.5632
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271561
  gflops (eval):  97.8718
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271561,97.8718,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.276
  maximum absolute entry in einsum_ir solution: 106.276
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139051
  time (eval):    0.0169632
  gflops (eval):  156.682
  gflops (total): 144.811
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139051,0.0169632,156.682,144.811

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113062
  gflops (total): 23.5077
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274338
  gflops (eval):  96.8811
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274338,96.8811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.846
  maximum absolute entry in einsum_ir solution: 108.846
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140409
  time (eval):    0.0168499
  gflops (eval):  157.735
  gflops (total): 145.602
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140409,0.0168499,157.735,145.602

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113279
  gflops (total): 23.4627
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275373
  gflops (eval):  96.5171
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275373,96.5171,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      95.6599
  maximum absolute entry in einsum_ir solution: 95.6599
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138427
  time (eval):    0.0169385
  gflops (eval):  156.91
  gflops (total): 145.056
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138427,0.0169385,156.91,145.056

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113295
  gflops (total): 23.4593
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271646
  gflops (eval):  97.8413
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271646,97.8413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      101.97
  maximum absolute entry in einsum_ir solution: 101.97
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139439
  time (eval):    0.0169413
  gflops (eval):  156.884
  gflops (total): 144.953
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139439,0.0169413,156.884,144.953

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112564
  gflops (total): 23.6116
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274047
  gflops (eval):  96.9842
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274047,96.9842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.713
  maximum absolute entry in einsum_ir solution: 103.713
  maximum element-wise difference:              5.91278e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138756
  time (eval):    0.0167524
  gflops (eval):  158.653
  gflops (total): 146.517
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138756,0.0167524,158.653,146.517

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.114396
  gflops (total): 23.2334
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.2334

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274964
  gflops (eval):  96.6605
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274964,96.6605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.602
  maximum absolute entry in einsum_ir solution: 105.602
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138447
  time (eval):    0.016967
  gflops (eval):  156.647
  gflops (total): 144.829
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138447,0.016967,156.647,144.829

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113019
  gflops (total): 23.5167
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5167

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273742
  gflops (eval):  97.0922
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273742,97.0922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.674
  maximum absolute entry in einsum_ir solution: 112.674
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00148199
  time (eval):    0.0169674
  gflops (eval):  156.643
  gflops (total): 144.06
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00148199,0.0169674,156.643,144.06

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112917
  gflops (total): 23.5379
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274826
  gflops (eval):  96.7092
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274826,96.7092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.932
  maximum absolute entry in einsum_ir solution: 99.932
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139322
  time (eval):    0.01704
  gflops (eval):  155.976
  gflops (total): 144.187
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139322,0.01704,155.976,144.187

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112937
  gflops (total): 23.5336
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5336

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027449
  gflops (eval):  96.8277
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027449,96.8277,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.818
  maximum absolute entry in einsum_ir solution: 100.818
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137949
  time (eval):    0.0168466
  gflops (eval):  157.766
  gflops (total): 145.825
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137949,0.0168466,157.766,145.825

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113204
  gflops (total): 23.4781
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272536
  gflops (eval):  97.5218
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272536,97.5218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.704
  maximum absolute entry in einsum_ir solution: 104.704
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013791
  time (eval):    0.01694
  gflops (eval):  156.896
  gflops (total): 145.085
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013791,0.01694,156.896,145.085

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113026
  gflops (total): 23.5152
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272892
  gflops (eval):  97.3945
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272892,97.3945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.05
  maximum absolute entry in einsum_ir solution: 103.05
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137273
  time (eval):    0.0170037
  gflops (eval):  156.308
  gflops (total): 144.632
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137273,0.0170037,156.308,144.632

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112748
  gflops (total): 23.573
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274262
  gflops (eval):  96.9079
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274262,96.9079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      102.546
  maximum absolute entry in einsum_ir solution: 102.546
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00150488
  time (eval):    0.017012
  gflops (eval):  156.233
  gflops (total): 143.535
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00150488,0.017012,156.233,143.535

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113873
  gflops (total): 23.3402
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.3402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275308
  gflops (eval):  96.54
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275308,96.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.262
  maximum absolute entry in einsum_ir solution: 107.262
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138975
  time (eval):    0.016835
  gflops (eval):  157.874
  gflops (total): 145.835
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138975,0.016835,157.874,145.835

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113425
  gflops (total): 23.4324
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027248
  gflops (eval):  97.5418
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027248,97.5418,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.997
  maximum absolute entry in einsum_ir solution: 110.997
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013832
  time (eval):    0.01688
  gflops (eval):  157.454
  gflops (total): 145.529
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013832,0.01688,157.454,145.529

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112986
  gflops (total): 23.5234
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274566
  gflops (eval):  96.8008
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274566,96.8008,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.2176
  maximum absolute entry in einsum_ir solution: 99.2176
  maximum element-wise difference:              6.48499e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00142403
  time (eval):    0.0169559
  gflops (eval):  156.749
  gflops (total): 144.604
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00142403,0.0169559,156.749,144.604

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112872
  gflops (total): 23.5472
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272649
  gflops (eval):  97.4816
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272649,97.4816,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.421
  maximum absolute entry in einsum_ir solution: 103.421
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138144
  time (eval):    0.0168729
  gflops (eval):  157.52
  gflops (total): 145.599
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138144,0.0168729,157.52,145.599

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.111814
  gflops (total): 23.77
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.77

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274615
  gflops (eval):  96.7834
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274615,96.7834,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.445
  maximum absolute entry in einsum_ir solution: 105.445
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137784
  time (eval):    0.0167579
  gflops (eval):  158.601
  gflops (total): 146.552
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137784,0.0167579,158.601,146.552

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11332
  gflops (total): 23.454
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275632
  gflops (eval):  96.4266
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275632,96.4266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.625
  maximum absolute entry in einsum_ir solution: 114.625
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138004
  time (eval):    0.0169143
  gflops (eval):  157.134
  gflops (total): 145.281
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138004,0.0169143,157.134,145.281

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112681
  gflops (total): 23.5872
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5872

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272911
  gflops (eval):  97.3878
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272911,97.3878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.087
  maximum absolute entry in einsum_ir solution: 106.087
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138502
  time (eval):    0.017003
  gflops (eval):  156.315
  gflops (total): 144.541
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138502,0.017003,156.315,144.541

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113516
  gflops (total): 23.4136
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272439
  gflops (eval):  97.5564
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272439,97.5564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.887
  maximum absolute entry in einsum_ir solution: 100.887
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137967
  time (eval):    0.0168838
  gflops (eval):  157.419
  gflops (total): 145.527
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137967,0.0168838,157.419,145.527

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112895
  gflops (total): 23.5424
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275187
  gflops (eval):  96.5822
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275187,96.5822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.3061
  maximum absolute entry in einsum_ir solution: 99.3061
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00137958
  time (eval):    0.016963
  gflops (eval):  156.683
  gflops (total): 144.899
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00137958,0.016963,156.683,144.899

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112486
  gflops (total): 23.6281
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6281

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272995
  gflops (eval):  97.358
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272995,97.358,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.667
  maximum absolute entry in einsum_ir solution: 103.667
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013826
  time (eval):    0.0169394
  gflops (eval):  156.902
  gflops (total): 145.062
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013826,0.0169394,156.902,145.062

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112798
  gflops (total): 23.5627
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5627

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0263846
  gflops (eval):  100.734
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0263846,100.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.362
  maximum absolute entry in einsum_ir solution: 103.362
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00181232
  time (eval):    0.0168627
  gflops (eval):  157.615
  gflops (total): 142.319
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00181232,0.0168627,157.615,142.319

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113374
  gflops (total): 23.4429
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272557
  gflops (eval):  97.5141
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272557,97.5141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.759
  maximum absolute entry in einsum_ir solution: 100.759
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013825
  time (eval):    0.016922
  gflops (eval):  157.063
  gflops (total): 145.201
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013825,0.016922,157.063,145.201

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113257
  gflops (total): 23.4672
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0271161
  gflops (eval):  98.0165
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0271161,98.0165,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      99.7676
  maximum absolute entry in einsum_ir solution: 99.7676
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00136914
  time (eval):    0.0169217
  gflops (eval):  157.066
  gflops (total): 145.309
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00136914,0.0169217,157.066,145.309

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113464
  gflops (total): 23.4244
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4244

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273789
  gflops (eval):  97.0755
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273789,97.0755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.685
  maximum absolute entry in einsum_ir solution: 103.685
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138052
  time (eval):    0.0170775
  gflops (eval):  155.633
  gflops (total): 143.993
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138052,0.0170775,155.633,143.993

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113099
  gflops (total): 23.4999
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4999

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275543
  gflops (eval):  96.4577
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275543,96.4577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.173
  maximum absolute entry in einsum_ir solution: 105.173
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139685
  time (eval):    0.0168253
  gflops (eval):  157.966
  gflops (total): 145.857
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139685,0.0168253,157.966,145.857

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113782
  gflops (total): 23.359
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274732
  gflops (eval):  96.7424
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274732,96.7424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      96.7111
  maximum absolute entry in einsum_ir solution: 96.7111
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145409
  time (eval):    0.0169145
  gflops (eval):  157.133
  gflops (total): 144.694
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145409,0.0169145,157.133,144.694

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112877
  gflops (total): 23.5461
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273304
  gflops (eval):  97.2477
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273304,97.2477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.431
  maximum absolute entry in einsum_ir solution: 108.431
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013788
  time (eval):    0.0167854
  gflops (eval):  158.341
  gflops (total): 146.322
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013788,0.0167854,158.341,146.322

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113238
  gflops (total): 23.4711
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272848
  gflops (eval):  97.4102
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272848,97.4102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.559
  maximum absolute entry in einsum_ir solution: 108.559
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138345
  time (eval):    0.0167196
  gflops (eval):  158.964
  gflops (total): 146.816
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138345,0.0167196,158.964,146.816

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113105
  gflops (total): 23.4987
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.027446
  gflops (eval):  96.8381
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.027446,96.8381,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      98.0976
  maximum absolute entry in einsum_ir solution: 98.0976
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00138805
  time (eval):    0.0169027
  gflops (eval):  157.242
  gflops (total): 145.31
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00138805,0.0169027,157.242,145.31

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113095
  gflops (total): 23.5007
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.5007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0276168
  gflops (eval):  96.2394
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0276168,96.2394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.638
  maximum absolute entry in einsum_ir solution: 105.638
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140803
  time (eval):    0.0168385
  gflops (eval):  157.842
  gflops (total): 145.662
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140803,0.0168385,157.842,145.662

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.112667
  gflops (total): 23.59
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0275111
  gflops (eval):  96.609
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0275111,96.609,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.89
  maximum absolute entry in einsum_ir solution: 104.89
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00145122
  time (eval):    0.0167847
  gflops (eval):  158.348
  gflops (total): 145.746
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00145122,0.0167847,158.348,145.746

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113156
  gflops (total): 23.4882
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0272535
  gflops (eval):  97.5223
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0272535,97.5223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      100.533
  maximum absolute entry in einsum_ir solution: 100.533
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.0013791
  time (eval):    0.0168194
  gflops (eval):  158.021
  gflops (total): 146.046
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.0013791,0.0168194,158.021,146.046

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11324
  gflops (total): 23.4706
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0278483
  gflops (eval):  95.4392
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0278483,95.4392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      104.66
  maximum absolute entry in einsum_ir solution: 104.66
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00139107
  time (eval):    0.0169258
  gflops (eval):  157.028
  gflops (total): 145.102
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00139107,0.0169258,157.028,145.102

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.11239
  gflops (total): 23.6481
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.6481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0274586
  gflops (eval):  96.7937
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0274586,96.7937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.506
  maximum absolute entry in einsum_ir solution: 106.506
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  j,k,h,i,e,f
  g,j,k
  e,f,g,h,i
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
parsed dimension sizes:
  e: 6
  f: 64
  g: 24
  h: 4
  i: 94
  j: 6
  k: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 3 5 
  string_dim_ids: 5 6 3 4 0 1 2 5 6 0 1 2 3 4 

*** benchmarking einsum_ir ***
[[5,6,3,4,0,1]->[0,1,5,6,3,4]],[2,5,6]->[0,1,2,3,4]
  #flops:         2657820672
  time (compile): 0.00140259
  time (eval):    0.0168495
  gflops (eval):  157.739
  gflops (total): 145.617
CSV_DATA: einsum_ir,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0.00140259,0.0168495,157.739,145.617

*** benchmarking at::einsum ***
  #flops:         2657820672
  time (total):   0.113191
  gflops (total): 23.4809
CSV_DATA: at::einsum,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0,0,23.4809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 24 384
  #flops:         2657820672
  time (eval):    0.0273862
  gflops (eval):  97.0497
CSV_DATA: at::matmul,"jkhief,gjk->efghi","6,64,24,4,94,6,64","(0,1)",2657820672,0,0.0273862,97.0497,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      103.446
  maximum absolute entry in einsum_ir solution: 103.446
  maximum element-wise difference:              5.62668e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138019
  time (eval):    0.0247321
  gflops (eval):  439.421
  gflops (total): 416.195
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138019,0.0247321,439.421,416.195

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.050663
  gflops (total): 214.512
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0495376
  gflops (eval):  219.385
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0495376,219.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.6201
  maximum absolute entry in einsum_ir solution: 65.6201
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138569
  time (eval):    0.0247218
  gflops (eval):  439.604
  gflops (total): 416.272
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138569,0.0247218,439.604,416.272

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498441
  gflops (total): 218.036
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482639
  gflops (eval):  225.175
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482639,225.175,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0353
  maximum absolute entry in einsum_ir solution: 57.0353
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00168933
  time (eval):    0.0247413
  gflops (eval):  439.258
  gflops (total): 411.183
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00168933,0.0247413,439.258,411.183

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0490735
  gflops (total): 221.46
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,221.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0496499
  gflops (eval):  218.889
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0496499,218.889,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0123
  maximum absolute entry in einsum_ir solution: 57.0123
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138422
  time (eval):    0.0247423
  gflops (eval):  439.241
  gflops (total): 415.969
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138422,0.0247423,439.241,415.969

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506682
  gflops (total): 214.49
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.49

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480011
  gflops (eval):  226.408
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480011,226.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.9146
  maximum absolute entry in einsum_ir solution: 64.9146
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138169
  time (eval):    0.0248023
  gflops (eval):  438.178
  gflops (total): 415.056
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138169,0.0248023,438.178,415.056

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0511884
  gflops (total): 212.31
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483983
  gflops (eval):  224.55
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483983,224.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.1192
  maximum absolute entry in einsum_ir solution: 67.1192
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138911
  time (eval):    0.024751
  gflops (eval):  439.087
  gflops (total): 415.753
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138911,0.024751,439.087,415.753

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0512167
  gflops (total): 212.193
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0490344
  gflops (eval):  221.637
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0490344,221.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.455
  maximum absolute entry in einsum_ir solution: 58.455
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137924
  time (eval):    0.0246246
  gflops (eval):  441.34
  gflops (total): 417.931
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137924,0.0246246,441.34,417.931

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0504202
  gflops (total): 215.545
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.545

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0474831
  gflops (eval):  228.878
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0474831,228.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5923
  maximum absolute entry in einsum_ir solution: 58.5923
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139784
  time (eval):    0.0247292
  gflops (eval):  439.474
  gflops (total): 415.961
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139784,0.0247292,439.474,415.961

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501345
  gflops (total): 216.773
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487858
  gflops (eval):  222.766
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487858,222.766,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5354
  maximum absolute entry in einsum_ir solution: 57.5354
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138651
  time (eval):    0.0247058
  gflops (eval):  439.889
  gflops (total): 416.514
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138651,0.0247058,439.889,416.514

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506289
  gflops (total): 214.657
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478942
  gflops (eval):  226.913
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478942,226.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5814
  maximum absolute entry in einsum_ir solution: 58.5814
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141508
  time (eval):    0.0247113
  gflops (eval):  439.792
  gflops (total): 415.972
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141508,0.0247113,439.792,415.972

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0508677
  gflops (total): 213.649
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481749
  gflops (eval):  225.591
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481749,225.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6396
  maximum absolute entry in einsum_ir solution: 60.6396
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138284
  time (eval):    0.0247021
  gflops (eval):  439.956
  gflops (total): 416.632
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138284,0.0247021,439.956,416.632

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503447
  gflops (total): 215.868
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483497
  gflops (eval):  224.776
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483497,224.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5053
  maximum absolute entry in einsum_ir solution: 62.5053
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137809
  time (eval):    0.0247922
  gflops (eval):  438.356
  gflops (total): 415.273
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137809,0.0247922,438.356,415.273

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0508017
  gflops (total): 213.926
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478358
  gflops (eval):  227.19
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478358,227.19,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6521
  maximum absolute entry in einsum_ir solution: 57.6521
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137456
  time (eval):    0.0246637
  gflops (eval):  440.64
  gflops (total): 417.379
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137456,0.0246637,440.64,417.379

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0496471
  gflops (total): 218.901
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486051
  gflops (eval):  223.594
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486051,223.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.145
  maximum absolute entry in einsum_ir solution: 57.145
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139372
  time (eval):    0.024768
  gflops (eval):  438.784
  gflops (total): 415.409
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139372,0.024768,438.784,415.409

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0515085
  gflops (total): 210.991
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,210.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.047721
  gflops (eval):  227.737
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.047721,227.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8039
  maximum absolute entry in einsum_ir solution: 57.8039
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138797
  time (eval):    0.0247061
  gflops (eval):  439.884
  gflops (total): 416.486
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138797,0.0247061,439.884,416.486

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506167
  gflops (total): 214.708
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479969
  gflops (eval):  226.428
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479969,226.428,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3351
  maximum absolute entry in einsum_ir solution: 60.3351
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140831
  time (eval):    0.0246773
  gflops (eval):  440.397
  gflops (total): 416.621
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140831,0.0246773,440.397,416.621

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505297
  gflops (total): 215.078
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486543
  gflops (eval):  223.368
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486543,223.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.4314
  maximum absolute entry in einsum_ir solution: 64.4314
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137977
  time (eval):    0.0247226
  gflops (eval):  439.59
  gflops (total): 416.353
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137977,0.0247226,439.59,416.353

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0502595
  gflops (total): 216.234
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.234

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485264
  gflops (eval):  223.957
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485264,223.957,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4965
  maximum absolute entry in einsum_ir solution: 61.4965
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138403
  time (eval):    0.0247621
  gflops (eval):  438.89
  gflops (total): 415.658
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138403,0.0247621,438.89,415.658

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0499022
  gflops (total): 217.782
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480907
  gflops (eval):  225.986
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480907,225.986,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9328
  maximum absolute entry in einsum_ir solution: 61.9328
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138034
  time (eval):    0.0246659
  gflops (eval):  440.6
  gflops (total): 417.25
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138034,0.0246659,440.6,417.25

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510157
  gflops (total): 213.029
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476551
  gflops (eval):  228.051
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476551,228.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2382
  maximum absolute entry in einsum_ir solution: 57.2382
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138028
  time (eval):    0.0247167
  gflops (eval):  439.696
  gflops (total): 416.44
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138028,0.0247167,439.696,416.44

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501806
  gflops (total): 216.574
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488178
  gflops (eval):  222.62
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488178,222.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6314
  maximum absolute entry in einsum_ir solution: 58.6314
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140223
  time (eval):    0.0247183
  gflops (eval):  439.668
  gflops (total): 416.065
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140223,0.0247183,439.668,416.065

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0495421
  gflops (total): 219.365
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,219.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485425
  gflops (eval):  223.883
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485425,223.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.26
  maximum absolute entry in einsum_ir solution: 57.26
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137619
  time (eval):    0.0247893
  gflops (eval):  438.408
  gflops (total): 415.35
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137619,0.0247893,438.408,415.35

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0511506
  gflops (total): 212.467
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.049251
  gflops (eval):  220.662
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.049251,220.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9929
  maximum absolute entry in einsum_ir solution: 58.9929
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137595
  time (eval):    0.0246826
  gflops (eval):  440.302
  gflops (total): 417.053
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137595,0.0246826,440.302,417.053

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510543
  gflops (total): 212.868
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486117
  gflops (eval):  223.564
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486117,223.564,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1416
  maximum absolute entry in einsum_ir solution: 58.1416
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138819
  time (eval):    0.0246632
  gflops (eval):  440.65
  gflops (total): 417.169
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138819,0.0246632,440.65,417.169

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0507083
  gflops (total): 214.32
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481792
  gflops (eval):  225.571
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481792,225.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0757
  maximum absolute entry in einsum_ir solution: 61.0757
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138477
  time (eval):    0.0247415
  gflops (eval):  439.255
  gflops (total): 415.973
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138477,0.0247415,439.255,415.973

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0511168
  gflops (total): 212.608
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483543
  gflops (eval):  224.754
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483543,224.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5195
  maximum absolute entry in einsum_ir solution: 59.5195
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00167688
  time (eval):    0.0247414
  gflops (eval):  439.256
  gflops (total): 411.374
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00167688,0.0247414,439.256,411.374

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505752
  gflops (total): 214.885
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.047629
  gflops (eval):  228.177
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.047629,228.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.565
  maximum absolute entry in einsum_ir solution: 64.565
  maximum element-wise difference:              3.24249e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137941
  time (eval):    0.0247442
  gflops (eval):  439.206
  gflops (total): 416.015
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137941,0.0247442,439.206,416.015

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506007
  gflops (total): 214.776
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486141
  gflops (eval):  223.553
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486141,223.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5887
  maximum absolute entry in einsum_ir solution: 61.5887
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0421131
  time (eval):    0.0248908
  gflops (eval):  436.62
  gflops (total): 162.197
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0421131,0.0248908,436.62,162.197

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0497147
  gflops (total): 218.604
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485161
  gflops (eval):  224.004
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485161,224.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2967
  maximum absolute entry in einsum_ir solution: 61.2967
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137494
  time (eval):    0.024717
  gflops (eval):  439.689
  gflops (total): 416.52
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137494,0.024717,439.689,416.52

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501375
  gflops (total): 216.76
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.76

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491617
  gflops (eval):  221.063
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491617,221.063,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8855
  maximum absolute entry in einsum_ir solution: 61.8855
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139055
  time (eval):    0.0246865
  gflops (eval):  440.234
  gflops (total): 416.758
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139055,0.0246865,440.234,416.758

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501283
  gflops (total): 216.8
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482591
  gflops (eval):  225.197
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482591,225.197,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2128
  maximum absolute entry in einsum_ir solution: 63.2128
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137811
  time (eval):    0.0247183
  gflops (eval):  439.666
  gflops (total): 416.448
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137811,0.0247183,439.666,416.448

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0497288
  gflops (total): 218.542
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.542

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483869
  gflops (eval):  224.602
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483869,224.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.0922
  maximum absolute entry in einsum_ir solution: 67.0922
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139458
  time (eval):    0.0247369
  gflops (eval):  439.336
  gflops (total): 415.89
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139458,0.0247369,439.336,415.89

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505461
  gflops (total): 215.008
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492
  gflops (eval):  220.891
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492,220.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6553
  maximum absolute entry in einsum_ir solution: 56.6553
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137521
  time (eval):    0.0248168
  gflops (eval):  437.921
  gflops (total): 414.928
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137521,0.0248168,437.921,414.928

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503406
  gflops (total): 215.886
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.886

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476069
  gflops (eval):  228.283
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476069,228.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5582
  maximum absolute entry in einsum_ir solution: 60.5582
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141706
  time (eval):    0.0247259
  gflops (eval):  439.532
  gflops (total): 415.708
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141706,0.0247259,439.532,415.708

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0507357
  gflops (total): 214.204
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.204

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484513
  gflops (eval):  224.304
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484513,224.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.3386
  maximum absolute entry in einsum_ir solution: 64.3386
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137785
  time (eval):    0.0247612
  gflops (eval):  438.906
  gflops (total): 415.77
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137785,0.0247612,438.906,415.77

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505385
  gflops (total): 215.04
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.04

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488814
  gflops (eval):  222.33
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488814,222.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8447
  maximum absolute entry in einsum_ir solution: 57.8447
  maximum element-wise difference:              3.24249e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001427
  time (eval):    0.0247452
  gflops (eval):  439.189
  gflops (total): 415.243
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.001427,0.0247452,439.189,415.243

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498794
  gflops (total): 217.882
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476106
  gflops (eval):  228.265
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476106,228.265,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7384
  maximum absolute entry in einsum_ir solution: 61.7384
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137447
  time (eval):    0.0246883
  gflops (eval):  440.201
  gflops (total): 416.986
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137447,0.0246883,440.201,416.986

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.051254
  gflops (total): 212.039
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480649
  gflops (eval):  226.107
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480649,226.107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4248
  maximum absolute entry in einsum_ir solution: 60.4248
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138717
  time (eval):    0.0247737
  gflops (eval):  438.683
  gflops (total): 415.422
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138717,0.0247737,438.683,415.422

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0493006
  gflops (total): 220.44
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,220.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476529
  gflops (eval):  228.062
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476529,228.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.1473
  maximum absolute entry in einsum_ir solution: 64.1473
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00149308
  time (eval):    0.0246881
  gflops (eval):  440.205
  gflops (total): 415.1
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00149308,0.0246881,440.205,415.1

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.050751
  gflops (total): 214.14
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484781
  gflops (eval):  224.18
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484781,224.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4115
  maximum absolute entry in einsum_ir solution: 59.4116
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138225
  time (eval):    0.0247364
  gflops (eval):  439.345
  gflops (total): 416.094
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138225,0.0247364,439.345,416.094

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503642
  gflops (total): 215.784
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0478436
  gflops (eval):  227.153
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0478436,227.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1304
  maximum absolute entry in einsum_ir solution: 59.1304
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137625
  time (eval):    0.0247111
  gflops (eval):  439.795
  gflops (total): 416.593
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137625,0.0247111,439.795,416.593

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498156
  gflops (total): 218.161
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482612
  gflops (eval):  225.188
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482612,225.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1068
  maximum absolute entry in einsum_ir solution: 63.1068
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141203
  time (eval):    0.0247377
  gflops (eval):  439.321
  gflops (total): 415.599
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141203,0.0247377,439.321,415.599

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510785
  gflops (total): 212.767
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491597
  gflops (eval):  221.072
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491597,221.072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9793
  maximum absolute entry in einsum_ir solution: 56.9793
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137096
  time (eval):    0.0246617
  gflops (eval):  440.676
  gflops (total): 417.469
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137096,0.0246617,440.676,417.469

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498988
  gflops (total): 217.797
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482462
  gflops (eval):  225.257
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482462,225.257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4823
  maximum absolute entry in einsum_ir solution: 58.4823
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137202
  time (eval):    0.024708
  gflops (eval):  439.851
  gflops (total): 416.711
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137202,0.024708,439.851,416.711

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0504522
  gflops (total): 215.408
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.408

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487079
  gflops (eval):  223.122
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487079,223.122,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1185
  maximum absolute entry in einsum_ir solution: 57.1185
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137417
  time (eval):    0.0246217
  gflops (eval):  441.392
  gflops (total): 418.059
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137417,0.0246217,441.392,418.059

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503064
  gflops (total): 216.032
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0496966
  gflops (eval):  218.683
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0496966,218.683,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.3946
  maximum absolute entry in einsum_ir solution: 55.3946
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138225
  time (eval):    0.0247654
  gflops (eval):  438.831
  gflops (total): 415.633
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138225,0.0247654,438.831,415.633

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501228
  gflops (total): 216.824
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481064
  gflops (eval):  225.912
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481064,225.912,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0121
  maximum absolute entry in einsum_ir solution: 57.0121
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138021
  time (eval):    0.0247495
  gflops (eval):  439.113
  gflops (total): 415.918
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138021,0.0247495,439.113,415.918

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498637
  gflops (total): 217.951
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477057
  gflops (eval):  227.809
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477057,227.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6164
  maximum absolute entry in einsum_ir solution: 59.6164
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137906
  time (eval):    0.0247885
  gflops (eval):  438.423
  gflops (total): 415.317
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137906,0.0247885,438.423,415.317

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506565
  gflops (total): 214.54
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048209
  gflops (eval):  225.431
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048209,225.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8168
  maximum absolute entry in einsum_ir solution: 58.8168
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139518
  time (eval):    0.0247787
  gflops (eval):  438.595
  gflops (total): 415.216
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139518,0.0247787,438.595,415.216

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0497584
  gflops (total): 218.412
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.412

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484856
  gflops (eval):  224.146
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484856,224.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9517
  maximum absolute entry in einsum_ir solution: 57.9517
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138478
  time (eval):    0.0247373
  gflops (eval):  439.329
  gflops (total): 416.04
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138478,0.0247373,439.329,416.04

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0504213
  gflops (total): 215.54
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.54

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476778
  gflops (eval):  227.943
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476778,227.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8123
  maximum absolute entry in einsum_ir solution: 57.8123
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137813
  time (eval):    0.0245993
  gflops (eval):  441.793
  gflops (total): 418.356
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137813,0.0245993,441.793,418.356

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0500329
  gflops (total): 217.214
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.214

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048364
  gflops (eval):  224.709
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048364,224.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7135
  maximum absolute entry in einsum_ir solution: 60.7135
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137475
  time (eval):    0.0247457
  gflops (eval):  439.18
  gflops (total): 416.065
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137475,0.0247457,439.18,416.065

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0516499
  gflops (total): 210.413
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,210.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485331
  gflops (eval):  223.926
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485331,223.926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6368
  maximum absolute entry in einsum_ir solution: 63.6368
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137209
  time (eval):    0.0247017
  gflops (eval):  439.963
  gflops (total): 416.811
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137209,0.0247017,439.963,416.811

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0508871
  gflops (total): 213.567
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492378
  gflops (eval):  220.721
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492378,220.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8257
  maximum absolute entry in einsum_ir solution: 57.8257
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138867
  time (eval):    0.0247418
  gflops (eval):  439.25
  gflops (total): 415.906
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138867,0.0247418,439.25,415.906

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0504751
  gflops (total): 215.31
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484581
  gflops (eval):  224.273
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484581,224.273,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.7559
  maximum absolute entry in einsum_ir solution: 64.7559
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138946
  time (eval):    0.0246793
  gflops (eval):  440.361
  gflops (total): 416.89
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138946,0.0246793,440.361,416.89

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510343
  gflops (total): 212.951
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477201
  gflops (eval):  227.741
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477201,227.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8471
  maximum absolute entry in einsum_ir solution: 61.8471
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138227
  time (eval):    0.024679
  gflops (eval):  440.368
  gflops (total): 417.011
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138227,0.024679,440.368,417.011

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498502
  gflops (total): 218.01
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.01

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.04781
  gflops (eval):  227.313
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.04781,227.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.75
  maximum absolute entry in einsum_ir solution: 57.75
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00156047
  time (eval):    0.0247406
  gflops (eval):  439.27
  gflops (total): 413.208
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00156047,0.0247406,439.27,413.208

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0502597
  gflops (total): 216.233
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0486632
  gflops (eval):  223.327
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0486632,223.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3541
  maximum absolute entry in einsum_ir solution: 61.3541
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137095
  time (eval):    0.0246761
  gflops (eval):  440.419
  gflops (total): 417.238
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137095,0.0246761,440.419,417.238

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505583
  gflops (total): 214.956
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.047541
  gflops (eval):  228.599
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.047541,228.599,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2897
  maximum absolute entry in einsum_ir solution: 60.2897
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137604
  time (eval):    0.0246833
  gflops (eval):  440.291
  gflops (total): 417.042
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137604,0.0246833,440.291,417.042

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503532
  gflops (total): 215.832
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.832

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.047814
  gflops (eval):  227.294
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.047814,227.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7275
  maximum absolute entry in einsum_ir solution: 59.7274
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00167657
  time (eval):    0.0247204
  gflops (eval):  439.63
  gflops (total): 411.708
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00167657,0.0247204,439.63,411.708

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0502194
  gflops (total): 216.407
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048986
  gflops (eval):  221.856
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048986,221.856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2284
  maximum absolute entry in einsum_ir solution: 61.2284
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145581
  time (eval):    0.0247586
  gflops (eval):  438.951
  gflops (total): 414.574
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145581,0.0247586,438.951,414.574

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0499641
  gflops (total): 217.513
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487889
  gflops (eval):  222.752
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487889,222.752,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1695
  maximum absolute entry in einsum_ir solution: 59.1695
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138165
  time (eval):    0.0247244
  gflops (eval):  439.558
  gflops (total): 416.295
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138165,0.0247244,439.558,416.295

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0512298
  gflops (total): 212.139
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476917
  gflops (eval):  227.877
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476917,227.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.6968
  maximum absolute entry in einsum_ir solution: 67.6968
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139197
  time (eval):    0.0246397
  gflops (eval):  441.07
  gflops (total): 417.485
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139197,0.0246397,441.07,417.485

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.04968
  gflops (total): 218.756
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484327
  gflops (eval):  224.39
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484327,224.39,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7905
  maximum absolute entry in einsum_ir solution: 60.7905
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139212
  time (eval):    0.0247778
  gflops (eval):  438.611
  gflops (total): 415.279
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139212,0.0247778,438.611,415.279

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0495373
  gflops (total): 219.387
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,219.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0488519
  gflops (eval):  222.465
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0488519,222.465,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9108
  maximum absolute entry in einsum_ir solution: 58.9108
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138559
  time (eval):    0.0247491
  gflops (eval):  439.12
  gflops (total): 415.839
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138559,0.0247491,439.12,415.839

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0497734
  gflops (total): 218.346
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.346

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487101
  gflops (eval):  223.112
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487101,223.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.2702
  maximum absolute entry in einsum_ir solution: 56.2702
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135538
  time (eval):    0.0246067
  gflops (eval):  441.661
  gflops (total): 418.603
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135538,0.0246067,441.661,418.603

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501861
  gflops (total): 216.55
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484612
  gflops (eval):  224.258
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484612,224.258,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0924
  maximum absolute entry in einsum_ir solution: 61.0924
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138077
  time (eval):    0.0247212
  gflops (eval):  439.616
  gflops (total): 416.36
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138077,0.0247212,439.616,416.36

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506514
  gflops (total): 214.561
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479842
  gflops (eval):  226.487
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479842,226.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.423
  maximum absolute entry in einsum_ir solution: 59.423
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143575
  time (eval):    0.0247573
  gflops (eval):  438.974
  gflops (total): 414.912
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143575,0.0247573,438.974,414.912

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.049665
  gflops (total): 218.823
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0473781
  gflops (eval):  229.385
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0473781,229.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.1422
  maximum absolute entry in einsum_ir solution: 56.1422
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013829
  time (eval):    0.0247002
  gflops (eval):  439.99
  gflops (total): 416.662
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013829,0.0247002,439.99,416.662

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503588
  gflops (total): 215.808
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485972
  gflops (eval):  223.631
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485972,223.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2851
  maximum absolute entry in einsum_ir solution: 60.2851
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137561
  time (eval):    0.0246077
  gflops (eval):  441.643
  gflops (total): 418.261
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137561,0.0246077,441.643,418.261

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510313
  gflops (total): 212.964
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491926
  gflops (eval):  220.924
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491926,220.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3745
  maximum absolute entry in einsum_ir solution: 58.3745
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00167106
  time (eval):    0.0247156
  gflops (eval):  439.714
  gflops (total): 411.868
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00167106,0.0247156,439.714,411.868

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0511509
  gflops (total): 212.466
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0485539
  gflops (eval):  223.83
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0485539,223.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4709
  maximum absolute entry in einsum_ir solution: 61.4709
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138079
  time (eval):    0.0247825
  gflops (eval):  438.529
  gflops (total): 415.385
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138079,0.0247825,438.529,415.385

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0486799
  gflops (total): 223.251
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,223.251

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0487855
  gflops (eval):  222.768
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0487855,222.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6986
  maximum absolute entry in einsum_ir solution: 60.6986
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138695
  time (eval):    0.0246234
  gflops (eval):  441.361
  gflops (total): 417.827
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138695,0.0246234,441.361,417.827

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0489942
  gflops (total): 221.819
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,221.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0491324
  gflops (eval):  221.194
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0491324,221.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.5769
  maximum absolute entry in einsum_ir solution: 58.5769
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138318
  time (eval):    0.0247699
  gflops (eval):  438.752
  gflops (total): 415.547
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138318,0.0247699,438.752,415.547

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.049632
  gflops (total): 218.968
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481001
  gflops (eval):  225.942
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481001,225.942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5791
  maximum absolute entry in einsum_ir solution: 59.5791
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138764
  time (eval):    0.0247452
  gflops (eval):  439.189
  gflops (total): 415.868
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138764,0.0247452,439.189,415.868

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0502331
  gflops (total): 216.348
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476446
  gflops (eval):  228.102
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476446,228.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.8814
  maximum absolute entry in einsum_ir solution: 54.8814
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137506
  time (eval):    0.0247899
  gflops (eval):  438.397
  gflops (total): 415.358
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137506,0.0247899,438.397,415.358

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0497768
  gflops (total): 218.331
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481339
  gflops (eval):  225.783
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481339,225.783,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.733
  maximum absolute entry in einsum_ir solution: 59.733
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135549
  time (eval):    0.0247076
  gflops (eval):  439.858
  gflops (total): 416.982
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135549,0.0247076,439.858,416.982

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505202
  gflops (total): 215.118
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479667
  gflops (eval):  226.57
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479667,226.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.381
  maximum absolute entry in einsum_ir solution: 59.381
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138598
  time (eval):    0.0247151
  gflops (eval):  439.725
  gflops (total): 416.375
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138598,0.0247151,439.725,416.375

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0511571
  gflops (total): 212.44
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,212.44

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0482227
  gflops (eval):  225.368
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0482227,225.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6226
  maximum absolute entry in einsum_ir solution: 61.6226
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142673
  time (eval):    0.0246601
  gflops (eval):  440.705
  gflops (total): 416.602
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142673,0.0246601,440.705,416.602

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0501496
  gflops (total): 216.708
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479634
  gflops (eval):  226.586
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479634,226.586,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5955
  maximum absolute entry in einsum_ir solution: 57.5955
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150942
  time (eval):    0.0247743
  gflops (eval):  438.674
  gflops (total): 413.481
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150942,0.0247743,438.674,413.481

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.050463
  gflops (total): 215.362
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.362

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489125
  gflops (eval):  222.189
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489125,222.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0003
  maximum absolute entry in einsum_ir solution: 64.0003
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136812
  time (eval):    0.024737
  gflops (eval):  439.335
  gflops (total): 416.31
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136812,0.024737,439.335,416.31

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503005
  gflops (total): 216.058
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477311
  gflops (eval):  227.689
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477311,227.689,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6502
  maximum absolute entry in einsum_ir solution: 58.6502
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141797
  time (eval):    0.0247284
  gflops (eval):  439.487
  gflops (total): 415.653
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141797,0.0247284,439.487,415.653

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0506288
  gflops (total): 214.657
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.657

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476255
  gflops (eval):  228.193
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476255,228.193,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4151
  maximum absolute entry in einsum_ir solution: 56.4151
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138156
  time (eval):    0.0247941
  gflops (eval):  438.323
  gflops (total): 415.188
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138156,0.0247941,438.323,415.188

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0502564
  gflops (total): 216.248
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0479248
  gflops (eval):  226.768
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0479248,226.768,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8252
  maximum absolute entry in einsum_ir solution: 58.8252
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139136
  time (eval):    0.0248061
  gflops (eval):  438.111
  gflops (total): 414.843
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139136,0.0248061,438.111,414.843

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0507422
  gflops (total): 214.177
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0480539
  gflops (eval):  226.159
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0480539,226.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.2431
  maximum absolute entry in einsum_ir solution: 57.2431
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138292
  time (eval):    0.0247494
  gflops (eval):  439.114
  gflops (total): 415.876
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138292,0.0247494,439.114,415.876

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0514191
  gflops (total): 211.358
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,211.358

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477847
  gflops (eval):  227.433
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477847,227.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.728
  maximum absolute entry in einsum_ir solution: 57.728
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137363
  time (eval):    0.0246755
  gflops (eval):  440.429
  gflops (total): 417.205
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137363,0.0246755,440.429,417.205

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.050299
  gflops (total): 216.064
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,216.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048484
  gflops (eval):  224.153
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048484,224.153,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.944
  maximum absolute entry in einsum_ir solution: 60.944
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138055
  time (eval):    0.024664
  gflops (eval):  440.635
  gflops (total): 417.278
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138055,0.024664,440.635,417.278

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0510158
  gflops (total): 213.029
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0481914
  gflops (eval):  225.514
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0481914,225.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.4785
  maximum absolute entry in einsum_ir solution: 63.4785
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137604
  time (eval):    0.0247382
  gflops (eval):  439.313
  gflops (total): 416.164
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137604,0.0247382,439.313,416.164

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505905
  gflops (total): 214.819
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0483226
  gflops (eval):  224.901
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0483226,224.901,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0993
  maximum absolute entry in einsum_ir solution: 58.0993
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013705
  time (eval):    0.0246944
  gflops (eval):  440.093
  gflops (total): 416.953
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013705,0.0246944,440.093,416.953

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0504617
  gflops (total): 215.368
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477235
  gflops (eval):  227.725
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477235,227.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1691
  maximum absolute entry in einsum_ir solution: 60.1691
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139015
  time (eval):    0.0247971
  gflops (eval):  438.269
  gflops (total): 415.004
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139015,0.0247971,438.269,415.004

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505696
  gflops (total): 214.908
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,214.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484291
  gflops (eval):  224.407
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484291,224.407,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7825
  maximum absolute entry in einsum_ir solution: 60.7825
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138289
  time (eval):    0.0247428
  gflops (eval):  439.231
  gflops (total): 415.981
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138289,0.0247428,439.231,415.981

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0503173
  gflops (total): 215.986
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.986

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0494906
  gflops (eval):  219.594
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0494906,219.594,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.9865
  maximum absolute entry in einsum_ir solution: 61.9865
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139704
  time (eval):    0.0247747
  gflops (eval):  438.667
  gflops (total): 415.251
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139704,0.0247747,438.667,415.251

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0508365
  gflops (total): 213.78
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476067
  gflops (eval):  228.283
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476067,228.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0651
  maximum absolute entry in einsum_ir solution: 58.0651
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139535
  time (eval):    0.0246914
  gflops (eval):  440.145
  gflops (total): 416.603
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139535,0.0246914,440.145,416.603

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0512675
  gflops (total): 211.983
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,211.983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0489477
  gflops (eval):  222.029
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0489477,222.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0415
  maximum absolute entry in einsum_ir solution: 58.0415
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138514
  time (eval):    0.0246759
  gflops (eval):  440.422
  gflops (total): 417.014
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138514,0.0246759,440.422,417.014

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0498417
  gflops (total): 218.047
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0476338
  gflops (eval):  228.154
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0476338,228.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3656
  maximum absolute entry in einsum_ir solution: 60.3656
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138168
  time (eval):    0.0246404
  gflops (eval):  441.056
  gflops (total): 417.638
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138168,0.0246404,441.056,417.638

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0496111
  gflops (total): 219.06
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,219.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492481
  gflops (eval):  220.675
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492481,220.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2598
  maximum absolute entry in einsum_ir solution: 61.2598
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138065
  time (eval):    0.0246868
  gflops (eval):  440.228
  gflops (total): 416.912
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138065,0.0246868,440.228,416.912

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.049824
  gflops (total): 218.124
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.124

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.048753
  gflops (eval):  222.916
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.048753,222.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6077
  maximum absolute entry in einsum_ir solution: 64.6077
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139239
  time (eval):    0.0246866
  gflops (eval):  440.232
  gflops (total): 416.727
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139239,0.0246866,440.232,416.727

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0500724
  gflops (total): 217.042
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,217.042

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0492716
  gflops (eval):  220.57
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0492716,220.57,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4846
  maximum absolute entry in einsum_ir solution: 61.4846
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138757
  time (eval):    0.0246988
  gflops (eval):  440.014
  gflops (total): 416.609
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138757,0.0246988,440.014,416.609

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0505004
  gflops (total): 215.203
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,215.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0493005
  gflops (eval):  220.441
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0493005,220.441,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1701
  maximum absolute entry in einsum_ir solution: 59.1701
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013784
  time (eval):    0.0247226
  gflops (eval):  439.591
  gflops (total): 416.376
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013784,0.0247226,439.591,416.376

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0496786
  gflops (total): 218.762
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,218.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0484628
  gflops (eval):  224.251
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0484628,224.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.7335
  maximum absolute entry in einsum_ir solution: 57.7335
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a
  e,b,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 0 4 1 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,1,2,3]->[1,2,4,3]],[[4,0]->[0,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138368
  time (eval):    0.0247861
  gflops (eval):  438.465
  gflops (total): 415.282
CSV_DATA: einsum_ir,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138368,0.0247861,438.465,415.282

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.050946
  gflops (total): 213.32
CSV_DATA: at::einsum,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,213.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 592704 96 96
  #flops:         10867820544
  time (eval):    0.0477042
  gflops (eval):  227.817
CSV_DATA: at::matmul,"ea,ebcd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0477042,227.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.358
  maximum absolute entry in einsum_ir solution: 59.358
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138477
  time (eval):    0.0248833
  gflops (eval):  436.751
  gflops (total): 413.727
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138477,0.0248833,436.751,413.727

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0858995
  gflops (total): 126.518
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569173
  gflops (eval):  190.941
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569173,190.941,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.5149
  maximum absolute entry in einsum_ir solution: 66.5149
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138763
  time (eval):    0.024841
  gflops (eval):  437.495
  gflops (total): 414.35
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138763,0.024841,437.495,414.35

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0852338
  gflops (total): 127.506
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559638
  gflops (eval):  194.194
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559638,194.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4942
  maximum absolute entry in einsum_ir solution: 60.4942
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137405
  time (eval):    0.0250419
  gflops (eval):  433.986
  gflops (total): 411.411
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137405,0.0250419,433.986,411.411

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0856634
  gflops (total): 126.867
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.867

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557485
  gflops (eval):  194.944
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557485,194.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      66.0512
  maximum absolute entry in einsum_ir solution: 66.0512
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00135629
  time (eval):    0.0248859
  gflops (eval):  436.705
  gflops (total): 414.135
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00135629,0.0248859,436.705,414.135

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0846234
  gflops (total): 128.426
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056245
  gflops (eval):  193.223
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056245,193.223,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3977
  maximum absolute entry in einsum_ir solution: 60.3977
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139283
  time (eval):    0.0250371
  gflops (eval):  434.068
  gflops (total): 411.193
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139283,0.0250371,434.068,411.193

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851295
  gflops (total): 127.662
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560545
  gflops (eval):  193.88
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560545,193.88,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8833
  maximum absolute entry in einsum_ir solution: 61.8833
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138534
  time (eval):    0.0250166
  gflops (eval):  434.424
  gflops (total): 411.629
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138534,0.0250166,434.424,411.629

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.085435
  gflops (total): 127.206
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550635
  gflops (eval):  197.369
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550635,197.369,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1954
  maximum absolute entry in einsum_ir solution: 59.1954
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146488
  time (eval):    0.0250208
  gflops (eval):  434.352
  gflops (total): 410.328
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146488,0.0250208,434.352,410.328

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0852785
  gflops (total): 127.439
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055586
  gflops (eval):  195.514
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055586,195.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.7721
  maximum absolute entry in einsum_ir solution: 60.7721
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137598
  time (eval):    0.0249993
  gflops (eval):  434.725
  gflops (total): 412.046
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137598,0.0249993,434.725,412.046

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0843058
  gflops (total): 128.91
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553974
  gflops (eval):  196.179
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553974,196.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1645
  maximum absolute entry in einsum_ir solution: 58.1645
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138648
  time (eval):    0.0250548
  gflops (eval):  433.762
  gflops (total): 411.017
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138648,0.0250548,433.762,411.017

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850321
  gflops (total): 127.808
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561783
  gflops (eval):  193.452
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561783,193.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.6754
  maximum absolute entry in einsum_ir solution: 54.6754
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00148067
  time (eval):    0.0250506
  gflops (eval):  433.835
  gflops (total): 409.624
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00148067,0.0250506,433.835,409.624

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0861278
  gflops (total): 126.183
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555201
  gflops (eval):  195.746
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555201,195.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.4678
  maximum absolute entry in einsum_ir solution: 55.4678
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139583
  time (eval):    0.0250083
  gflops (eval):  434.569
  gflops (total): 411.596
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139583,0.0250083,434.569,411.596

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0849964
  gflops (total): 127.862
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.862

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559102
  gflops (eval):  194.38
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559102,194.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.5331
  maximum absolute entry in einsum_ir solution: 63.5331
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137872
  time (eval):    0.0250334
  gflops (eval):  434.133
  gflops (total): 411.471
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137872,0.0250334,434.133,411.471

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0852963
  gflops (total): 127.413
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.413

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560413
  gflops (eval):  193.925
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560413,193.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1221
  maximum absolute entry in einsum_ir solution: 59.1221
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138767
  time (eval):    0.0250261
  gflops (eval):  434.259
  gflops (total): 411.445
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138767,0.0250261,434.259,411.445

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0859314
  gflops (total): 126.471
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0548237
  gflops (eval):  198.232
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0548237,198.232,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.6933
  maximum absolute entry in einsum_ir solution: 65.6933
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139041
  time (eval):    0.0250346
  gflops (eval):  434.111
  gflops (total): 411.27
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139041,0.0250346,434.111,411.27

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.085994
  gflops (total): 126.379
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557966
  gflops (eval):  194.776
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557966,194.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6772
  maximum absolute entry in einsum_ir solution: 57.6772
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137526
  time (eval):    0.0249848
  gflops (eval):  434.977
  gflops (total): 412.284
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137526,0.0249848,434.977,412.284

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0862498
  gflops (total): 126.004
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560976
  gflops (eval):  193.73
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560976,193.73,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.459
  maximum absolute entry in einsum_ir solution: 61.459
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138205
  time (eval):    0.0250103
  gflops (eval):  434.533
  gflops (total): 411.778
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138205,0.0250103,434.533,411.778

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0860059
  gflops (total): 126.361
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557831
  gflops (eval):  194.823
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557831,194.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5735
  maximum absolute entry in einsum_ir solution: 60.5735
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141251
  time (eval):    0.0250291
  gflops (eval):  434.207
  gflops (total): 411.012
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141251,0.0250291,434.207,411.012

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0858969
  gflops (total): 126.522
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.522

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562732
  gflops (eval):  193.126
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562732,193.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1765
  maximum absolute entry in einsum_ir solution: 58.1765
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138171
  time (eval):    0.025045
  gflops (eval):  433.932
  gflops (total): 411.244
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138171,0.025045,433.932,411.244

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851068
  gflops (total): 127.696
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556987
  gflops (eval):  195.118
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556987,195.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0203
  maximum absolute entry in einsum_ir solution: 56.0203
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138037
  time (eval):    0.0250237
  gflops (eval):  434.3
  gflops (total): 411.596
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138037,0.0250237,434.3,411.596

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850074
  gflops (total): 127.846
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556556
  gflops (eval):  195.269
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556556,195.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3057
  maximum absolute entry in einsum_ir solution: 60.3057
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138809
  time (eval):    0.025029
  gflops (eval):  434.209
  gflops (total): 411.393
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138809,0.025029,434.209,411.393

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854624
  gflops (total): 127.165
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562174
  gflops (eval):  193.318
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562174,193.318,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      68.6989
  maximum absolute entry in einsum_ir solution: 68.6989
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013641
  time (eval):    0.025061
  gflops (eval):  433.655
  gflops (total): 411.269
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013641,0.025061,433.655,411.269

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851428
  gflops (total): 127.642
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055413
  gflops (eval):  196.124
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055413,196.124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3105
  maximum absolute entry in einsum_ir solution: 58.3105
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142257
  time (eval):    0.0250706
  gflops (eval):  433.489
  gflops (total): 410.213
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142257,0.0250706,433.489,410.213

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0857092
  gflops (total): 126.799
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561558
  gflops (eval):  193.53
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561558,193.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9213
  maximum absolute entry in einsum_ir solution: 56.9213
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136946
  time (eval):    0.0250289
  gflops (eval):  434.211
  gflops (total): 411.685
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136946,0.0250289,434.211,411.685

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0855127
  gflops (total): 127.09
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552793
  gflops (eval):  196.598
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552793,196.598,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      71.1828
  maximum absolute entry in einsum_ir solution: 71.1828
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140467
  time (eval):    0.025029
  gflops (eval):  434.209
  gflops (total): 411.135
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140467,0.025029,434.209,411.135

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0847269
  gflops (total): 128.269
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562032
  gflops (eval):  193.367
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562032,193.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.115
  maximum absolute entry in einsum_ir solution: 59.115
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140501
  time (eval):    0.0249942
  gflops (eval):  434.814
  gflops (total): 411.672
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140501,0.0249942,434.814,411.672

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853501
  gflops (total): 127.332
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558358
  gflops (eval):  194.639
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558358,194.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3523
  maximum absolute entry in einsum_ir solution: 56.3523
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138793
  time (eval):    0.0250682
  gflops (eval):  433.53
  gflops (total): 410.787
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138793,0.0250682,433.53,410.787

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0843416
  gflops (total): 128.855
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557161
  gflops (eval):  195.057
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557161,195.057,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3367
  maximum absolute entry in einsum_ir solution: 59.3367
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013826
  time (eval):    0.0250653
  gflops (eval):  433.58
  gflops (total): 410.914
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013826,0.0250653,433.58,410.914

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0857392
  gflops (total): 126.754
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565436
  gflops (eval):  192.202
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565436,192.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1846
  maximum absolute entry in einsum_ir solution: 58.1846
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140035
  time (eval):    0.0250581
  gflops (eval):  433.705
  gflops (total): 410.75
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140035,0.0250581,433.705,410.75

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0844857
  gflops (total): 128.635
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561243
  gflops (eval):  193.639
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561243,193.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2134
  maximum absolute entry in einsum_ir solution: 60.2134
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138618
  time (eval):    0.0250624
  gflops (eval):  433.63
  gflops (total): 410.904
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138618,0.0250624,433.63,410.904

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850453
  gflops (total): 127.789
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055969
  gflops (eval):  194.176
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055969,194.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5696
  maximum absolute entry in einsum_ir solution: 60.5696
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144725
  time (eval):    0.0250153
  gflops (eval):  434.447
  gflops (total): 410.687
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144725,0.0250153,434.447,410.687

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854683
  gflops (total): 127.156
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0570722
  gflops (eval):  190.422
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0570722,190.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.9342
  maximum absolute entry in einsum_ir solution: 63.9342
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00149824
  time (eval):    0.0250113
  gflops (eval):  434.517
  gflops (total): 409.959
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00149824,0.0250113,434.517,409.959

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0858816
  gflops (total): 126.544
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550597
  gflops (eval):  197.382
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550597,197.382,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.6661
  maximum absolute entry in einsum_ir solution: 55.6661
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137874
  time (eval):    0.0250505
  gflops (eval):  433.836
  gflops (total): 411.204
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137874,0.0250505,433.836,411.204

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851307
  gflops (total): 127.66
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556811
  gflops (eval):  195.18
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556811,195.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0309
  maximum absolute entry in einsum_ir solution: 59.0309
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139965
  time (eval):    0.0250576
  gflops (eval):  433.713
  gflops (total): 410.769
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139965,0.0250576,433.713,410.769

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.085591
  gflops (total): 126.974
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.974

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559707
  gflops (eval):  194.17
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559707,194.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.7971
  maximum absolute entry in einsum_ir solution: 61.7971
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139064
  time (eval):    0.0250541
  gflops (eval):  433.773
  gflops (total): 410.963
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139064,0.0250541,433.773,410.963

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0841411
  gflops (total): 129.162
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,129.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559998
  gflops (eval):  194.069
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559998,194.069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.9827
  maximum absolute entry in einsum_ir solution: 62.9827
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137958
  time (eval):    0.025028
  gflops (eval):  434.226
  gflops (total): 411.541
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137958,0.025028,434.226,411.541

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0864855
  gflops (total): 125.661
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,125.661

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056472
  gflops (eval):  192.446
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056472,192.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.145
  maximum absolute entry in einsum_ir solution: 64.145
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136341
  time (eval):    0.0250522
  gflops (eval):  433.807
  gflops (total): 411.416
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136341,0.0250522,433.807,411.416

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.084747
  gflops (total): 128.238
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.238

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0545873
  gflops (eval):  199.091
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0545873,199.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      70.6423
  maximum absolute entry in einsum_ir solution: 70.6423
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138359
  time (eval):    0.0250474
  gflops (eval):  433.891
  gflops (total): 411.178
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138359,0.0250474,433.891,411.178

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0852307
  gflops (total): 127.511
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.511

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566842
  gflops (eval):  191.726
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566842,191.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4361
  maximum absolute entry in einsum_ir solution: 58.4361
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137617
  time (eval):    0.0250353
  gflops (eval):  434.1
  gflops (total): 411.481
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137617,0.0250353,434.1,411.481

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0845817
  gflops (total): 128.489
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560415
  gflops (eval):  193.925
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560415,193.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7986
  maximum absolute entry in einsum_ir solution: 58.7986
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138443
  time (eval):    0.0250291
  gflops (eval):  434.208
  gflops (total): 411.45
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138443,0.0250291,434.208,411.45

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851433
  gflops (total): 127.642
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.642

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552378
  gflops (eval):  196.746
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552378,196.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0388
  maximum absolute entry in einsum_ir solution: 56.0388
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137286
  time (eval):    0.0250183
  gflops (eval):  434.395
  gflops (total): 411.797
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137286,0.0250183,434.395,411.797

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0859166
  gflops (total): 126.493
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563798
  gflops (eval):  192.761
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563798,192.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7463
  maximum absolute entry in einsum_ir solution: 56.7463
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139738
  time (eval):    0.0250108
  gflops (eval):  434.525
  gflops (total): 411.532
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139738,0.0250108,434.525,411.532

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0844443
  gflops (total): 128.698
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.698

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056243
  gflops (eval):  193.23
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056243,193.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8309
  maximum absolute entry in einsum_ir solution: 59.8309
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137185
  time (eval):    0.0250681
  gflops (eval):  433.532
  gflops (total): 411.038
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137185,0.0250681,433.532,411.038

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853368
  gflops (total): 127.352
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565587
  gflops (eval):  192.151
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565587,192.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0331
  maximum absolute entry in einsum_ir solution: 57.0331
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00164445
  time (eval):    0.0250013
  gflops (eval):  434.69
  gflops (total): 407.863
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00164445,0.0250013,434.69,407.863

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0858598
  gflops (total): 126.576
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558202
  gflops (eval):  194.693
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558202,194.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3468
  maximum absolute entry in einsum_ir solution: 57.3468
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137226
  time (eval):    0.0248658
  gflops (eval):  437.059
  gflops (total): 414.201
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137226,0.0248658,437.059,414.201

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0848315
  gflops (total): 128.111
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561339
  gflops (eval):  193.605
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561339,193.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0635
  maximum absolute entry in einsum_ir solution: 59.0635
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139794
  time (eval):    0.0250386
  gflops (eval):  434.043
  gflops (total): 411.091
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139794,0.0250386,434.043,411.091

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0845442
  gflops (total): 128.546
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567057
  gflops (eval):  191.653
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567057,191.653,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0478
  maximum absolute entry in einsum_ir solution: 61.0478
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140075
  time (eval):    0.0250954
  gflops (eval):  433.06
  gflops (total): 410.166
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140075,0.0250954,433.06,410.166

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0867226
  gflops (total): 125.317
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,125.317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554961
  gflops (eval):  195.83
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554961,195.83,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0562
  maximum absolute entry in einsum_ir solution: 60.0562
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138465
  time (eval):    0.0250095
  gflops (eval):  434.547
  gflops (total): 411.751
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138465,0.0250095,434.547,411.751

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0848525
  gflops (total): 128.079
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562625
  gflops (eval):  193.163
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562625,193.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6202
  maximum absolute entry in einsum_ir solution: 61.6202
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136833
  time (eval):    0.0250322
  gflops (eval):  434.154
  gflops (total): 411.652
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136833,0.0250322,434.154,411.652

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850243
  gflops (total): 127.82
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056324
  gflops (eval):  192.952
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056324,192.952,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2926
  maximum absolute entry in einsum_ir solution: 58.2926
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013853
  time (eval):    0.0250292
  gflops (eval):  434.205
  gflops (total): 411.434
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013853,0.0250292,434.205,411.434

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0840979
  gflops (total): 129.228
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,129.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0544964
  gflops (eval):  199.423
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0544964,199.423,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.84
  maximum absolute entry in einsum_ir solution: 56.84
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138149
  time (eval):    0.025027
  gflops (eval):  434.244
  gflops (total): 411.528
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138149,0.025027,434.244,411.528

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0856462
  gflops (total): 126.892
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.892

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558948
  gflops (eval):  194.433
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558948,194.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6356
  maximum absolute entry in einsum_ir solution: 59.6356
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00147028
  time (eval):    0.0250051
  gflops (eval):  434.625
  gflops (total): 410.488
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00147028,0.0250051,434.625,410.488

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.08491
  gflops (total): 127.992
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.992

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055957
  gflops (eval):  194.217
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055957,194.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0908
  maximum absolute entry in einsum_ir solution: 57.0908
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013884
  time (eval):    0.0250505
  gflops (eval):  433.837
  gflops (total): 411.055
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013884,0.0250505,433.837,411.055

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851122
  gflops (total): 127.688
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.688

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566589
  gflops (eval):  191.811
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566589,191.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6264
  maximum absolute entry in einsum_ir solution: 59.6264
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013808
  time (eval):    0.0250304
  gflops (eval):  434.185
  gflops (total): 411.485
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013808,0.0250304,434.185,411.485

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854671
  gflops (total): 127.158
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.158

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055819
  gflops (eval):  194.698
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055819,194.698,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8725
  maximum absolute entry in einsum_ir solution: 58.8725
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138426
  time (eval):    0.025011
  gflops (eval):  434.521
  gflops (total): 411.734
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138426,0.025011,434.521,411.734

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853799
  gflops (total): 127.288
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.288

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556675
  gflops (eval):  195.228
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556675,195.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9571
  maximum absolute entry in einsum_ir solution: 60.9571
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145096
  time (eval):    0.0250548
  gflops (eval):  433.762
  gflops (total): 410.017
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145096,0.0250548,433.762,410.017

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0855866
  gflops (total): 126.98
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.05542
  gflops (eval):  196.099
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.05542,196.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6908
  maximum absolute entry in einsum_ir solution: 64.6908
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138879
  time (eval):    0.0250776
  gflops (eval):  433.368
  gflops (total): 410.627
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138879,0.0250776,433.368,410.627

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0849192
  gflops (total): 127.978
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553544
  gflops (eval):  196.332
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553544,196.332,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6056
  maximum absolute entry in einsum_ir solution: 56.6056
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00150633
  time (eval):    0.02503
  gflops (eval):  434.191
  gflops (total): 409.545
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00150633,0.02503,434.191,409.545

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0845326
  gflops (total): 128.564
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563198
  gflops (eval):  192.966
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563198,192.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6871
  maximum absolute entry in einsum_ir solution: 56.6871
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137403
  time (eval):    0.0250206
  gflops (eval):  434.356
  gflops (total): 411.744
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137403,0.0250206,434.356,411.744

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0849324
  gflops (total): 127.959
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558174
  gflops (eval):  194.703
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558174,194.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.534
  maximum absolute entry in einsum_ir solution: 60.534
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139519
  time (eval):    0.0249958
  gflops (eval):  434.785
  gflops (total): 411.8
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139519,0.0249958,434.785,411.8

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0855866
  gflops (total): 126.98
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547194
  gflops (eval):  198.61
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547194,198.61,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0489
  maximum absolute entry in einsum_ir solution: 60.0489
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143721
  time (eval):    0.0250544
  gflops (eval):  433.768
  gflops (total): 410.236
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143721,0.0250544,433.768,410.236

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851632
  gflops (total): 127.612
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568064
  gflops (eval):  191.313
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568064,191.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3623
  maximum absolute entry in einsum_ir solution: 61.3623
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137416
  time (eval):    0.0249989
  gflops (eval):  434.732
  gflops (total): 412.08
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137416,0.0249989,434.732,412.08

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0847073
  gflops (total): 128.299
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.299

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562803
  gflops (eval):  193.102
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562803,193.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8192
  maximum absolute entry in einsum_ir solution: 62.8192
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143869
  time (eval):    0.0250348
  gflops (eval):  434.109
  gflops (total): 410.517
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143869,0.0250348,434.109,410.517

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854124
  gflops (total): 127.239
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556335
  gflops (eval):  195.347
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556335,195.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.0012
  maximum absolute entry in einsum_ir solution: 65.0012
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143173
  time (eval):    0.0250428
  gflops (eval):  433.969
  gflops (total): 410.5
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143173,0.0250428,433.969,410.5

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853897
  gflops (total): 127.273
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566377
  gflops (eval):  191.883
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566377,191.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8364
  maximum absolute entry in einsum_ir solution: 60.8364
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139202
  time (eval):    0.0250611
  gflops (eval):  433.654
  gflops (total): 410.834
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139202,0.0250611,433.654,410.834

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0848328
  gflops (total): 128.109
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.109

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556996
  gflops (eval):  195.115
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556996,195.115,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.7506
  maximum absolute entry in einsum_ir solution: 62.7506
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138449
  time (eval):    0.0251121
  gflops (eval):  432.772
  gflops (total): 410.159
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138449,0.0251121,432.772,410.159

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850336
  gflops (total): 127.806
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552654
  gflops (eval):  196.648
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552654,196.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7606
  maximum absolute entry in einsum_ir solution: 58.7606
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001389
  time (eval):    0.0250598
  gflops (eval):  433.675
  gflops (total): 410.9
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.001389,0.0250598,433.675,410.9

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0847226
  gflops (total): 128.275
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.275

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563457
  gflops (eval):  192.878
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563457,192.878,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0591
  maximum absolute entry in einsum_ir solution: 56.0591
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140626
  time (eval):    0.0250355
  gflops (eval):  434.096
  gflops (total): 411.009
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140626,0.0250355,434.096,411.009

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0847582
  gflops (total): 128.221
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.221

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056039
  gflops (eval):  193.933
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056039,193.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6848
  maximum absolute entry in einsum_ir solution: 63.6848
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140539
  time (eval):    0.0250638
  gflops (eval):  433.606
  gflops (total): 410.584
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140539,0.0250638,433.606,410.584

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854618
  gflops (total): 127.166
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561301
  gflops (eval):  193.618
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561301,193.618,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5455
  maximum absolute entry in einsum_ir solution: 57.5455
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0017813
  time (eval):    0.0250677
  gflops (eval):  433.539
  gflops (total): 404.775
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0017813,0.0250677,433.539,404.775

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850511
  gflops (total): 127.78
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0567487
  gflops (eval):  191.508
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0567487,191.508,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4574
  maximum absolute entry in einsum_ir solution: 61.4574
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138184
  time (eval):    0.0250585
  gflops (eval):  433.698
  gflops (total): 411.032
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138184,0.0250585,433.698,411.032

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.085256
  gflops (total): 127.473
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559963
  gflops (eval):  194.081
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559963,194.081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.175
  maximum absolute entry in einsum_ir solution: 57.175
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139398
  time (eval):    0.0250569
  gflops (eval):  433.725
  gflops (total): 410.867
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139398,0.0250569,433.725,410.867

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854143
  gflops (total): 127.237
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.237

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554879
  gflops (eval):  195.859
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554879,195.859,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8809
  maximum absolute entry in einsum_ir solution: 57.8809
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138598
  time (eval):    0.0250031
  gflops (eval):  434.659
  gflops (total): 411.831
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138598,0.0250031,434.659,411.831

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0848104
  gflops (total): 128.143
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555748
  gflops (eval):  195.553
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555748,195.553,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.4912
  maximum absolute entry in einsum_ir solution: 61.4912
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138954
  time (eval):    0.0250236
  gflops (eval):  434.302
  gflops (total): 411.455
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138954,0.0250236,434.302,411.455

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0847549
  gflops (total): 128.226
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564251
  gflops (eval):  192.606
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564251,192.606,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      67.6709
  maximum absolute entry in einsum_ir solution: 67.6709
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141816
  time (eval):    0.0250521
  gflops (eval):  433.809
  gflops (total): 410.567
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141816,0.0250521,433.809,410.567

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851603
  gflops (total): 127.616
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055397
  gflops (eval):  196.181
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055397,196.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7089
  maximum absolute entry in einsum_ir solution: 56.7089
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143153
  time (eval):    0.0250087
  gflops (eval):  434.562
  gflops (total): 411.034
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143153,0.0250087,434.562,411.034

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0886075
  gflops (total): 122.651
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,122.651

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563311
  gflops (eval):  192.927
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563311,192.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0319
  maximum absolute entry in einsum_ir solution: 59.0319
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142955
  time (eval):    0.0250155
  gflops (eval):  434.443
  gflops (total): 410.958
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142955,0.0250155,434.443,410.958

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0841918
  gflops (total): 129.084
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,129.084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557181
  gflops (eval):  195.05
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557181,195.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      54.1126
  maximum absolute entry in einsum_ir solution: 54.1126
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00151701
  time (eval):    0.0250151
  gflops (eval):  434.451
  gflops (total): 409.61
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00151701,0.0250151,434.451,409.61

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0841749
  gflops (total): 129.11
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,129.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556968
  gflops (eval):  195.125
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556968,195.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5427
  maximum absolute entry in einsum_ir solution: 59.5427
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137599
  time (eval):    0.025014
  gflops (eval):  434.469
  gflops (total): 411.816
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137599,0.025014,434.469,411.816

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854763
  gflops (total): 127.144
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557271
  gflops (eval):  195.019
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557271,195.019,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.9099
  maximum absolute entry in einsum_ir solution: 65.9099
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139239
  time (eval):    0.0250038
  gflops (eval):  434.647
  gflops (total): 411.72
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139239,0.0250038,434.647,411.72

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853063
  gflops (total): 127.398
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555036
  gflops (eval):  195.804
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555036,195.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6537
  maximum absolute entry in einsum_ir solution: 63.6537
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013787
  time (eval):    0.0250252
  gflops (eval):  434.275
  gflops (total): 411.599
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013787,0.0250252,434.275,411.599

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854532
  gflops (total): 127.179
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056425
  gflops (eval):  192.607
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056425,192.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1136
  maximum absolute entry in einsum_ir solution: 59.1136
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0016373
  time (eval):    0.0250296
  gflops (eval):  434.199
  gflops (total): 407.54
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0016373,0.0250296,434.199,407.54

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.085808
  gflops (total): 126.653
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559964
  gflops (eval):  194.081
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559964,194.081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3306
  maximum absolute entry in einsum_ir solution: 57.3306
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013771
  time (eval):    0.0250305
  gflops (eval):  434.183
  gflops (total): 411.541
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013771,0.0250305,434.183,411.541

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853305
  gflops (total): 127.361
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559139
  gflops (eval):  194.367
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559139,194.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.5898
  maximum absolute entry in einsum_ir solution: 62.5898
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139734
  time (eval):    0.0250369
  gflops (eval):  434.072
  gflops (total): 411.127
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139734,0.0250369,434.072,411.127

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0848088
  gflops (total): 128.145
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555702
  gflops (eval):  195.569
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555702,195.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.2491
  maximum absolute entry in einsum_ir solution: 60.2491
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137986
  time (eval):    0.0250337
  gflops (eval):  434.128
  gflops (total): 411.449
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137986,0.0250337,434.128,411.449

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.087141
  gflops (total): 124.715
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,124.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558314
  gflops (eval):  194.654
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558314,194.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.2244
  maximum absolute entry in einsum_ir solution: 63.2244
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137792
  time (eval):    0.0250535
  gflops (eval):  433.785
  gflops (total): 411.171
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137792,0.0250535,433.785,411.171

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0839426
  gflops (total): 129.467
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,129.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569025
  gflops (eval):  190.99
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569025,190.99,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3532
  maximum absolute entry in einsum_ir solution: 58.3532
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00177331
  time (eval):    0.0250268
  gflops (eval):  434.248
  gflops (total): 405.514
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00177331,0.0250268,434.248,405.514

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0860373
  gflops (total): 126.315
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569218
  gflops (eval):  190.925
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569218,190.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6332
  maximum absolute entry in einsum_ir solution: 60.6332
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138434
  time (eval):    0.0250103
  gflops (eval):  434.534
  gflops (total): 411.744
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138434,0.0250103,434.534,411.744

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0858383
  gflops (total): 126.608
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556814
  gflops (eval):  195.179
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556814,195.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5317
  maximum absolute entry in einsum_ir solution: 60.5317
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00167611
  time (eval):    0.0250172
  gflops (eval):  434.413
  gflops (total): 407.136
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00167611,0.0250172,434.413,407.136

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0850318
  gflops (total): 127.809
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560364
  gflops (eval):  193.942
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560364,193.942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0288
  maximum absolute entry in einsum_ir solution: 56.0288
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138414
  time (eval):    0.0250566
  gflops (eval):  433.731
  gflops (total): 411.026
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138414,0.0250566,433.731,411.026

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0845262
  gflops (total): 128.573
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557293
  gflops (eval):  195.011
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557293,195.011,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.4235
  maximum absolute entry in einsum_ir solution: 60.4235
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137647
  time (eval):    0.025015
  gflops (eval):  434.453
  gflops (total): 411.794
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137647,0.025015,434.453,411.794

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0854459
  gflops (total): 127.189
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0549933
  gflops (eval):  197.621
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0549933,197.621,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.918
  maximum absolute entry in einsum_ir solution: 58.918
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138626
  time (eval):    0.0249796
  gflops (eval):  435.068
  gflops (total): 412.193
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138626,0.0249796,435.068,412.193

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0846146
  gflops (total): 128.439
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,128.439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559023
  gflops (eval):  194.408
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559023,194.408,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.76
  maximum absolute entry in einsum_ir solution: 59.76
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146921
  time (eval):    0.0250253
  gflops (eval):  434.273
  gflops (total): 410.191
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146921,0.0250253,434.273,410.191

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851228
  gflops (total): 127.672
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564641
  gflops (eval):  192.473
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564641,192.473,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3139
  maximum absolute entry in einsum_ir solution: 60.3139
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00167165
  time (eval):    0.0250243
  gflops (eval):  434.29
  gflops (total): 407.096
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00167165,0.0250243,434.29,407.096

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0856938
  gflops (total): 126.822
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,126.822

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557093
  gflops (eval):  195.081
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557093,195.081,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.5049
  maximum absolute entry in einsum_ir solution: 60.5049
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138399
  time (eval):    0.0250547
  gflops (eval):  433.764
  gflops (total): 411.057
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138399,0.0250547,433.764,411.057

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0838074
  gflops (total): 129.676
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,129.676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555511
  gflops (eval):  195.636
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555511,195.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.2071
  maximum absolute entry in einsum_ir solution: 62.2071
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00166868
  time (eval):    0.0250216
  gflops (eval):  434.337
  gflops (total): 407.183
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00166868,0.0250216,434.337,407.183

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.08536
  gflops (total): 127.318
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564769
  gflops (eval):  192.429
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564769,192.429,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3851
  maximum absolute entry in einsum_ir solution: 56.3851
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138647
  time (eval):    0.0249929
  gflops (eval):  434.835
  gflops (total): 411.981
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138647,0.0249929,434.835,411.981

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0851725
  gflops (total): 127.598
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552101
  gflops (eval):  196.845
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552101,196.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2123
  maximum absolute entry in einsum_ir solution: 61.2123
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00153897
  time (eval):    0.0250078
  gflops (eval):  434.578
  gflops (total): 409.385
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00153897,0.0250078,434.578,409.385

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0855397
  gflops (total): 127.05
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0547937
  gflops (eval):  198.341
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0547937,198.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6407
  maximum absolute entry in einsum_ir solution: 57.6407
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138043
  time (eval):    0.0250667
  gflops (eval):  433.556
  gflops (total): 410.926
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138043,0.0250667,433.556,410.926

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853212
  gflops (total): 127.375
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561216
  gflops (eval):  193.648
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561216,193.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3295
  maximum absolute entry in einsum_ir solution: 61.3295
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137295
  time (eval):    0.0250271
  gflops (eval):  434.243
  gflops (total): 411.66
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137295,0.0250271,434.243,411.66

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0849712
  gflops (total): 127.9
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0550458
  gflops (eval):  197.432
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0550458,197.432,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6067
  maximum absolute entry in einsum_ir solution: 60.6067
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,b
  a,e,c,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 1 0 4 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[0,4,2,3]->[0,2,4,3]],[[4,1]->[1,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.001387
  time (eval):    0.0250452
  gflops (eval):  433.929
  gflops (total): 411.159
CSV_DATA: einsum_ir,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0.001387,0.0250452,433.929,411.159

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0853835
  gflops (total): 127.282
CSV_DATA: at::einsum,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,127.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553989
  gflops (eval):  196.174
CSV_DATA: at::matmul,"eb,aecd->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553989,196.174,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0962
  maximum absolute entry in einsum_ir solution: 63.0962
  maximum element-wise difference:              3.43323e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138449
  time (eval):    0.0118926
  gflops (eval):  913.827
  gflops (total): 818.537
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138449,0.0118926,913.827,818.537

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0906764
  gflops (total): 119.853
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.853

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553725
  gflops (eval):  196.267
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553725,196.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.6936
  maximum absolute entry in einsum_ir solution: 62.6936
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00168348
  time (eval):    0.0118906
  gflops (eval):  913.985
  gflops (total): 800.631
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00168348,0.0118906,913.985,800.631

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904019
  gflops (total): 120.217
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557096
  gflops (eval):  195.08
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557096,195.08,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3264
  maximum absolute entry in einsum_ir solution: 61.3264
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0015712
  time (eval):    0.01186
  gflops (eval):  916.342
  gflops (total): 809.147
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0015712,0.01186,916.342,809.147

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.091318
  gflops (total): 119.011
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555086
  gflops (eval):  195.786
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555086,195.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3658
  maximum absolute entry in einsum_ir solution: 61.3658
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138494
  time (eval):    0.0118408
  gflops (eval):  917.827
  gflops (total): 821.717
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138494,0.0118408,917.827,821.717

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.089224
  gflops (total): 121.804
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554407
  gflops (eval):  196.026
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554407,196.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.8644
  maximum absolute entry in einsum_ir solution: 62.8644
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013869
  time (eval):    0.0118738
  gflops (eval):  915.28
  gflops (total): 819.553
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013869,0.0118738,915.28,819.553

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896542
  gflops (total): 121.219
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564052
  gflops (eval):  192.674
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564052,192.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1935
  maximum absolute entry in einsum_ir solution: 59.1935
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138185
  time (eval):    0.0118608
  gflops (eval):  916.282
  gflops (total): 820.669
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138185,0.0118608,916.282,820.669

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904094
  gflops (total): 120.207
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560224
  gflops (eval):  193.991
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560224,193.991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.478
  maximum absolute entry in einsum_ir solution: 60.478
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137779
  time (eval):    0.0118545
  gflops (eval):  916.766
  gflops (total): 821.309
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137779,0.0118545,916.766,821.309

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0894441
  gflops (total): 121.504
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556321
  gflops (eval):  195.352
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556321,195.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.6665
  maximum absolute entry in einsum_ir solution: 62.6665
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142816
  time (eval):    0.0118734
  gflops (eval):  915.305
  gflops (total): 817.031
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142816,0.0118734,915.305,817.031

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0893878
  gflops (total): 121.581
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562219
  gflops (eval):  193.302
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562219,193.302,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.2473
  maximum absolute entry in einsum_ir solution: 61.2473
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013833
  time (eval):    0.0118722
  gflops (eval):  915.404
  gflops (total): 819.875
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013833,0.0118722,915.404,819.875

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0903111
  gflops (total): 120.338
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559402
  gflops (eval):  194.276
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559402,194.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.4822
  maximum absolute entry in einsum_ir solution: 59.4822
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136996
  time (eval):    0.0119198
  gflops (eval):  911.744
  gflops (total): 817.758
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136996,0.0119198,911.744,817.758

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896894
  gflops (total): 121.172
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.172

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563488
  gflops (eval):  192.867
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563488,192.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.3759
  maximum absolute entry in einsum_ir solution: 57.3759
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138056
  time (eval):    0.0118898
  gflops (eval):  914.046
  gflops (total): 818.955
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138056,0.0118898,914.046,818.955

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0890859
  gflops (total): 121.993
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561828
  gflops (eval):  193.437
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561828,193.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0912
  maximum absolute entry in einsum_ir solution: 58.0912
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138448
  time (eval):    0.01187
  gflops (eval):  915.569
  gflops (total): 819.935
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138448,0.01187,915.569,819.935

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0907756
  gflops (total): 119.722
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563621
  gflops (eval):  192.822
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563621,192.822,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.6761
  maximum absolute entry in einsum_ir solution: 63.6761
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139199
  time (eval):    0.0119006
  gflops (eval):  913.214
  gflops (total): 817.583
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139199,0.0119006,913.214,817.583

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0895219
  gflops (total): 121.398
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.398

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.05576
  gflops (eval):  194.903
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.05576,194.903,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.847
  maximum absolute entry in einsum_ir solution: 62.847
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137923
  time (eval):    0.0118731
  gflops (eval):  915.332
  gflops (total): 820.069
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137923,0.0118731,915.332,820.069

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0900529
  gflops (total): 120.683
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055809
  gflops (eval):  194.733
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055809,194.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0461
  maximum absolute entry in einsum_ir solution: 62.0461
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138732
  time (eval):    0.0118781
  gflops (eval):  914.948
  gflops (total): 819.261
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138732,0.0118781,914.948,819.261

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896254
  gflops (total): 121.258
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055999
  gflops (eval):  194.072
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055999,194.072,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.917
  maximum absolute entry in einsum_ir solution: 60.917
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00141506
  time (eval):    0.0118648
  gflops (eval):  915.968
  gflops (total): 818.366
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00141506,0.0118648,915.968,818.366

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.090804
  gflops (total): 119.684
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553363
  gflops (eval):  196.396
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553363,196.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3526
  maximum absolute entry in einsum_ir solution: 60.3526
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013869
  time (eval):    0.0118813
  gflops (eval):  914.699
  gflops (total): 819.087
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013869,0.0118813,914.699,819.087

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0895535
  gflops (total): 121.356
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.356

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559918
  gflops (eval):  194.097
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559918,194.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3687
  maximum absolute entry in einsum_ir solution: 61.3687
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138042
  time (eval):    0.0118808
  gflops (eval):  914.741
  gflops (total): 819.521
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138042,0.0118808,914.741,819.521

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0903745
  gflops (total): 120.253
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.253

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563633
  gflops (eval):  192.817
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563633,192.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5713
  maximum absolute entry in einsum_ir solution: 61.5713
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137918
  time (eval):    0.0119193
  gflops (eval):  911.785
  gflops (total): 817.224
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137918,0.0119193,911.785,817.224

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896338
  gflops (total): 121.247
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.247

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555062
  gflops (eval):  195.795
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555062,195.795,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6249
  maximum absolute entry in einsum_ir solution: 57.6249
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137897
  time (eval):    0.0118733
  gflops (eval):  915.313
  gflops (total): 820.07
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137897,0.0118733,915.313,820.07

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0895305
  gflops (total): 121.387
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561667
  gflops (eval):  193.492
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561667,193.492,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.9363
  maximum absolute entry in einsum_ir solution: 58.9363
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00143106
  time (eval):    0.0118972
  gflops (eval):  913.478
  gflops (total): 815.397
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00143106,0.0118972,913.478,815.397

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901725
  gflops (total): 120.523
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553653
  gflops (eval):  196.293
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553653,196.293,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.0701
  maximum absolute entry in einsum_ir solution: 56.0701
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137769
  time (eval):    0.011886
  gflops (eval):  914.339
  gflops (total): 819.367
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137769,0.011886,914.339,819.367

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0895539
  gflops (total): 121.355
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565901
  gflops (eval):  192.045
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565901,192.045,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5289
  maximum absolute entry in einsum_ir solution: 57.5289
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138172
  time (eval):    0.0118747
  gflops (eval):  915.209
  gflops (total): 819.817
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138172,0.0118747,915.209,819.817

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0897888
  gflops (total): 121.038
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560386
  gflops (eval):  193.934
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560386,193.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1754
  maximum absolute entry in einsum_ir solution: 58.1754
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138818
  time (eval):    0.0118749
  gflops (eval):  915.196
  gflops (total): 819.407
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138818,0.0118749,915.196,819.407

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0894507
  gflops (total): 121.495
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.495

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556177
  gflops (eval):  195.402
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556177,195.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.0275
  maximum absolute entry in einsum_ir solution: 57.0275
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137328
  time (eval):    0.0118851
  gflops (eval):  914.409
  gflops (total): 819.696
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137328,0.0118851,914.409,819.696

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.090046
  gflops (total): 120.692
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559903
  gflops (eval):  194.102
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559903,194.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5264
  maximum absolute entry in einsum_ir solution: 57.5264
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140323
  time (eval):    0.0118808
  gflops (eval):  914.737
  gflops (total): 818.111
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140323,0.0118808,914.737,818.111

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0893197
  gflops (total): 121.673
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553948
  gflops (eval):  196.188
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553948,196.188,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0719
  maximum absolute entry in einsum_ir solution: 63.0719
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139108
  time (eval):    0.0119332
  gflops (eval):  910.724
  gflops (total): 815.643
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139108,0.0119332,910.724,815.643

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0907231
  gflops (total): 119.791
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.791

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056435
  gflops (eval):  192.572
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056435,192.572,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.7562
  maximum absolute entry in einsum_ir solution: 59.7562
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137464
  time (eval):    0.0118822
  gflops (eval):  914.631
  gflops (total): 819.79
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137464,0.0118822,914.631,819.79

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905886
  gflops (total): 119.969
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.969

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563364
  gflops (eval):  192.91
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563364,192.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.301
  maximum absolute entry in einsum_ir solution: 61.301
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139176
  time (eval):    0.0119123
  gflops (eval):  912.321
  gflops (total): 816.882
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139176,0.0119123,912.321,816.882

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0899166
  gflops (total): 120.866
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563262
  gflops (eval):  192.944
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563262,192.944,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7385
  maximum absolute entry in einsum_ir solution: 55.7385
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00153701
  time (eval):    0.0118794
  gflops (eval):  914.85
  gflops (total): 810.042
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00153701,0.0118794,914.85,810.042

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0897152
  gflops (total): 121.137
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.137

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559417
  gflops (eval):  194.27
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559417,194.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.1912
  maximum absolute entry in einsum_ir solution: 61.1912
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137832
  time (eval):    0.0118993
  gflops (eval):  913.313
  gflops (total): 818.504
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137832,0.0118993,913.313,818.504

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904264
  gflops (total): 120.184
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564817
  gflops (eval):  192.413
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564817,192.413,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3378
  maximum absolute entry in einsum_ir solution: 62.3378
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00140492
  time (eval):    0.0118794
  gflops (eval):  914.849
  gflops (total): 818.096
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00140492,0.0118794,914.849,818.096

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0895129
  gflops (total): 121.411
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.411

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563169
  gflops (eval):  192.976
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563169,192.976,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.0576
  maximum absolute entry in einsum_ir solution: 61.0576
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138767
  time (eval):    0.0118642
  gflops (eval):  916.021
  gflops (total): 820.099
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138767,0.0118642,916.021,820.099

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905647
  gflops (total): 120.001
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0570221
  gflops (eval):  190.59
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0570221,190.59,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.42
  maximum absolute entry in einsum_ir solution: 59.42
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00164934
  time (eval):    0.0118953
  gflops (eval):  913.627
  gflops (total): 802.374
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00164934,0.0118953,913.627,802.374

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902535
  gflops (total): 120.414
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.414

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555845
  gflops (eval):  195.519
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555845,195.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.086
  maximum absolute entry in einsum_ir solution: 60.086
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138438
  time (eval):    0.0119234
  gflops (eval):  911.473
  gflops (total): 816.654
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138438,0.0119234,911.473,816.654

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902146
  gflops (total): 120.466
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.466

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559513
  gflops (eval):  194.237
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559513,194.237,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.659
  maximum absolute entry in einsum_ir solution: 57.659
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138108
  time (eval):    0.0118661
  gflops (eval):  915.872
  gflops (total): 820.388
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138108,0.0118661,915.872,820.388

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0894253
  gflops (total): 121.53
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557895
  gflops (eval):  194.801
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557895,194.801,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1108
  maximum absolute entry in einsum_ir solution: 59.1108
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00158574
  time (eval):    0.011901
  gflops (eval):  913.187
  gflops (total): 805.816
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00158574,0.011901,913.187,805.816

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902413
  gflops (total): 120.431
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563853
  gflops (eval):  192.742
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563853,192.742,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.6774
  maximum absolute entry in einsum_ir solution: 57.6774
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013692
  time (eval):    0.0118822
  gflops (eval):  914.628
  gflops (total): 820.124
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013692,0.0118822,914.628,820.124

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896821
  gflops (total): 121.182
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556299
  gflops (eval):  195.359
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556299,195.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9246
  maximum absolute entry in einsum_ir solution: 60.9246
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137251
  time (eval):    0.0118662
  gflops (eval):  915.867
  gflops (total): 820.915
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137251,0.0118662,915.867,820.915

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0895743
  gflops (total): 121.327
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.327

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557147
  gflops (eval):  195.062
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557147,195.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.0186
  maximum absolute entry in einsum_ir solution: 58.0186
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139156
  time (eval):    0.0118926
  gflops (eval):  913.83
  gflops (total): 818.103
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139156,0.0118926,913.83,818.103

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0910568
  gflops (total): 119.352
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554659
  gflops (eval):  195.937
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554659,195.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3833
  maximum absolute entry in einsum_ir solution: 62.3833
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138745
  time (eval):    0.0118941
  gflops (eval):  913.713
  gflops (total): 818.263
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138745,0.0118941,913.713,818.263

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0897406
  gflops (total): 121.103
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.103

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559917
  gflops (eval):  194.097
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559917,194.097,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.739
  maximum absolute entry in einsum_ir solution: 57.739
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136886
  time (eval):    0.0118861
  gflops (eval):  914.327
  gflops (total): 819.903
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136886,0.0118861,914.327,819.903

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0908493
  gflops (total): 119.625
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0569512
  gflops (eval):  190.827
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0569512,190.827,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4481
  maximum absolute entry in einsum_ir solution: 57.4481
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138142
  time (eval):    0.0119223
  gflops (eval):  911.555
  gflops (total): 816.901
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138142,0.0119223,911.555,816.901

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.090058
  gflops (total): 120.676
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.676

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562088
  gflops (eval):  193.347
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562088,193.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4665
  maximum absolute entry in einsum_ir solution: 58.4665
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138001
  time (eval):    0.0118998
  gflops (eval):  913.281
  gflops (total): 818.375
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138001,0.0118998,913.281,818.375

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904497
  gflops (total): 120.153
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.153

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559665
  gflops (eval):  194.184
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559665,194.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.0008
  maximum absolute entry in einsum_ir solution: 60.0008
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138988
  time (eval):    0.0118744
  gflops (eval):  915.232
  gflops (total): 819.331
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138988,0.0118744,915.232,819.331

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901343
  gflops (total): 120.574
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553841
  gflops (eval):  196.226
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553841,196.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.6393
  maximum absolute entry in einsum_ir solution: 59.6393
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139206
  time (eval):    0.0118778
  gflops (eval):  914.971
  gflops (total): 818.986
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139206,0.0118778,914.971,818.986

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.091546
  gflops (total): 118.714
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553715
  gflops (eval):  196.271
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553715,196.271,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3249
  maximum absolute entry in einsum_ir solution: 61.3249
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00124535
  time (eval):    0.0118936
  gflops (eval):  913.756
  gflops (total): 827.147
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00124535,0.0118936,913.756,827.147

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0915042
  gflops (total): 118.769
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,118.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560455
  gflops (eval):  193.911
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560455,193.911,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.0833
  maximum absolute entry in einsum_ir solution: 64.0833
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138058
  time (eval):    0.0119044
  gflops (eval):  912.922
  gflops (total): 818.051
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138058,0.0119044,912.922,818.051

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904946
  gflops (total): 120.094
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554855
  gflops (eval):  195.868
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554855,195.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3531
  maximum absolute entry in einsum_ir solution: 60.3531
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138226
  time (eval):    0.0118754
  gflops (eval):  915.156
  gflops (total): 819.741
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138226,0.0118754,915.156,819.741

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905266
  gflops (total): 120.051
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555314
  gflops (eval):  195.706
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555314,195.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9336
  maximum absolute entry in einsum_ir solution: 56.9336
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137589
  time (eval):    0.0118877
  gflops (eval):  914.206
  gflops (total): 819.372
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137589,0.0118877,914.206,819.372

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901858
  gflops (total): 120.505
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564515
  gflops (eval):  192.516
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564515,192.516,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.3503
  maximum absolute entry in einsum_ir solution: 56.3503
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139175
  time (eval):    0.0118747
  gflops (eval):  915.205
  gflops (total): 819.193
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139175,0.0118747,915.205,819.193

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0900025
  gflops (total): 120.75
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0554157
  gflops (eval):  196.114
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0554157,196.114,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.7915
  maximum absolute entry in einsum_ir solution: 58.7915
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139093
  time (eval):    0.0118664
  gflops (eval):  915.849
  gflops (total): 819.76
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139093,0.0118664,915.849,819.76

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0899855
  gflops (total): 120.773
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565956
  gflops (eval):  192.026
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565956,192.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.3441
  maximum absolute entry in einsum_ir solution: 65.3441
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139172
  time (eval):    0.0118671
  gflops (eval):  915.795
  gflops (total): 819.668
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139172,0.0118671,915.795,819.668

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0911217
  gflops (total): 119.267
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.267

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560479
  gflops (eval):  193.902
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560479,193.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.6825
  maximum absolute entry in einsum_ir solution: 58.6825
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142767
  time (eval):    0.0119053
  gflops (eval):  912.854
  gflops (total): 815.107
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142767,0.0119053,912.854,815.107

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0906148
  gflops (total): 119.934
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.934

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558493
  gflops (eval):  194.592
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558493,194.592,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.5049
  maximum absolute entry in einsum_ir solution: 59.5049
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137796
  time (eval):    0.0118881
  gflops (eval):  914.173
  gflops (total): 819.217
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137796,0.0118881,914.173,819.217

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896242
  gflops (total): 121.26
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555188
  gflops (eval):  195.75
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555188,195.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.8962
  maximum absolute entry in einsum_ir solution: 64.8962
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139568
  time (eval):    0.0118591
  gflops (eval):  916.411
  gflops (total): 819.916
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139568,0.0118591,916.411,819.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901092
  gflops (total): 120.607
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552871
  gflops (eval):  196.571
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552871,196.571,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5597
  maximum absolute entry in einsum_ir solution: 57.5597
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142928
  time (eval):    0.0118822
  gflops (eval):  914.628
  gflops (total): 816.423
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142928,0.0118822,914.628,816.423

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901419
  gflops (total): 120.563
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556051
  gflops (eval):  195.447
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556051,195.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.4664
  maximum absolute entry in einsum_ir solution: 56.4664
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142853
  time (eval):    0.0118722
  gflops (eval):  915.402
  gflops (total): 817.086
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142853,0.0118722,915.402,817.086

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904812
  gflops (total): 120.111
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.111

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0552305
  gflops (eval):  196.772
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0552305,196.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6739
  maximum absolute entry in einsum_ir solution: 61.6739
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137985
  time (eval):    0.011902
  gflops (eval):  913.11
  gflops (total): 818.247
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137985,0.011902,913.11,818.247

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904596
  gflops (total): 120.14
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0555846
  gflops (eval):  195.518
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0555846,195.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.1369
  maximum absolute entry in einsum_ir solution: 57.1369
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00146997
  time (eval):    0.0118677
  gflops (eval):  915.75
  gflops (total): 814.823
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00146997,0.0118677,915.75,814.823

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905549
  gflops (total): 120.014
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560526
  gflops (eval):  193.886
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560526,193.886,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6144
  maximum absolute entry in einsum_ir solution: 56.6144
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137811
  time (eval):    0.0118929
  gflops (eval):  913.81
  gflops (total): 818.916
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137811,0.0118929,913.81,818.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0892444
  gflops (total): 121.776
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559924
  gflops (eval):  194.094
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559924,194.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.0093
  maximum absolute entry in einsum_ir solution: 63.0093
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144017
  time (eval):    0.0119016
  gflops (eval):  913.136
  gflops (total): 814.569
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144017,0.0119016,913.136,814.569

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904401
  gflops (total): 120.166
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559659
  gflops (eval):  194.186
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559659,194.186,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      65.4895
  maximum absolute entry in einsum_ir solution: 65.4895
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144801
  time (eval):    0.0119038
  gflops (eval):  912.974
  gflops (total): 813.961
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144801,0.0119038,912.974,813.961

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0898131
  gflops (total): 121.005
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.005

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055499
  gflops (eval):  195.82
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055499,195.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.8591
  maximum absolute entry in einsum_ir solution: 59.8591
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139207
  time (eval):    0.0118777
  gflops (eval):  914.977
  gflops (total): 818.991
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139207,0.0118777,914.977,818.991

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905778
  gflops (total): 119.983
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.983

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0558772
  gflops (eval):  194.495
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0558772,194.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.3098
  maximum absolute entry in einsum_ir solution: 62.3098
  maximum element-wise difference:              1.90735e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139426
  time (eval):    0.0118838
  gflops (eval):  914.511
  gflops (total): 818.482
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139426,0.0118838,914.511,818.482

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0893433
  gflops (total): 121.641
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557738
  gflops (eval):  194.855
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557738,194.855,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.9919
  maximum absolute entry in einsum_ir solution: 56.9919
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138343
  time (eval):    0.0118876
  gflops (eval):  914.219
  gflops (total): 818.916
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138343,0.0118876,914.219,818.916

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0899305
  gflops (total): 120.847
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556838
  gflops (eval):  195.17
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556838,195.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6441
  maximum absolute entry in einsum_ir solution: 60.6441
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00172416
  time (eval):    0.0119047
  gflops (eval):  912.905
  gflops (total): 797.415
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00172416,0.0119047,912.905,797.415

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0896062
  gflops (total): 121.284
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.284

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566193
  gflops (eval):  191.945
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566193,191.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.8976
  maximum absolute entry in einsum_ir solution: 57.8976
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142846
  time (eval):    0.0118826
  gflops (eval):  914.6
  gflops (total): 816.451
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142846,0.0118826,914.6,816.451

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0908074
  gflops (total): 119.68
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553655
  gflops (eval):  196.292
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553655,196.292,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.2068
  maximum absolute entry in einsum_ir solution: 58.2068
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137912
  time (eval):    0.0118818
  gflops (eval):  914.664
  gflops (total): 819.54
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137912,0.0118818,914.664,819.54

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0898629
  gflops (total): 120.938
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.938

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0553149
  gflops (eval):  196.472
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0553149,196.472,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.1748
  maximum absolute entry in einsum_ir solution: 58.1748
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136956
  time (eval):    0.011887
  gflops (eval):  914.258
  gflops (total): 819.804
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136956,0.011887,914.258,819.804

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904005
  gflops (total): 120.219
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.219

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561704
  gflops (eval):  193.479
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561704,193.479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      64.6957
  maximum absolute entry in einsum_ir solution: 64.6957
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139279
  time (eval):    0.0118696
  gflops (eval):  915.605
  gflops (total): 819.449
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139279,0.0118696,915.605,819.449

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0892841
  gflops (total): 121.722
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.722

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565953
  gflops (eval):  192.027
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565953,192.027,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4698
  maximum absolute entry in einsum_ir solution: 58.4698
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137728
  time (eval):    0.011899
  gflops (eval):  913.337
  gflops (total): 818.588
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137728,0.011899,913.337,818.588

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905638
  gflops (total): 120.002
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0572296
  gflops (eval):  189.899
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0572296,189.899,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.3787
  maximum absolute entry in einsum_ir solution: 59.3787
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00145848
  time (eval):    0.0118762
  gflops (eval):  915.092
  gflops (total): 815.004
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00145848,0.0118762,915.092,815.004

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902577
  gflops (total): 120.409
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056811
  gflops (eval):  191.298
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056811,191.298,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.6105
  maximum absolute entry in einsum_ir solution: 56.6105
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137836
  time (eval):    0.0118906
  gflops (eval):  913.984
  gflops (total): 819.041
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137836,0.0118906,913.984,819.041

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0903913
  gflops (total): 120.231
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.231

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560902
  gflops (eval):  193.756
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560902,193.756,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.3707
  maximum absolute entry in einsum_ir solution: 58.3707
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00136914
  time (eval):    0.0118941
  gflops (eval):  913.715
  gflops (total): 819.394
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00136914,0.0118941,913.715,819.394

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0893277
  gflops (total): 121.662
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056449
  gflops (eval):  192.525
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056449,192.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.0153
  maximum absolute entry in einsum_ir solution: 59.0153
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00144868
  time (eval):    0.0118965
  gflops (eval):  913.535
  gflops (total): 814.366
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00144868,0.0118965,913.535,814.366

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.09076
  gflops (total): 119.742
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556189
  gflops (eval):  195.398
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556189,195.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      55.7073
  maximum absolute entry in einsum_ir solution: 55.7073
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138564
  time (eval):    0.0118872
  gflops (eval):  914.245
  gflops (total): 818.801
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138564,0.0118872,914.245,818.801

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.090311
  gflops (total): 120.338
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563006
  gflops (eval):  193.032
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563006,193.032,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.8746
  maximum absolute entry in einsum_ir solution: 60.8746
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142427
  time (eval):    0.0118742
  gflops (eval):  915.25
  gflops (total): 817.226
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142427,0.0118742,915.25,817.226

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901292
  gflops (total): 120.581
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560041
  gflops (eval):  194.054
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560041,194.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      56.7024
  maximum absolute entry in einsum_ir solution: 56.7024
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139161
  time (eval):    0.0118533
  gflops (eval):  916.864
  gflops (total): 820.531
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139161,0.0118533,916.864,820.531

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0900039
  gflops (total): 120.748
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557724
  gflops (eval):  194.86
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557724,194.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.3829
  maximum absolute entry in einsum_ir solution: 61.3829
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139617
  time (eval):    0.0118795
  gflops (eval):  914.837
  gflops (total): 818.626
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139617,0.0118795,914.837,818.626

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905091
  gflops (total): 120.074
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.074

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0556563
  gflops (eval):  195.267
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0556563,195.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.9196
  maximum absolute entry in einsum_ir solution: 60.9196
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013878
  time (eval):    0.0118861
  gflops (eval):  914.334
  gflops (total): 818.739
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013878,0.0118861,914.334,818.739

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0899443
  gflops (total): 120.828
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560861
  gflops (eval):  193.77
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560861,193.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.4037
  maximum absolute entry in einsum_ir solution: 58.4037
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137617
  time (eval):    0.0118776
  gflops (eval):  914.985
  gflops (total): 819.98
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137617,0.0118776,914.985,819.98

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902295
  gflops (total): 120.446
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562017
  gflops (eval):  193.372
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562017,193.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.9858
  maximum absolute entry in einsum_ir solution: 57.9858
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00137704
  time (eval):    0.0121174
  gflops (eval):  896.877
  gflops (total): 805.356
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00137704,0.0121174,896.877,805.356

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0897748
  gflops (total): 121.056
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563847
  gflops (eval):  192.744
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563847,192.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.1125
  maximum absolute entry in einsum_ir solution: 59.1125
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139542
  time (eval):    0.0118915
  gflops (eval):  913.919
  gflops (total): 817.937
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139542,0.0118915,913.919,817.937

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0907602
  gflops (total): 119.742
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.742

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0557065
  gflops (eval):  195.091
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0557065,195.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.8531
  maximum absolute entry in einsum_ir solution: 61.8531
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139784
  time (eval):    0.0118976
  gflops (eval):  913.446
  gflops (total): 817.409
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139784,0.0118976,913.446,817.409

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901766
  gflops (total): 120.517
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.517

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0565679
  gflops (eval):  192.12
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0565679,192.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      63.1231
  maximum absolute entry in einsum_ir solution: 63.1231
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138097
  time (eval):    0.0118759
  gflops (eval):  915.114
  gflops (total): 819.786
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138097,0.0118759,915.114,819.786

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0911977
  gflops (total): 119.168
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.168

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0566759
  gflops (eval):  191.754
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0566759,191.754,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.0284
  maximum absolute entry in einsum_ir solution: 62.0284
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138664
  time (eval):    0.0118839
  gflops (eval):  914.496
  gflops (total): 818.941
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138664,0.0118839,914.496,818.941

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.089402
  gflops (total): 121.561
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.055303
  gflops (eval):  196.514
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.055303,196.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      62.4982
  maximum absolute entry in einsum_ir solution: 62.4982
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00168418
  time (eval):    0.0118884
  gflops (eval):  914.155
  gflops (total): 800.72
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00168418,0.0118884,914.155,800.72

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902177
  gflops (total): 120.462
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564219
  gflops (eval):  192.617
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564219,192.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8232
  maximum absolute entry in einsum_ir solution: 58.8232
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139289
  time (eval):    0.0118821
  gflops (eval):  914.64
  gflops (total): 818.67
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139289,0.0118821,914.64,818.67

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0900358
  gflops (total): 120.706
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562563
  gflops (eval):  193.184
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562563,193.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.6659
  maximum absolute entry in einsum_ir solution: 61.6659
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00142909
  time (eval):    0.0118823
  gflops (eval):  914.626
  gflops (total): 816.432
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00142909,0.0118823,914.626,816.432

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0906518
  gflops (total): 119.885
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0564154
  gflops (eval):  192.639
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0564154,192.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      61.5273
  maximum absolute entry in einsum_ir solution: 61.5273
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139323
  time (eval):    0.0118794
  gflops (eval):  914.849
  gflops (total): 818.817
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139323,0.0118794,914.849,818.817

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.089756
  gflops (total): 121.082
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,121.082

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.056689
  gflops (eval):  191.71
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.056689,191.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.5432
  maximum absolute entry in einsum_ir solution: 57.5432
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138634
  time (eval):    0.0119224
  gflops (eval):  911.543
  gflops (total): 816.59
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138634,0.0119224,911.543,816.59

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0908368
  gflops (total): 119.641
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.641

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560157
  gflops (eval):  194.014
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560157,194.014,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      70.6284
  maximum absolute entry in einsum_ir solution: 70.6284
  maximum element-wise difference:              2.67029e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139062
  time (eval):    0.0118806
  gflops (eval):  914.753
  gflops (total): 818.901
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139062,0.0118806,914.753,818.901

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0905153
  gflops (total): 120.066
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0568747
  gflops (eval):  191.084
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0568747,191.084,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1524
  maximum absolute entry in einsum_ir solution: 60.1524
  maximum element-wise difference:              2.47955e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.0013862
  time (eval):    0.0118624
  gflops (eval):  916.155
  gflops (total): 820.298
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.0013862,0.0118624,916.155,820.298

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0903129
  gflops (total): 120.335
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.335

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0563083
  gflops (eval):  193.006
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0563083,193.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      57.4786
  maximum absolute entry in einsum_ir solution: 57.4786
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00153695
  time (eval):    0.0118804
  gflops (eval):  914.767
  gflops (total): 809.981
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00153695,0.0118804,914.767,809.981

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.089906
  gflops (total): 120.88
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.88

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561246
  gflops (eval):  193.637
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561246,193.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.9307
  maximum absolute entry in einsum_ir solution: 59.9307
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138292
  time (eval):    0.0118761
  gflops (eval):  915.103
  gflops (total): 819.657
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138292,0.0118761,915.103,819.657

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0902093
  gflops (total): 120.473
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561514
  gflops (eval):  193.545
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561514,193.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.6259
  maximum absolute entry in einsum_ir solution: 60.6259
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00139207
  time (eval):    0.0118687
  gflops (eval):  915.674
  gflops (total): 819.549
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00139207,0.0118687,915.674,819.549

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0907703
  gflops (total): 119.729
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,119.729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0559111
  gflops (eval):  194.377
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0559111,194.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      58.8318
  maximum absolute entry in einsum_ir solution: 58.8318
  maximum element-wise difference:              3.05176e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138847
  time (eval):    0.0118748
  gflops (eval):  915.198
  gflops (total): 819.39
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138847,0.0118748,915.198,819.39

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0904422
  gflops (total): 120.163
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0562826
  gflops (eval):  193.094
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0562826,193.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      59.2062
  maximum absolute entry in einsum_ir solution: 59.2062
  maximum element-wise difference:              2.09808e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138572
  time (eval):    0.0118949
  gflops (eval):  913.651
  gflops (total): 818.319
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138572,0.0118949,913.651,818.319

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0899218
  gflops (total): 120.859
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.859

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0560524
  gflops (eval):  193.887
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0560524,193.887,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.1685
  maximum absolute entry in einsum_ir solution: 60.1685
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,c
  a,b,e,d
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 2 4 4 
  string_dim_ids: 4 2 0 1 4 3 0 1 2 3 

*** benchmarking einsum_ir ***
[0,1,4,3],[[4,2]->[2,4]]->[0,1,2,3]
  #flops:         10867820544
  time (compile): 0.00138273
  time (eval):    0.0118991
  gflops (eval):  913.331
  gflops (total): 818.247
CSV_DATA: einsum_ir,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0.00138273,0.0118991,913.331,818.247

*** benchmarking at::einsum ***
  #flops:         10867820544
  time (total):   0.0901199
  gflops (total): 120.593
CSV_DATA: at::einsum,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0,0,120.593

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 677376 84 96
  #flops:         10867820544
  time (eval):    0.0561387
  gflops (eval):  193.589
CSV_DATA: at::matmul,"ec,abed->abcd","96,84,84,84,96","(0,1)",10867820544,0,0.0561387,193.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      60.3489
  maximum absolute entry in einsum_ir solution: 60.3489
  maximum element-wise difference:              2.28882e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013483
  time (eval):    0.010579
  gflops (eval):  1032.61
  gflops (total): 915.882
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013483,0.010579,1032.61,915.882

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0625459
  gflops (total): 174.656
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,174.656

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170792
  gflops (eval):  639.612
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170792,639.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.49
  maximum absolute entry in einsum_ir solution: 433.49
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137101
  time (eval):    0.0105375
  gflops (eval):  1036.69
  gflops (total): 917.334
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137101,0.0105375,1036.69,917.334

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0642444
  gflops (total): 170.039
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174101
  gflops (eval):  627.453
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174101,627.453,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.168
  maximum absolute entry in einsum_ir solution: 430.168
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134828
  time (eval):    0.0106638
  gflops (eval):  1024.4
  gflops (total): 909.418
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134828,0.0106638,1024.4,909.418

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0628261
  gflops (total): 173.877
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016959
  gflops (eval):  644.146
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016959,644.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.594
  maximum absolute entry in einsum_ir solution: 435.594
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00132578
  time (eval):    0.0105798
  gflops (eval):  1032.54
  gflops (total): 917.559
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00132578,0.0105798,1032.54,917.559

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0641729
  gflops (total): 170.228
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.228

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172166
  gflops (eval):  634.505
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172166,634.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.936
  maximum absolute entry in einsum_ir solution: 449.936
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00132742
  time (eval):    0.010589
  gflops (eval):  1031.64
  gflops (total): 916.722
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00132742,0.010589,1031.64,916.722

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0628762
  gflops (total): 173.739
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169413
  gflops (eval):  644.817
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169413,644.817,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      426.379
  maximum absolute entry in einsum_ir solution: 426.379
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0018137
  time (eval):    0.0105845
  gflops (eval):  1032.08
  gflops (total): 881.098
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0018137,0.0105845,1032.08,881.098

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0640575
  gflops (total): 170.535
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.535

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175638
  gflops (eval):  621.965
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175638,621.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.639
  maximum absolute entry in einsum_ir solution: 458.639
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135572
  time (eval):    0.0106227
  gflops (eval):  1028.37
  gflops (total): 911.978
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135572,0.0106227,1028.37,911.978

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637165
  gflops (total): 171.448
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.448

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170765
  gflops (eval):  639.71
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170765,639.71,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      391.377
  maximum absolute entry in einsum_ir solution: 391.377
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134964
  time (eval):    0.0106177
  gflops (eval):  1028.85
  gflops (total): 912.822
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134964,0.0106177,1028.85,912.822

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0643406
  gflops (total): 169.784
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.784

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0174401
  gflops (eval):  626.373
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0174401,626.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.201
  maximum absolute entry in einsum_ir solution: 430.201
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134566
  time (eval):    0.0105961
  gflops (eval):  1030.95
  gflops (total): 914.775
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134566,0.0105961,1030.95,914.775

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632655
  gflops (total): 172.67
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172302
  gflops (eval):  634.004
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172302,634.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.15
  maximum absolute entry in einsum_ir solution: 454.15
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00162955
  time (eval):    0.0105728
  gflops (eval):  1033.22
  gflops (total): 895.243
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00162955,0.0105728,1033.22,895.243

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0642477
  gflops (total): 170.03
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175806
  gflops (eval):  621.368
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175806,621.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.651
  maximum absolute entry in einsum_ir solution: 424.651
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134373
  time (eval):    0.0105937
  gflops (eval):  1031.18
  gflops (total): 915.11
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134373,0.0105937,1031.18,915.11

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635677
  gflops (total): 171.849
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.849

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170836
  gflops (eval):  639.447
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170836,639.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.23
  maximum absolute entry in einsum_ir solution: 453.23
  maximum element-wise difference:              0.000183105
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134339
  time (eval):    0.010562
  gflops (eval):  1034.27
  gflops (total): 917.568
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134339,0.010562,1034.27,917.568

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639585
  gflops (total): 170.799
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.799

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170843
  gflops (eval):  639.419
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170843,639.419,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.859
  maximum absolute entry in einsum_ir solution: 438.859
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00148157
  time (eval):    0.0106101
  gflops (eval):  1029.59
  gflops (total): 903.437
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00148157,0.0106101,1029.59,903.437

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0638941
  gflops (total): 170.971
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.971

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017584
  gflops (eval):  621.25
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017584,621.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.756
  maximum absolute entry in einsum_ir solution: 428.756
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134403
  time (eval):    0.0105573
  gflops (eval):  1034.74
  gflops (total): 917.883
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134403,0.0105573,1034.74,917.883

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0645048
  gflops (total): 169.352
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.352

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171477
  gflops (eval):  637.055
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171477,637.055,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.341
  maximum absolute entry in einsum_ir solution: 440.341
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00140388
  time (eval):    0.0105875
  gflops (eval):  1031.78
  gflops (total): 910.989
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00140388,0.0105875,1031.78,910.989

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635717
  gflops (total): 171.838
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169539
  gflops (eval):  644.337
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169539,644.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.457
  maximum absolute entry in einsum_ir solution: 414.457
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134271
  time (eval):    0.0106027
  gflops (eval):  1030.31
  gflops (total): 914.5
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134271,0.0106027,1030.31,914.5

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0640865
  gflops (total): 170.458
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169606
  gflops (eval):  644.083
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169606,644.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.059
  maximum absolute entry in einsum_ir solution: 482.059
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135809
  time (eval):    0.0105647
  gflops (eval):  1034.01
  gflops (total): 916.233
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135809,0.0105647,1034.01,916.233

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0630943
  gflops (total): 173.138
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169148
  gflops (eval):  645.828
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169148,645.828,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.313
  maximum absolute entry in einsum_ir solution: 425.313
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134292
  time (eval):    0.0105914
  gflops (eval):  1031.4
  gflops (total): 915.345
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134292,0.0105914,1031.4,915.345

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637814
  gflops (total): 171.273
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171964
  gflops (eval):  635.251
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171964,635.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      440.665
  maximum absolute entry in einsum_ir solution: 440.665
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137964
  time (eval):    0.010596
  gflops (eval):  1030.96
  gflops (total): 912.192
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137964,0.010596,1030.96,912.192

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0628734
  gflops (total): 173.747
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017069
  gflops (eval):  639.994
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017069,639.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.566
  maximum absolute entry in einsum_ir solution: 488.566
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00133567
  time (eval):    0.0105619
  gflops (eval):  1034.29
  gflops (total): 918.174
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00133567,0.0105619,1034.29,918.174

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637746
  gflops (total): 171.291
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168783
  gflops (eval):  647.224
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168783,647.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      417.459
  maximum absolute entry in einsum_ir solution: 417.459
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135062
  time (eval):    0.0106108
  gflops (eval):  1029.52
  gflops (total): 913.27
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135062,0.0106108,1029.52,913.27

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0630453
  gflops (total): 173.273
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.273

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169568
  gflops (eval):  644.23
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169568,644.23,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.665
  maximum absolute entry in einsum_ir solution: 419.665
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013462
  time (eval):    0.0106113
  gflops (eval):  1029.47
  gflops (total): 913.57
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013462,0.0106113,1029.47,913.57

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063733
  gflops (total): 171.403
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017102
  gflops (eval):  638.76
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017102,638.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      434.054
  maximum absolute entry in einsum_ir solution: 434.054
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013582
  time (eval):    0.0105308
  gflops (eval):  1037.34
  gflops (total): 918.834
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013582,0.0105308,1037.34,918.834

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0630877
  gflops (total): 173.157
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167908
  gflops (eval):  650.597
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167908,650.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.9
  maximum absolute entry in einsum_ir solution: 421.9
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137102
  time (eval):    0.01061
  gflops (eval):  1029.6
  gflops (total): 911.781
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137102,0.01061,1029.6,911.781

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063664
  gflops (total): 171.589
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170864
  gflops (eval):  639.34
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170864,639.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.077
  maximum absolute entry in einsum_ir solution: 421.077
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138193
  time (eval):    0.0105388
  gflops (eval):  1036.56
  gflops (total): 916.391
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138193,0.0105388,1036.56,916.391

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637075
  gflops (total): 171.472
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169961
  gflops (eval):  642.739
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169961,642.739,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.892
  maximum absolute entry in einsum_ir solution: 428.892
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135741
  time (eval):    0.0105889
  gflops (eval):  1031.65
  gflops (total): 914.429
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135741,0.0105889,1031.65,914.429

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0636466
  gflops (total): 171.636
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170365
  gflops (eval):  641.216
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170365,641.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.58
  maximum absolute entry in einsum_ir solution: 452.58
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136517
  time (eval):    0.0105357
  gflops (eval):  1036.86
  gflops (total): 917.92
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136517,0.0105357,1036.86,917.92

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0640827
  gflops (total): 170.468
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.468

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171204
  gflops (eval):  638.071
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171204,638.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.385
  maximum absolute entry in einsum_ir solution: 467.385
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135328
  time (eval):    0.0105843
  gflops (eval):  1032.1
  gflops (total): 915.094
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135328,0.0105843,1032.1,915.094

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635976
  gflops (total): 171.768
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169705
  gflops (eval):  643.707
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169705,643.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      412.674
  maximum absolute entry in einsum_ir solution: 412.674
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00146512
  time (eval):    0.0105721
  gflops (eval):  1033.29
  gflops (total): 907.521
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00146512,0.0105721,1033.29,907.521

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0634985
  gflops (total): 172.036
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173205
  gflops (eval):  630.701
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173205,630.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      435.141
  maximum absolute entry in einsum_ir solution: 435.141
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134182
  time (eval):    0.0105722
  gflops (eval):  1033.28
  gflops (total): 916.904
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134182,0.0105722,1033.28,916.904

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639313
  gflops (total): 170.871
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.871

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172617
  gflops (eval):  632.85
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172617,632.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.75
  maximum absolute entry in einsum_ir solution: 459.75
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134978
  time (eval):    0.0105911
  gflops (eval):  1031.44
  gflops (total): 914.845
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134978,0.0105911,1031.44,914.845

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0636507
  gflops (total): 171.625
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.625

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172061
  gflops (eval):  634.894
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172061,634.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.252
  maximum absolute entry in einsum_ir solution: 471.252
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136233
  time (eval):    0.0106044
  gflops (eval):  1030.14
  gflops (total): 912.866
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136233,0.0106044,1030.14,912.866

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0633928
  gflops (total): 172.323
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170763
  gflops (eval):  639.721
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170763,639.721,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.215
  maximum absolute entry in einsum_ir solution: 421.215
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134601
  time (eval):    0.0105879
  gflops (eval):  1031.75
  gflops (total): 915.381
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134601,0.0105879,1031.75,915.381

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0643533
  gflops (total): 169.751
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.751

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171599
  gflops (eval):  636.602
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171599,636.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.043
  maximum absolute entry in einsum_ir solution: 473.043
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136006
  time (eval):    0.010566
  gflops (eval):  1033.88
  gflops (total): 915.979
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136006,0.010566,1033.88,915.979

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632651
  gflops (total): 172.671
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172207
  gflops (eval):  634.357
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172207,634.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.448
  maximum absolute entry in einsum_ir solution: 429.448
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00144137
  time (eval):    0.0105781
  gflops (eval):  1032.7
  gflops (total): 908.86
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00144137,0.0105781,1032.7,908.86

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0638113
  gflops (total): 171.193
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0176614
  gflops (eval):  618.527
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0176614,618.527,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.004
  maximum absolute entry in einsum_ir solution: 425.004
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135423
  time (eval):    0.0105561
  gflops (eval):  1034.86
  gflops (total): 917.191
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135423,0.0105561,1034.86,917.191

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063705
  gflops (total): 171.479
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172025
  gflops (eval):  635.026
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172025,635.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.855
  maximum absolute entry in einsum_ir solution: 442.854
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136404
  time (eval):    0.0105575
  gflops (eval):  1034.72
  gflops (total): 916.331
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136404,0.0105575,1034.72,916.331

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063856
  gflops (total): 171.073
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.073

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167829
  gflops (eval):  650.902
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167829,650.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.711
  maximum absolute entry in einsum_ir solution: 461.711
  maximum element-wise difference:              0.000198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134306
  time (eval):    0.0106019
  gflops (eval):  1030.39
  gflops (total): 914.534
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134306,0.0106019,1030.39,914.534

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0633455
  gflops (total): 172.452
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168729
  gflops (eval):  647.43
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168729,647.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.449
  maximum absolute entry in einsum_ir solution: 419.449
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135254
  time (eval):    0.0105974
  gflops (eval):  1030.82
  gflops (total): 914.147
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135254,0.0105974,1030.82,914.147

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639044
  gflops (total): 170.944
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.944

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170414
  gflops (eval):  641.029
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170414,641.029,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.759
  maximum absolute entry in einsum_ir solution: 466.759
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136642
  time (eval):    0.010554
  gflops (eval):  1035.06
  gflops (total): 916.413
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136642,0.010554,1035.06,916.413

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632577
  gflops (total): 172.691
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169628
  gflops (eval):  644.001
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169628,644.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.067
  maximum absolute entry in einsum_ir solution: 464.067
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00151314
  time (eval):    0.0105181
  gflops (eval):  1038.59
  gflops (total): 907.972
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00151314,0.0105181,1038.59,907.972

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0638545
  gflops (total): 171.077
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.077

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017097
  gflops (eval):  638.945
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017097,638.945,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.713
  maximum absolute entry in einsum_ir solution: 441.713
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137358
  time (eval):    0.0105851
  gflops (eval):  1032.02
  gflops (total): 913.484
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137358,0.0105851,1032.02,913.484

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635143
  gflops (total): 171.993
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.993

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172049
  gflops (eval):  634.936
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172049,634.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.811
  maximum absolute entry in einsum_ir solution: 497.811
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00167026
  time (eval):    0.0105672
  gflops (eval):  1033.76
  gflops (total): 892.668
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00167026,0.0105672,1033.76,892.668

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637285
  gflops (total): 171.415
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.415

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169384
  gflops (eval):  644.926
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169384,644.926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      408.136
  maximum absolute entry in einsum_ir solution: 408.136
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00142347
  time (eval):    0.0105869
  gflops (eval):  1031.84
  gflops (total): 909.548
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00142347,0.0105869,1031.84,909.548

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635893
  gflops (total): 171.79
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169447
  gflops (eval):  644.686
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169447,644.686,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.027
  maximum absolute entry in einsum_ir solution: 497.027
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134945
  time (eval):    0.0106154
  gflops (eval):  1029.07
  gflops (total): 913.01
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134945,0.0106154,1029.07,913.01

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639621
  gflops (total): 170.789
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169538
  gflops (eval):  644.342
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169538,644.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.301
  maximum absolute entry in einsum_ir solution: 420.301
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013801
  time (eval):    0.0105779
  gflops (eval):  1032.72
  gflops (total): 913.534
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013801,0.0105779,1032.72,913.534

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0634078
  gflops (total): 172.282
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.282

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172772
  gflops (eval):  632.283
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172772,632.283,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      430.035
  maximum absolute entry in einsum_ir solution: 430.035
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136302
  time (eval):    0.0105608
  gflops (eval):  1034.39
  gflops (total): 916.15
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136302,0.0105608,1034.39,916.15

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637728
  gflops (total): 171.296
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.296

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170353
  gflops (eval):  641.261
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170353,641.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.93
  maximum absolute entry in einsum_ir solution: 431.93
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135239
  time (eval):    0.0105653
  gflops (eval):  1033.95
  gflops (total): 916.621
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135239,0.0105653,1033.95,916.621

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632526
  gflops (total): 172.705
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017614
  gflops (eval):  620.189
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017614,620.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      423.302
  maximum absolute entry in einsum_ir solution: 423.302
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134905
  time (eval):    0.0105329
  gflops (eval):  1037.13
  gflops (total): 919.378
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134905,0.0105329,1037.13,919.378

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0640591
  gflops (total): 170.531
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171179
  gflops (eval):  638.167
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171179,638.167,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      410.095
  maximum absolute entry in einsum_ir solution: 410.095
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135335
  time (eval):    0.0105864
  gflops (eval):  1031.89
  gflops (total): 914.93
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135335,0.0105864,1031.89,914.93

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632775
  gflops (total): 172.637
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170313
  gflops (eval):  641.41
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170313,641.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.074
  maximum absolute entry in einsum_ir solution: 481.073
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134431
  time (eval):    0.0105905
  gflops (eval):  1031.5
  gflops (total): 915.311
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134431,0.0105905,1031.5,915.311

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637714
  gflops (total): 171.3
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.3

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170386
  gflops (eval):  641.135
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170386,641.135,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.524
  maximum absolute entry in einsum_ir solution: 453.524
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00156041
  time (eval):    0.010581
  gflops (eval):  1032.42
  gflops (total): 899.736
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00156041,0.010581,1032.42,899.736

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0633502
  gflops (total): 172.439
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.439

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.016898
  gflops (eval):  646.469
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.016898,646.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.202
  maximum absolute entry in einsum_ir solution: 428.202
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135013
  time (eval):    0.0105755
  gflops (eval):  1032.96
  gflops (total): 916.012
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135013,0.0105755,1032.96,916.012

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0641517
  gflops (total): 170.285
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168228
  gflops (eval):  649.359
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168228,649.359,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.978
  maximum absolute entry in einsum_ir solution: 418.978
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135196
  time (eval):    0.0105983
  gflops (eval):  1030.73
  gflops (total): 914.122
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135196,0.0105983,1030.73,914.122

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0634064
  gflops (total): 172.286
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.286

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173469
  gflops (eval):  629.74
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173469,629.74,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.791
  maximum absolute entry in einsum_ir solution: 441.791
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134281
  time (eval):    0.0105617
  gflops (eval):  1034.31
  gflops (total): 917.643
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134281,0.0105617,1034.31,917.643

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0640953
  gflops (total): 170.434
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172499
  gflops (eval):  633.282
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172499,633.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      421.998
  maximum absolute entry in einsum_ir solution: 421.998
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135283
  time (eval):    0.01057
  gflops (eval):  1033.5
  gflops (total): 916.229
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135283,0.01057,1033.5,916.229

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063316
  gflops (total): 172.532
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167903
  gflops (eval):  650.616
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167903,650.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.501
  maximum absolute entry in einsum_ir solution: 420.501
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136646
  time (eval):    0.0105833
  gflops (eval):  1032.19
  gflops (total): 914.16
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136646,0.0105833,1032.19,914.16

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0641114
  gflops (total): 170.392
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170497
  gflops (eval):  640.717
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170497,640.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      455.825
  maximum absolute entry in einsum_ir solution: 455.825
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013471
  time (eval):    0.0105867
  gflops (eval):  1031.86
  gflops (total): 915.383
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013471,0.0105867,1031.86,915.383

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0633876
  gflops (total): 172.337
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175449
  gflops (eval):  622.635
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175449,622.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.905
  maximum absolute entry in einsum_ir solution: 467.906
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00146573
  time (eval):    0.0105899
  gflops (eval):  1031.56
  gflops (total): 906.139
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00146573,0.0105899,1031.56,906.139

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0647071
  gflops (total): 168.823
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,168.823

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170998
  gflops (eval):  638.84
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170998,638.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.908
  maximum absolute entry in einsum_ir solution: 447.908
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134914
  time (eval):    0.0105655
  gflops (eval):  1033.94
  gflops (total): 916.862
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134914,0.0105655,1033.94,916.862

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639439
  gflops (total): 170.838
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167985
  gflops (eval):  650.3
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167985,650.3,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.837
  maximum absolute entry in einsum_ir solution: 420.837
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0017158
  time (eval):    0.0105958
  gflops (eval):  1030.97
  gflops (total): 887.294
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0017158,0.0105958,1030.97,887.294

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0642115
  gflops (total): 170.126
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.126

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0167468
  gflops (eval):  652.308
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0167468,652.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.929
  maximum absolute entry in einsum_ir solution: 484.929
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134775
  time (eval):    0.0105867
  gflops (eval):  1031.87
  gflops (total): 915.338
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134775,0.0105867,1031.87,915.338

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631575
  gflops (total): 172.965
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168094
  gflops (eval):  649.877
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168094,649.877,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.363
  maximum absolute entry in einsum_ir solution: 438.363
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136436
  time (eval):    0.0106085
  gflops (eval):  1029.74
  gflops (total): 912.397
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136436,0.0106085,1029.74,912.397

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063686
  gflops (total): 171.53
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172759
  gflops (eval):  632.33
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172759,632.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.986
  maximum absolute entry in einsum_ir solution: 447.986
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00162673
  time (eval):    0.0105404
  gflops (eval):  1036.4
  gflops (total): 897.836
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00162673,0.0105404,1036.4,897.836

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0626401
  gflops (total): 174.394
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,174.394

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171054
  gflops (eval):  638.633
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171054,638.633,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      437.776
  maximum absolute entry in einsum_ir solution: 437.776
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138168
  time (eval):    0.0105572
  gflops (eval):  1034.75
  gflops (total): 914.997
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138168,0.0105572,1034.75,914.997

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639663
  gflops (total): 170.778
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169622
  gflops (eval):  644.024
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169622,644.024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      419.231
  maximum absolute entry in einsum_ir solution: 419.231
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135703
  time (eval):    0.0105218
  gflops (eval):  1038.23
  gflops (total): 919.626
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135703,0.0105218,1038.23,919.626

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0646478
  gflops (total): 168.978
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,168.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173109
  gflops (eval):  631.05
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173109,631.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.87
  maximum absolute entry in einsum_ir solution: 456.87
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135613
  time (eval):    0.0105792
  gflops (eval):  1032.6
  gflops (total): 915.272
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135613,0.0105792,1032.6,915.272

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0633831
  gflops (total): 172.349
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171741
  gflops (eval):  636.078
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171741,636.078,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      405.114
  maximum absolute entry in einsum_ir solution: 405.114
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00133124
  time (eval):    0.01058
  gflops (eval):  1032.51
  gflops (total): 917.117
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00133124,0.01058,1032.51,917.117

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0647246
  gflops (total): 168.777
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,168.777

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169896
  gflops (eval):  642.983
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169896,642.983,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.992
  maximum absolute entry in einsum_ir solution: 431.992
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0015885
  time (eval):    0.0105785
  gflops (eval):  1032.67
  gflops (total): 897.844
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0015885,0.0105785,1032.67,897.844

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632949
  gflops (total): 172.59
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.59

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172773
  gflops (eval):  632.276
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172773,632.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      428.069
  maximum absolute entry in einsum_ir solution: 428.069
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134689
  time (eval):    0.0105767
  gflops (eval):  1032.84
  gflops (total): 916.168
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134689,0.0105767,1032.84,916.168

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0641829
  gflops (total): 170.202
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.202

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171719
  gflops (eval):  636.159
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171719,636.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      445.142
  maximum absolute entry in einsum_ir solution: 445.142
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134881
  time (eval):    0.0106118
  gflops (eval):  1029.43
  gflops (total): 913.336
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134881,0.0106118,1029.43,913.336

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631882
  gflops (total): 172.881
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.881

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170183
  gflops (eval):  641.898
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170183,641.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.062
  maximum absolute entry in einsum_ir solution: 485.062
  maximum element-wise difference:              0.000198364
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135919
  time (eval):    0.0105836
  gflops (eval):  1032.17
  gflops (total): 914.7
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135919,0.0105836,1032.17,914.7

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637473
  gflops (total): 171.365
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175002
  gflops (eval):  624.225
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175002,624.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.885
  maximum absolute entry in einsum_ir solution: 425.885
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134553
  time (eval):    0.0105885
  gflops (eval):  1031.69
  gflops (total): 915.371
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134553,0.0105885,1031.69,915.371

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635319
  gflops (total): 171.946
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171256
  gflops (eval):  637.876
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171256,637.876,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      422.685
  maximum absolute entry in einsum_ir solution: 422.685
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00141104
  time (eval):    0.0106757
  gflops (eval):  1023.26
  gflops (total): 903.8
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00141104,0.0106757,1023.26,903.8

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0643526
  gflops (total): 169.753
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169195
  gflops (eval):  645.649
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169195,645.649,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.506
  maximum absolute entry in einsum_ir solution: 411.506
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134937
  time (eval):    0.0105885
  gflops (eval):  1031.69
  gflops (total): 915.078
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134937,0.0105885,1031.69,915.078

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0634383
  gflops (total): 172.2
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171827
  gflops (eval):  635.758
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171827,635.758,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.043
  maximum absolute entry in einsum_ir solution: 441.043
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134895
  time (eval):    0.0106097
  gflops (eval):  1029.62
  gflops (total): 913.482
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134895,0.0106097,1029.62,913.482

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0637893
  gflops (total): 171.252
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.252

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168376
  gflops (eval):  648.789
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168376,648.789,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      418.008
  maximum absolute entry in einsum_ir solution: 418.008
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134646
  time (eval):    0.0105684
  gflops (eval):  1033.65
  gflops (total): 916.843
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134646,0.0105684,1033.65,916.843

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631746
  gflops (total): 172.918
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168764
  gflops (eval):  647.297
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168764,647.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      424.852
  maximum absolute entry in einsum_ir solution: 424.852
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135612
  time (eval):    0.0105897
  gflops (eval):  1031.57
  gflops (total): 914.463
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135612,0.0105897,1031.57,914.463

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0638691
  gflops (total): 171.038
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170379
  gflops (eval):  641.162
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170379,641.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.177
  maximum absolute entry in einsum_ir solution: 449.177
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013475
  time (eval):    0.0105723
  gflops (eval):  1033.27
  gflops (total): 916.464
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013475,0.0105723,1033.27,916.464

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0635792
  gflops (total): 171.818
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169948
  gflops (eval):  642.788
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169948,642.788,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      423.413
  maximum absolute entry in einsum_ir solution: 423.413
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00147563
  time (eval):    0.0105492
  gflops (eval):  1035.53
  gflops (total): 908.456
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00147563,0.0105492,1035.53,908.456

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0645721
  gflops (total): 169.176
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173618
  gflops (eval):  629.201
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173618,629.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      429.682
  maximum absolute entry in einsum_ir solution: 429.682
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134728
  time (eval):    0.0105656
  gflops (eval):  1033.92
  gflops (total): 916.991
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134728,0.0105656,1033.92,916.991

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0634004
  gflops (total): 172.302
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170409
  gflops (eval):  641.05
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170409,641.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      434.405
  maximum absolute entry in einsum_ir solution: 434.406
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137472
  time (eval):    0.0105844
  gflops (eval):  1032.09
  gflops (total): 913.448
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137472,0.0105844,1032.09,913.448

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0643207
  gflops (total): 169.837
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171647
  gflops (eval):  636.425
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171647,636.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      420.763
  maximum absolute entry in einsum_ir solution: 420.763
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135433
  time (eval):    0.010587
  gflops (eval):  1031.84
  gflops (total): 914.811
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135433,0.010587,1031.84,914.811

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0628547
  gflops (total): 173.798
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.798

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170078
  gflops (eval):  642.296
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170078,642.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      414.954
  maximum absolute entry in einsum_ir solution: 414.954
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00143894
  time (eval):    0.0106064
  gflops (eval):  1029.94
  gflops (total): 906.907
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00143894,0.0106064,1029.94,906.907

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.063977
  gflops (total): 170.75
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0176148
  gflops (eval):  620.163
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0176148,620.163,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.902
  maximum absolute entry in einsum_ir solution: 472.902
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134892
  time (eval):    0.0105822
  gflops (eval):  1032.3
  gflops (total): 915.59
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134892,0.0105822,1032.3,915.59

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0630328
  gflops (total): 173.307
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.017579
  gflops (eval):  621.427
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.017579,621.427,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      438.072
  maximum absolute entry in einsum_ir solution: 438.072
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135136
  time (eval):    0.0105763
  gflops (eval):  1032.88
  gflops (total): 915.856
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135136,0.0105763,1032.88,915.856

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0640774
  gflops (total): 170.482
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.482

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169547
  gflops (eval):  644.308
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169547,644.308,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      427.789
  maximum absolute entry in einsum_ir solution: 427.789
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135225
  time (eval):    0.0105928
  gflops (eval):  1031.27
  gflops (total): 914.525
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135225,0.0105928,1031.27,914.525

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0632494
  gflops (total): 172.714
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.714

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0171439
  gflops (eval):  637.196
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0171439,637.196,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      449.277
  maximum absolute entry in einsum_ir solution: 449.277
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137316
  time (eval):    0.0105858
  gflops (eval):  1031.95
  gflops (total): 913.462
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137316,0.0105858,1031.95,913.462

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0639897
  gflops (total): 170.716
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172679
  gflops (eval):  632.623
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172679,632.623,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      450.797
  maximum absolute entry in einsum_ir solution: 450.797
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00133726
  time (eval):    0.0105428
  gflops (eval):  1036.16
  gflops (total): 919.528
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00133726,0.0105428,1036.16,919.528

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631009
  gflops (total): 173.12
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169144
  gflops (eval):  645.842
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169144,645.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.239
  maximum absolute entry in einsum_ir solution: 533.239
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00138463
  time (eval):    0.0105743
  gflops (eval):  1033.07
  gflops (total): 913.463
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00138463,0.0105743,1033.07,913.463

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.064115
  gflops (total): 170.382
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168411
  gflops (eval):  648.653
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168411,648.653,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      425.712
  maximum absolute entry in einsum_ir solution: 425.712
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137118
  time (eval):    0.0105784
  gflops (eval):  1032.67
  gflops (total): 914.176
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137118,0.0105784,1032.67,914.176

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631878
  gflops (total): 172.882
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0170428
  gflops (eval):  640.979
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0170428,640.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      431.877
  maximum absolute entry in einsum_ir solution: 431.877
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134397
  time (eval):    0.0105838
  gflops (eval):  1032.15
  gflops (total): 915.852
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134397,0.0105838,1032.15,915.852

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0641516
  gflops (total): 170.285
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168748
  gflops (eval):  647.357
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168748,647.357,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.126
  maximum absolute entry in einsum_ir solution: 488.126
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135693
  time (eval):    0.0105918
  gflops (eval):  1031.37
  gflops (total): 914.241
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135693,0.0105918,1031.37,914.241

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631825
  gflops (total): 172.897
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.897

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0169526
  gflops (eval):  644.386
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0169526,644.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.249
  maximum absolute entry in einsum_ir solution: 470.249
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00139543
  time (eval):    0.0105408
  gflops (eval):  1036.36
  gflops (total): 915.201
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00139543,0.0105408,1036.36,915.201

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0638391
  gflops (total): 171.118
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,171.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0175988
  gflops (eval):  620.728
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0175988,620.728,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      411.325
  maximum absolute entry in einsum_ir solution: 411.325
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00135748
  time (eval):    0.0105708
  gflops (eval):  1033.42
  gflops (total): 915.813
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00135748,0.0105708,1033.42,915.813

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0633044
  gflops (total): 172.564
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172592
  gflops (eval):  632.942
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172592,632.942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      447.493
  maximum absolute entry in einsum_ir solution: 447.492
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.0013409
  time (eval):    0.0105546
  gflops (eval):  1035
  gflops (total): 918.332
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.0013409,0.0105546,1035,918.332

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0638988
  gflops (total): 170.959
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,170.959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172721
  gflops (eval):  632.468
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172721,632.468,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      441.623
  maximum absolute entry in einsum_ir solution: 441.623
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00137202
  time (eval):    0.010557
  gflops (eval):  1034.76
  gflops (total): 915.75
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00137202,0.010557,1034.76,915.75

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0631559
  gflops (total): 172.97
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,172.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0173932
  gflops (eval):  628.064
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0173932,628.064,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      433.073
  maximum absolute entry in einsum_ir solution: 433.073
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00136716
  time (eval):    0.0105822
  gflops (eval):  1032.31
  gflops (total): 914.197
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00136716,0.0105822,1032.31,914.197

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0644307
  gflops (total): 169.547
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172064
  gflops (eval):  634.884
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172064,634.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      442.607
  maximum absolute entry in einsum_ir solution: 442.607
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134872
  time (eval):    0.0105876
  gflops (eval):  1031.78
  gflops (total): 915.195
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134872,0.0105876,1031.78,915.195

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0630575
  gflops (total): 173.239
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,173.239

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0168583
  gflops (eval):  647.992
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0168583,647.992,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      446.915
  maximum absolute entry in einsum_ir solution: 446.915
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,d,e,c
  e,b,d
  a,b,c
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 3 3 
  string_dim_ids: 0 3 4 2 4 1 3 0 1 2 

*** benchmarking einsum_ir ***
[0,3,4,2],[[4,1,3]->[3,1,4]]->[0,1,2]
  #flops:         10924042752
  time (compile): 0.00134842
  time (eval):    0.0105684
  gflops (eval):  1033.65
  gflops (total): 916.693
CSV_DATA: einsum_ir,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0.00134842,0.0105684,1033.65,916.693

*** benchmarking at::einsum ***
  #flops:         10924042752
  time (total):   0.0642678
  gflops (total): 169.977
CSV_DATA: at::einsum,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0,0,169.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 84 8064
  #flops:         10924042752
  time (eval):    0.0172117
  gflops (eval):  634.688
CSV_DATA: at::matmul,"adec,ebd->abc","96,84,84,84,96","(0,1)",10924042752,0,0.0172117,634.688,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      406.682
  maximum absolute entry in einsum_ir solution: 406.682
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0014104
  time (eval):    0.338634
  gflops (eval):  125.742
  gflops (total): 125.22
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0014104,0.338634,125.742,125.22

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0952841
  gflops (total): 446.879
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488582
  gflops (eval):  871.511
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488582,871.511,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1710.83
  maximum absolute entry in einsum_ir solution: 1710.83
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00131563
  time (eval):    0.33817
  gflops (eval):  125.914
  gflops (total): 125.426
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00131563,0.33817,125.914,125.426

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0980013
  gflops (total): 434.489
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,434.489

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487702
  gflops (eval):  873.083
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487702,873.083,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1754.81
  maximum absolute entry in einsum_ir solution: 1754.81
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133573
  time (eval):    0.346766
  gflops (eval):  122.793
  gflops (total): 122.322
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133573,0.346766,122.793,122.322

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0961212
  gflops (total): 442.987
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.987

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486582
  gflops (eval):  875.093
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486582,875.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1775.97
  maximum absolute entry in einsum_ir solution: 1775.97
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132662
  time (eval):    0.337863
  gflops (eval):  126.029
  gflops (total): 125.536
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132662,0.337863,126.029,125.536

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969114
  gflops (total): 439.375
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048767
  gflops (eval):  873.14
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048767,873.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.69
  maximum absolute entry in einsum_ir solution: 1702.69
  maximum element-wise difference:              0.00463867
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132943
  time (eval):    0.348082
  gflops (eval):  122.329
  gflops (total): 121.863
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132943,0.348082,122.329,121.863

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0959041
  gflops (total): 443.99
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,443.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485891
  gflops (eval):  876.337
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485891,876.337,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2050.35
  maximum absolute entry in einsum_ir solution: 2050.35
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133249
  time (eval):    0.337504
  gflops (eval):  126.163
  gflops (total): 125.667
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133249,0.337504,126.163,125.667

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0972838
  gflops (total): 437.693
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487498
  gflops (eval):  873.448
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487498,873.448,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.39
  maximum absolute entry in einsum_ir solution: 1807.39
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133281
  time (eval):    0.347001
  gflops (eval):  122.71
  gflops (total): 122.24
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133281,0.347001,122.71,122.24

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0964138
  gflops (total): 441.643
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487821
  gflops (eval):  872.87
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487821,872.87,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1777.8
  maximum absolute entry in einsum_ir solution: 1777.8
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134066
  time (eval):    0.337335
  gflops (eval):  126.226
  gflops (total): 125.726
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134066,0.337335,126.226,125.726

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0974103
  gflops (total): 437.125
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485793
  gflops (eval):  876.513
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485793,876.513,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1740.9
  maximum absolute entry in einsum_ir solution: 1740.9
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134077
  time (eval):    0.338122
  gflops (eval):  125.932
  gflops (total): 125.435
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134077,0.338122,125.932,125.435

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963195
  gflops (total): 442.075
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.075

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487032
  gflops (eval):  874.284
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487032,874.284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1778.38
  maximum absolute entry in einsum_ir solution: 1778.38
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133398
  time (eval):    0.337843
  gflops (eval):  126.036
  gflops (total): 125.54
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133398,0.337843,126.036,125.54

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0971055
  gflops (total): 438.497
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.497

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489211
  gflops (eval):  870.391
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489211,870.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1683.69
  maximum absolute entry in einsum_ir solution: 1683.69
  maximum element-wise difference:              0.00360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00154747
  time (eval):    0.346737
  gflops (eval):  122.803
  gflops (total): 122.258
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00154747,0.346737,122.803,122.258

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0975188
  gflops (total): 436.638
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.638

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487648
  gflops (eval):  873.179
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487648,873.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2072.34
  maximum absolute entry in einsum_ir solution: 2072.34
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132682
  time (eval):    0.339045
  gflops (eval):  125.589
  gflops (total): 125.1
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132682,0.339045,125.589,125.1

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0982853
  gflops (total): 433.233
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,433.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489249
  gflops (eval):  870.322
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489249,870.322,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1641.51
  maximum absolute entry in einsum_ir solution: 1641.51
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00130669
  time (eval):    0.338758
  gflops (eval):  125.696
  gflops (total): 125.213
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00130669,0.338758,125.696,125.213

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963016
  gflops (total): 442.157
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.157

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489325
  gflops (eval):  870.187
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489325,870.187,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1663.81
  maximum absolute entry in einsum_ir solution: 1663.81
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133208
  time (eval):    0.338054
  gflops (eval):  125.957
  gflops (total): 125.463
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133208,0.338054,125.957,125.463

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0978573
  gflops (total): 435.128
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.128

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486465
  gflops (eval):  875.303
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486465,875.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1797.25
  maximum absolute entry in einsum_ir solution: 1797.25
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133429
  time (eval):    0.338011
  gflops (eval):  125.973
  gflops (total): 125.478
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133429,0.338011,125.973,125.478

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0960152
  gflops (total): 443.476
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,443.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485347
  gflops (eval):  877.319
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485347,877.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1708.45
  maximum absolute entry in einsum_ir solution: 1708.45
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134472
  time (eval):    0.338092
  gflops (eval):  125.943
  gflops (total): 125.445
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134472,0.338092,125.943,125.445

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0974481
  gflops (total): 436.955
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485925
  gflops (eval):  876.276
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485925,876.276,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1698.68
  maximum absolute entry in einsum_ir solution: 1698.68
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013569
  time (eval):    0.346368
  gflops (eval):  122.934
  gflops (total): 122.454
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013569,0.346368,122.934,122.454

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.097092
  gflops (total): 438.558
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.558

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488319
  gflops (eval):  871.98
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488319,871.98,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1923.43
  maximum absolute entry in einsum_ir solution: 1923.43
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133343
  time (eval):    0.338843
  gflops (eval):  125.664
  gflops (total): 125.172
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133343,0.338843,125.664,125.172

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0984004
  gflops (total): 432.726
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,432.726

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489396
  gflops (eval):  870.062
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489396,870.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1692.42
  maximum absolute entry in einsum_ir solution: 1692.42
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136218
  time (eval):    0.337649
  gflops (eval):  126.108
  gflops (total): 125.602
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136218,0.337649,126.108,125.602

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0958713
  gflops (total): 444.142
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.142

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486668
  gflops (eval):  874.938
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486668,874.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1933.02
  maximum absolute entry in einsum_ir solution: 1933.02
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134246
  time (eval):    0.339064
  gflops (eval):  125.582
  gflops (total): 125.087
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134246,0.339064,125.582,125.087

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0979519
  gflops (total): 434.708
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,434.708

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488191
  gflops (eval):  872.208
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488191,872.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1811.4
  maximum absolute entry in einsum_ir solution: 1811.4
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132546
  time (eval):    0.337823
  gflops (eval):  126.043
  gflops (total): 125.551
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132546,0.337823,126.043,125.551

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0953573
  gflops (total): 446.536
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,446.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487874
  gflops (eval):  872.776
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487874,872.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1647.18
  maximum absolute entry in einsum_ir solution: 1647.18
  maximum element-wise difference:              0.00512695
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134459
  time (eval):    0.33824
  gflops (eval):  125.888
  gflops (total): 125.39
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134459,0.33824,125.888,125.39

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0974447
  gflops (total): 436.97
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487965
  gflops (eval):  872.613
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487965,872.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1606.17
  maximum absolute entry in einsum_ir solution: 1606.17
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00131725
  time (eval):    0.338748
  gflops (eval):  125.699
  gflops (total): 125.212
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00131725,0.338748,125.699,125.212

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963918
  gflops (total): 441.743
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486328
  gflops (eval):  875.55
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486328,875.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1803.88
  maximum absolute entry in einsum_ir solution: 1803.88
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132559
  time (eval):    0.345242
  gflops (eval):  123.335
  gflops (total): 122.863
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132559,0.345242,123.335,122.863

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0986012
  gflops (total): 431.845
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,431.845

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487467
  gflops (eval):  873.504
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487467,873.504,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1754.66
  maximum absolute entry in einsum_ir solution: 1754.66
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138429
  time (eval):    0.338651
  gflops (eval):  125.736
  gflops (total): 125.224
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138429,0.338651,125.736,125.224

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.096724
  gflops (total): 440.226
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486895
  gflops (eval):  874.53
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486895,874.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1637.23
  maximum absolute entry in einsum_ir solution: 1637.23
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136446
  time (eval):    0.33838
  gflops (eval):  125.836
  gflops (total): 125.331
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136446,0.33838,125.836,125.331

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0977797
  gflops (total): 435.473
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486156
  gflops (eval):  875.86
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486156,875.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1747.57
  maximum absolute entry in einsum_ir solution: 1747.57
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00159238
  time (eval):    0.33854
  gflops (eval):  125.777
  gflops (total): 125.188
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00159238,0.33854,125.777,125.188

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963132
  gflops (total): 442.104
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486606
  gflops (eval):  875.05
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486606,875.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1655.97
  maximum absolute entry in einsum_ir solution: 1655.97
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133135
  time (eval):    0.338922
  gflops (eval):  125.635
  gflops (total): 125.143
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133135,0.338922,125.635,125.143

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0978586
  gflops (total): 435.122
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.122

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487786
  gflops (eval):  872.932
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487786,872.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.83
  maximum absolute entry in einsum_ir solution: 1807.83
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00161571
  time (eval):    0.337963
  gflops (eval):  125.991
  gflops (total): 125.392
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00161571,0.337963,125.991,125.392

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0962999
  gflops (total): 442.165
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.165

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487358
  gflops (eval):  873.699
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487358,873.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1765.46
  maximum absolute entry in einsum_ir solution: 1765.46
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133717
  time (eval):    0.337635
  gflops (eval):  126.114
  gflops (total): 125.616
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133717,0.337635,126.114,125.616

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0978074
  gflops (total): 435.35
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488057
  gflops (eval):  872.447
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488057,872.447,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716.01
  maximum absolute entry in einsum_ir solution: 1716.01
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133742
  time (eval):    0.337791
  gflops (eval):  126.056
  gflops (total): 125.558
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133742,0.337791,126.056,125.558

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0962548
  gflops (total): 442.372
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486803
  gflops (eval):  874.696
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486803,874.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.42
  maximum absolute entry in einsum_ir solution: 1682.42
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00160511
  time (eval):    0.337743
  gflops (eval):  126.073
  gflops (total): 125.477
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00160511,0.337743,126.073,125.477

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0983491
  gflops (total): 432.952
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,432.952

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.04879
  gflops (eval):  872.729
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.04879,872.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1800.06
  maximum absolute entry in einsum_ir solution: 1800.06
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133266
  time (eval):    0.337913
  gflops (eval):  126.01
  gflops (total): 125.515
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133266,0.337913,126.01,125.515

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0956021
  gflops (total): 445.392
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,445.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488913
  gflops (eval):  870.921
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488913,870.921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1882.14
  maximum absolute entry in einsum_ir solution: 1882.14
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133159
  time (eval):    0.338003
  gflops (eval):  125.977
  gflops (total): 125.482
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133159,0.338003,125.977,125.482

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0976636
  gflops (total): 435.991
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488816
  gflops (eval):  871.093
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488816,871.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.83
  maximum absolute entry in einsum_ir solution: 1735.83
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00153016
  time (eval):    0.338065
  gflops (eval):  125.953
  gflops (total): 125.386
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00153016,0.338065,125.953,125.386

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0960955
  gflops (total): 443.105
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,443.105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488518
  gflops (eval):  871.624
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488518,871.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1718.52
  maximum absolute entry in einsum_ir solution: 1718.52
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132991
  time (eval):    0.347259
  gflops (eval):  122.619
  gflops (total): 122.151
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132991,0.347259,122.619,122.151

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0982003
  gflops (total): 433.608
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,433.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488238
  gflops (eval):  872.124
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488238,872.124,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1591.38
  maximum absolute entry in einsum_ir solution: 1591.37
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138478
  time (eval):    0.338171
  gflops (eval):  125.914
  gflops (total): 125.4
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138478,0.338171,125.914,125.4

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0964862
  gflops (total): 441.311
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486802
  gflops (eval):  874.697
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486802,874.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1896.03
  maximum absolute entry in einsum_ir solution: 1896.03
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132728
  time (eval):    0.33762
  gflops (eval):  126.119
  gflops (total): 125.625
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132728,0.33762,126.119,125.625

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0972126
  gflops (total): 438.014
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.014

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486535
  gflops (eval):  875.177
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486535,875.177,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1881.23
  maximum absolute entry in einsum_ir solution: 1881.23
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00161935
  time (eval):    0.337749
  gflops (eval):  126.071
  gflops (total): 125.47
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00161935,0.337749,126.071,125.47

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0959936
  gflops (total): 443.576
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,443.576

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487366
  gflops (eval):  873.685
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487366,873.685,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1749.35
  maximum absolute entry in einsum_ir solution: 1749.36
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00140615
  time (eval):    0.338003
  gflops (eval):  125.976
  gflops (total): 125.454
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00140615,0.338003,125.976,125.454

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0977192
  gflops (total): 435.743
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488326
  gflops (eval):  871.967
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488326,871.967,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1981.52
  maximum absolute entry in einsum_ir solution: 1981.52
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133561
  time (eval):    0.339051
  gflops (eval):  125.587
  gflops (total): 125.094
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133561,0.339051,125.587,125.094

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0961732
  gflops (total): 442.747
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.747

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489732
  gflops (eval):  869.464
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489732,869.464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1665.05
  maximum absolute entry in einsum_ir solution: 1665.05
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133126
  time (eval):    0.33848
  gflops (eval):  125.799
  gflops (total): 125.306
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133126,0.33848,125.799,125.306

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0975617
  gflops (total): 436.446
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487385
  gflops (eval):  873.651
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487385,873.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.4
  maximum absolute entry in einsum_ir solution: 1694.39
  maximum element-wise difference:              0.00488281
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00138397
  time (eval):    0.345977
  gflops (eval):  123.073
  gflops (total): 122.583
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00138397,0.345977,123.073,122.583

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0970722
  gflops (total): 438.647
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486513
  gflops (eval):  875.217
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486513,875.217,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1848.28
  maximum absolute entry in einsum_ir solution: 1848.28
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133232
  time (eval):    0.345078
  gflops (eval):  123.394
  gflops (total): 122.919
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133232,0.345078,123.394,122.919

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0972151
  gflops (total): 438.002
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487342
  gflops (eval):  873.728
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487342,873.728,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1778.82
  maximum absolute entry in einsum_ir solution: 1778.82
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132454
  time (eval):    0.33862
  gflops (eval):  125.747
  gflops (total): 125.257
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132454,0.33862,125.747,125.257

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963455
  gflops (total): 441.956
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486839
  gflops (eval):  874.631
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486839,874.631,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1716
  maximum absolute entry in einsum_ir solution: 1716
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136466
  time (eval):    0.338578
  gflops (eval):  125.763
  gflops (total): 125.258
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136466,0.338578,125.763,125.258

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0968701
  gflops (total): 439.562
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488346
  gflops (eval):  871.932
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488346,871.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1742.89
  maximum absolute entry in einsum_ir solution: 1742.89
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135332
  time (eval):    0.346967
  gflops (eval):  122.722
  gflops (total): 122.245
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135332,0.346967,122.722,122.245

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0971458
  gflops (total): 438.315
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486523
  gflops (eval):  875.198
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486523,875.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1682.47
  maximum absolute entry in einsum_ir solution: 1682.47
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133086
  time (eval):    0.338172
  gflops (eval):  125.914
  gflops (total): 125.42
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133086,0.338172,125.914,125.42

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0967721
  gflops (total): 440.007
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.007

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487823
  gflops (eval):  872.866
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487823,872.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1874.25
  maximum absolute entry in einsum_ir solution: 1874.25
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134793
  time (eval):    0.346068
  gflops (eval):  123.041
  gflops (total): 122.563
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134793,0.346068,123.041,122.563

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0967538
  gflops (total): 440.09
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.09

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485835
  gflops (eval):  876.438
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485835,876.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1688.23
  maximum absolute entry in einsum_ir solution: 1688.23
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133794
  time (eval):    0.337935
  gflops (eval):  126.002
  gflops (total): 125.505
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133794,0.337935,126.002,125.505

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0968839
  gflops (total): 439.5
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486973
  gflops (eval):  874.391
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486973,874.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1754.2
  maximum absolute entry in einsum_ir solution: 1754.2
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133347
  time (eval):    0.337629
  gflops (eval):  126.116
  gflops (total): 125.62
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133347,0.337629,126.116,125.62

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0962487
  gflops (total): 442.4
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488425
  gflops (eval):  871.79
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488425,871.79,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1929.34
  maximum absolute entry in einsum_ir solution: 1929.34
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133552
  time (eval):    0.338937
  gflops (eval):  125.629
  gflops (total): 125.136
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133552,0.338937,125.629,125.136

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0976188
  gflops (total): 436.191
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487526
  gflops (eval):  873.398
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487526,873.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1877.92
  maximum absolute entry in einsum_ir solution: 1877.92
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00159955
  time (eval):    0.348198
  gflops (eval):  122.288
  gflops (total): 121.729
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00159955,0.348198,122.288,121.729

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0962316
  gflops (total): 442.479
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485677
  gflops (eval):  876.723
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485677,876.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1739.24
  maximum absolute entry in einsum_ir solution: 1739.24
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00158604
  time (eval):    0.337942
  gflops (eval):  125.999
  gflops (total): 125.411
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00158604,0.337942,125.999,125.411

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0970898
  gflops (total): 438.568
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486694
  gflops (eval):  874.891
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486694,874.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1741.45
  maximum absolute entry in einsum_ir solution: 1741.45
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132709
  time (eval):    0.337762
  gflops (eval):  126.067
  gflops (total): 125.573
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132709,0.337762,126.067,125.573

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0964765
  gflops (total): 441.355
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487637
  gflops (eval):  873.199
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487637,873.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1845.88
  maximum absolute entry in einsum_ir solution: 1845.88
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133355
  time (eval):    0.338467
  gflops (eval):  125.804
  gflops (total): 125.31
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133355,0.338467,125.804,125.31

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0978498
  gflops (total): 435.161
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.161

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048817
  gflops (eval):  872.246
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048817,872.246,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.84
  maximum absolute entry in einsum_ir solution: 1787.84
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134688
  time (eval):    0.338205
  gflops (eval):  125.901
  gflops (total): 125.402
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134688,0.338205,125.901,125.402

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0970509
  gflops (total): 438.743
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.743

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485711
  gflops (eval):  876.662
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485711,876.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1672.35
  maximum absolute entry in einsum_ir solution: 1672.35
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133331
  time (eval):    0.33792
  gflops (eval):  126.007
  gflops (total): 125.512
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133331,0.33792,126.007,125.512

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969443
  gflops (total): 439.226
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488994
  gflops (eval):  870.777
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488994,870.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1665.16
  maximum absolute entry in einsum_ir solution: 1665.16
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133811
  time (eval):    0.338027
  gflops (eval):  125.967
  gflops (total): 125.471
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133811,0.338027,125.967,125.471

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0970133
  gflops (total): 438.913
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0484707
  gflops (eval):  878.477
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0484707,878.477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1842.97
  maximum absolute entry in einsum_ir solution: 1842.97
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134017
  time (eval):    0.338426
  gflops (eval):  125.819
  gflops (total): 125.323
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134017,0.338426,125.819,125.323

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0965849
  gflops (total): 440.86
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.86

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487793
  gflops (eval):  872.92
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487793,872.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1928.05
  maximum absolute entry in einsum_ir solution: 1928.05
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133457
  time (eval):    0.337477
  gflops (eval):  126.173
  gflops (total): 125.676
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133457,0.337477,126.173,125.676

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969582
  gflops (total): 439.163
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.163

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487192
  gflops (eval):  873.997
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487192,873.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1916.15
  maximum absolute entry in einsum_ir solution: 1916.15
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00161665
  time (eval):    0.337597
  gflops (eval):  126.128
  gflops (total): 125.527
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00161665,0.337597,126.128,125.527

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0961774
  gflops (total): 442.728
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487285
  gflops (eval):  873.831
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487285,873.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1842.24
  maximum absolute entry in einsum_ir solution: 1842.24
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134265
  time (eval):    0.338365
  gflops (eval):  125.842
  gflops (total): 125.344
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134265,0.338365,125.842,125.344

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0979572
  gflops (total): 434.684
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,434.684

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487769
  gflops (eval):  872.964
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487769,872.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1861.86
  maximum absolute entry in einsum_ir solution: 1861.86
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134347
  time (eval):    0.338117
  gflops (eval):  125.934
  gflops (total): 125.436
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134347,0.338117,125.934,125.436

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963762
  gflops (total): 441.815
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487191
  gflops (eval):  873.999
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487191,873.999,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1764.89
  maximum absolute entry in einsum_ir solution: 1764.89
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134575
  time (eval):    0.337718
  gflops (eval):  126.083
  gflops (total): 125.582
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134575,0.337718,126.083,125.582

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0977261
  gflops (total): 435.712
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.712

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487646
  gflops (eval):  873.183
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487646,873.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1856.94
  maximum absolute entry in einsum_ir solution: 1856.94
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00143354
  time (eval):    0.338621
  gflops (eval):  125.747
  gflops (total): 125.217
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00143354,0.338621,125.747,125.217

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0955289
  gflops (total): 445.734
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,445.734

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487451
  gflops (eval):  873.532
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487451,873.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1803.58
  maximum absolute entry in einsum_ir solution: 1803.58
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013255
  time (eval):    0.33771
  gflops (eval):  126.086
  gflops (total): 125.593
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013255,0.33771,126.086,125.593

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0979397
  gflops (total): 434.762
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,434.762

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486241
  gflops (eval):  875.706
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486241,875.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1656.05
  maximum absolute entry in einsum_ir solution: 1656.05
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137477
  time (eval):    0.338257
  gflops (eval):  125.882
  gflops (total): 125.372
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137477,0.338257,125.882,125.372

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0966232
  gflops (total): 440.685
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488613
  gflops (eval):  871.456
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488613,871.456,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1826.79
  maximum absolute entry in einsum_ir solution: 1826.79
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134523
  time (eval):    0.338621
  gflops (eval):  125.747
  gflops (total): 125.249
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134523,0.338621,125.747,125.249

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0975722
  gflops (total): 436.399
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487786
  gflops (eval):  872.933
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487786,872.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1743.59
  maximum absolute entry in einsum_ir solution: 1743.59
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133455
  time (eval):    0.338187
  gflops (eval):  125.908
  gflops (total): 125.413
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133455,0.338187,125.908,125.413

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0963368
  gflops (total): 441.995
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.995

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485736
  gflops (eval):  876.617
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485736,876.617,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1744.51
  maximum absolute entry in einsum_ir solution: 1744.51
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013281
  time (eval):    0.345058
  gflops (eval):  123.401
  gflops (total): 122.928
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013281,0.345058,123.401,122.928

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0973271
  gflops (total): 437.498
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.498

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489056
  gflops (eval):  870.666
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489056,870.666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1654.89
  maximum absolute entry in einsum_ir solution: 1654.89
  maximum element-wise difference:              0.00500488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132841
  time (eval):    0.338282
  gflops (eval):  125.872
  gflops (total): 125.38
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132841,0.338282,125.872,125.38

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0962601
  gflops (total): 442.348
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,442.348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487691
  gflops (eval):  873.103
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487691,873.103,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1723.91
  maximum absolute entry in einsum_ir solution: 1723.9
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133992
  time (eval):    0.338225
  gflops (eval):  125.894
  gflops (total): 125.397
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133992,0.338225,125.894,125.397

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969487
  gflops (total): 439.206
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.206

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488579
  gflops (eval):  871.516
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488579,871.516,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1817.69
  maximum absolute entry in einsum_ir solution: 1817.68
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00136192
  time (eval):    0.337784
  gflops (eval):  126.058
  gflops (total): 125.552
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00136192,0.337784,126.058,125.552

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0967187
  gflops (total): 440.25
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.25

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048791
  gflops (eval):  872.711
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048791,872.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.4
  maximum absolute entry in einsum_ir solution: 1773.4
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133635
  time (eval):    0.33788
  gflops (eval):  126.022
  gflops (total): 125.526
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133635,0.33788,126.022,125.526

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969484
  gflops (total): 439.207
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486237
  gflops (eval):  875.713
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486237,875.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1671.02
  maximum absolute entry in einsum_ir solution: 1671.02
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013258
  time (eval):    0.337981
  gflops (eval):  125.985
  gflops (total): 125.492
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013258,0.337981,125.985,125.492

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0958049
  gflops (total): 444.45
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.45

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0483581
  gflops (eval):  880.523
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0483581,880.523,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1663.75
  maximum absolute entry in einsum_ir solution: 1663.75
  maximum element-wise difference:              0.00500488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013274
  time (eval):    0.33761
  gflops (eval):  126.123
  gflops (total): 125.629
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013274,0.33761,126.123,125.629

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969242
  gflops (total): 439.317
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487655
  gflops (eval):  873.168
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487655,873.168,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1657.76
  maximum absolute entry in einsum_ir solution: 1657.76
  maximum element-wise difference:              0.00323486
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.047241
  time (eval):    0.348402
  gflops (eval):  122.217
  gflops (total): 107.623
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.047241,0.348402,122.217,107.623

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0975817
  gflops (total): 436.357
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,436.357

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487289
  gflops (eval):  873.823
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487289,873.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1604.26
  maximum absolute entry in einsum_ir solution: 1604.25
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133145
  time (eval):    0.337628
  gflops (eval):  126.117
  gflops (total): 125.621
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133145,0.337628,126.117,125.621

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.097282
  gflops (total): 437.701
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487065
  gflops (eval):  874.225
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487065,874.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1811.94
  maximum absolute entry in einsum_ir solution: 1811.95
  maximum element-wise difference:              0.00396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134
  time (eval):    0.338743
  gflops (eval):  125.701
  gflops (total): 125.206
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134,0.338743,125.701,125.206

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.09677
  gflops (total): 440.017
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048782
  gflops (eval):  872.871
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048782,872.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1771.15
  maximum absolute entry in einsum_ir solution: 1771.15
  maximum element-wise difference:              0.003479
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132335
  time (eval):    0.337771
  gflops (eval):  126.063
  gflops (total): 125.571
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132335,0.337771,126.063,125.571

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0974232
  gflops (total): 437.066
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048862
  gflops (eval):  871.443
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048862,871.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1650
  maximum absolute entry in einsum_ir solution: 1650
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00135836
  time (eval):    0.337679
  gflops (eval):  126.097
  gflops (total): 125.592
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00135836,0.337679,126.097,125.592

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0959604
  gflops (total): 443.729
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,443.729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488453
  gflops (eval):  871.741
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488453,871.741,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1626.2
  maximum absolute entry in einsum_ir solution: 1626.2
  maximum element-wise difference:              0.00476074
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00132798
  time (eval):    0.33816
  gflops (eval):  125.918
  gflops (total): 125.425
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00132798,0.33816,125.918,125.425

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0977298
  gflops (total): 435.695
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.695

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488278
  gflops (eval):  872.054
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488278,872.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1571.62
  maximum absolute entry in einsum_ir solution: 1571.62
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134345
  time (eval):    0.337438
  gflops (eval):  126.188
  gflops (total): 125.687
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134345,0.337438,126.188,125.687

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0971339
  gflops (total): 438.368
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487048
  gflops (eval):  874.256
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487048,874.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.57
  maximum absolute entry in einsum_ir solution: 1735.57
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134002
  time (eval):    0.347946
  gflops (eval):  122.376
  gflops (total): 121.907
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134002,0.347946,122.376,121.907

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0978962
  gflops (total): 434.955
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,434.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487929
  gflops (eval):  872.677
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487929,872.677,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.87
  maximum absolute entry in einsum_ir solution: 1694.87
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133156
  time (eval):    0.337994
  gflops (eval):  125.98
  gflops (total): 125.486
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133156,0.337994,125.98,125.486

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969542
  gflops (total): 439.181
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.181

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489243
  gflops (eval):  870.333
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489243,870.333,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1851.74
  maximum absolute entry in einsum_ir solution: 1851.73
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.0013788
  time (eval):    0.345109
  gflops (eval):  123.383
  gflops (total): 122.892
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.0013788,0.345109,123.383,122.892

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0969445
  gflops (total): 439.225
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,439.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488095
  gflops (eval):  872.38
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488095,872.38,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1714.83
  maximum absolute entry in einsum_ir solution: 1714.83
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00168885
  time (eval):    0.337732
  gflops (eval):  126.078
  gflops (total): 125.45
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00168885,0.337732,126.078,125.45

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0971932
  gflops (total): 438.101
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.101

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487671
  gflops (eval):  873.138
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487671,873.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1611.43
  maximum absolute entry in einsum_ir solution: 1611.43
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133524
  time (eval):    0.338365
  gflops (eval):  125.842
  gflops (total): 125.347
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133524,0.338365,125.842,125.347

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0970935
  gflops (total): 438.551
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488509
  gflops (eval):  871.641
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488509,871.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1765.32
  maximum absolute entry in einsum_ir solution: 1765.32
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133737
  time (eval):    0.338069
  gflops (eval):  125.952
  gflops (total): 125.456
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133737,0.338069,125.952,125.456

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0970937
  gflops (total): 438.55
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488416
  gflops (eval):  871.806
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488416,871.806,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1722.85
  maximum absolute entry in einsum_ir solution: 1722.85
  maximum element-wise difference:              0.00360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137053
  time (eval):    0.337573
  gflops (eval):  126.137
  gflops (total): 125.627
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137053,0.337573,126.137,125.627

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.096528
  gflops (total): 441.12
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,441.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488002
  gflops (eval):  872.546
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488002,872.546,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.65
  maximum absolute entry in einsum_ir solution: 1702.65
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134242
  time (eval):    0.338412
  gflops (eval):  125.824
  gflops (total): 125.327
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134242,0.338412,125.824,125.327

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0971383
  gflops (total): 438.349
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,438.349

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0489139
  gflops (eval):  870.519
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0489139,870.519,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1757.1
  maximum absolute entry in einsum_ir solution: 1757.1
  maximum element-wise difference:              0.00463867
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00137634
  time (eval):    0.345679
  gflops (eval):  123.179
  gflops (total): 122.691
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00137634,0.345679,123.179,122.691

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0966657
  gflops (total): 440.492
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,440.492

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488523
  gflops (eval):  871.616
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488523,871.616,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1723.58
  maximum absolute entry in einsum_ir solution: 1723.58
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00131959
  time (eval):    0.338212
  gflops (eval):  125.899
  gflops (total): 125.409
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00131959,0.338212,125.899,125.409

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0974174
  gflops (total): 437.093
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.093

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048784
  gflops (eval):  872.837
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048784,872.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.59
  maximum absolute entry in einsum_ir solution: 1756.59
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00134901
  time (eval):    0.337691
  gflops (eval):  126.093
  gflops (total): 125.591
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00134901,0.337691,126.093,125.591

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.095698
  gflops (total): 444.946
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.946

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048776
  gflops (eval):  872.979
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048776,872.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1646.66
  maximum absolute entry in einsum_ir solution: 1646.66
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133479
  time (eval):    0.348431
  gflops (eval):  122.206
  gflops (total): 121.74
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133479,0.348431,122.206,121.74

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0977685
  gflops (total): 435.523
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0487445
  gflops (eval):  873.543
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0487445,873.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1743.71
  maximum absolute entry in einsum_ir solution: 1743.71
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133642
  time (eval):    0.348102
  gflops (eval):  122.322
  gflops (total): 121.854
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133642,0.348102,122.322,121.854

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0958661
  gflops (total): 444.166
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,444.166

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0488161
  gflops (eval):  872.261
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0488161,872.261,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1777.6
  maximum absolute entry in einsum_ir solution: 1777.6
  maximum element-wise difference:              0.00512695
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133519
  time (eval):    0.347429
  gflops (eval):  122.559
  gflops (total): 122.09
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133519,0.347429,122.559,122.09

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0977373
  gflops (total): 435.662
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,435.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0485651
  gflops (eval):  876.77
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0485651,876.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.67
  maximum absolute entry in einsum_ir solution: 1756.67
  maximum element-wise difference:              0.00463867
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.00133371
  time (eval):    0.338959
  gflops (eval):  125.621
  gflops (total): 125.129
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.00133371,0.338959,125.621,125.129

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0959749
  gflops (total): 443.662
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,443.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.048666
  gflops (eval):  874.953
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.048666,874.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1764.22
  maximum absolute entry in einsum_ir solution: 1764.22
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  i,j,e,f,k,l
  k,l,i,j,g,h
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 6
  j: 64
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 4 5 0 1 6 7 6 7 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,4,5,2,3]->[6,4,7,5,2,3]],[[4,5,0,1,6,7]->[6,4,7,0,1,5]]->[0,1,2,3]
  #flops:         42580429824
  time (compile): 0.001343
  time (eval):    0.337915
  gflops (eval):  126.009
  gflops (total): 125.51
CSV_DATA: einsum_ir,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0.001343,0.337915,126.009,125.51

*** benchmarking at::einsum ***
  #flops:         42580429824
  time (total):   0.0973316
  gflops (total): 437.478
CSV_DATA: at::einsum,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0,0,437.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 147456
  #flops:         42580429824
  time (eval):    0.0486767
  gflops (eval):  874.759
CSV_DATA: at::matmul,"ijefkl,klijgh->efgh","6,64,4,94,6,64,6,64","(0,1)",42580429824,0,0.0486767,874.759,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1651.06
  maximum absolute entry in einsum_ir solution: 1651.06
  maximum element-wise difference:              0.0045166
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00165341
  time (eval):    0.328405
  gflops (eval):  126.957
  gflops (total): 126.321
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00165341,0.328405,126.957,126.321

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113433
  gflops (total): 367.561
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.561

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475272
  gflops (eval):  877.251
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475272,877.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1676.96
  maximum absolute entry in einsum_ir solution: 1676.95
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135145
  time (eval):    0.330845
  gflops (eval):  126.021
  gflops (total): 125.508
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135145,0.330845,126.021,125.508

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114513
  gflops (total): 364.094
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.094

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476053
  gflops (eval):  875.814
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476053,875.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1732.84
  maximum absolute entry in einsum_ir solution: 1732.84
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00138855
  time (eval):    0.329687
  gflops (eval):  126.463
  gflops (total): 125.933
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00138855,0.329687,126.463,125.933

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113003
  gflops (total): 368.959
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.959

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473949
  gflops (eval):  879.7
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473949,879.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1805.02
  maximum absolute entry in einsum_ir solution: 1805.02
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135283
  time (eval):    0.328554
  gflops (eval):  126.899
  gflops (total): 126.379
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135283,0.328554,126.899,126.379

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11457
  gflops (total): 363.91
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,363.91

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474341
  gflops (eval):  878.974
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474341,878.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1617.14
  maximum absolute entry in einsum_ir solution: 1617.14
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00138957
  time (eval):    0.331022
  gflops (eval):  125.953
  gflops (total): 125.427
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00138957,0.331022,125.953,125.427

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113676
  gflops (total): 366.773
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475606
  gflops (eval):  876.635
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475606,876.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1851.19
  maximum absolute entry in einsum_ir solution: 1851.19
  maximum element-wise difference:              0.00415039
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013969
  time (eval):    0.328515
  gflops (eval):  126.914
  gflops (total): 126.377
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013969,0.328515,126.914,126.377

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113662
  gflops (total): 366.819
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.819

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475632
  gflops (eval):  876.587
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475632,876.587,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1773.58
  maximum absolute entry in einsum_ir solution: 1773.58
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.001349
  time (eval):    0.329391
  gflops (eval):  126.577
  gflops (total): 126.061
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.001349,0.329391,126.577,126.061

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113252
  gflops (total): 368.146
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474536
  gflops (eval):  878.612
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474536,878.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1786.95
  maximum absolute entry in einsum_ir solution: 1786.95
  maximum element-wise difference:              0.00360107
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135766
  time (eval):    0.330485
  gflops (eval):  126.158
  gflops (total): 125.642
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135766,0.330485,126.158,125.642

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113286
  gflops (total): 368.037
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476199
  gflops (eval):  875.544
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476199,875.544,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1832.7
  maximum absolute entry in einsum_ir solution: 1832.69
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013504
  time (eval):    0.328791
  gflops (eval):  126.808
  gflops (total): 126.289
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013504,0.328791,126.808,126.289

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112681
  gflops (total): 370.011
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474686
  gflops (eval):  878.335
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474686,878.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1645.69
  maximum absolute entry in einsum_ir solution: 1645.69
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134317
  time (eval):    0.328881
  gflops (eval):  126.773
  gflops (total): 126.258
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134317,0.328881,126.773,126.258

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112493
  gflops (total): 370.632
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475813
  gflops (eval):  876.255
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475813,876.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1768.28
  maximum absolute entry in einsum_ir solution: 1768.28
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141346
  time (eval):    0.329602
  gflops (eval):  126.496
  gflops (total): 125.956
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141346,0.329602,126.496,125.956

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113544
  gflops (total): 367.2
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475602
  gflops (eval):  876.643
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475602,876.643,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1810.2
  maximum absolute entry in einsum_ir solution: 1810.2
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013526
  time (eval):    0.32887
  gflops (eval):  126.778
  gflops (total): 126.258
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013526,0.32887,126.778,126.258

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112716
  gflops (total): 369.898
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.898

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476
  gflops (eval):  875.91
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476,875.91,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1769.22
  maximum absolute entry in einsum_ir solution: 1769.22
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013482
  time (eval):    0.328832
  gflops (eval):  126.792
  gflops (total): 126.275
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013482,0.328832,126.792,126.275

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113745
  gflops (total): 366.552
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475918
  gflops (eval):  876.062
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475918,876.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1743.06
  maximum absolute entry in einsum_ir solution: 1743.06
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00152322
  time (eval):    0.329515
  gflops (eval):  126.529
  gflops (total): 125.947
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00152322,0.329515,126.529,125.947

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113172
  gflops (total): 368.407
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.407

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474158
  gflops (eval):  879.313
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474158,879.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1791.02
  maximum absolute entry in einsum_ir solution: 1791.03
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134544
  time (eval):    0.329299
  gflops (eval):  126.612
  gflops (total): 126.097
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134544,0.329299,126.612,126.097

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113549
  gflops (total): 367.183
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.183

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473727
  gflops (eval):  880.112
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473727,880.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1627.06
  maximum absolute entry in einsum_ir solution: 1627.06
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134243
  time (eval):    0.329311
  gflops (eval):  126.608
  gflops (total): 126.094
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134243,0.329311,126.608,126.094

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112313
  gflops (total): 371.223
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.223

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047297
  gflops (eval):  881.521
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047297,881.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1699.4
  maximum absolute entry in einsum_ir solution: 1699.4
  maximum element-wise difference:              0.00311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133607
  time (eval):    0.328471
  gflops (eval):  126.931
  gflops (total): 126.417
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133607,0.328471,126.931,126.417

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114302
  gflops (total): 364.766
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474799
  gflops (eval):  878.125
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474799,878.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1657.98
  maximum absolute entry in einsum_ir solution: 1657.98
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135108
  time (eval):    0.328706
  gflops (eval):  126.841
  gflops (total): 126.322
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135108,0.328706,126.841,126.322

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111517
  gflops (total): 373.873
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,373.873

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475437
  gflops (eval):  876.948
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475437,876.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1622.59
  maximum absolute entry in einsum_ir solution: 1622.59
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134256
  time (eval):    0.328641
  gflops (eval):  126.866
  gflops (total): 126.35
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134256,0.328641,126.866,126.35

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114496
  gflops (total): 364.145
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.145

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474793
  gflops (eval):  878.138
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474793,878.138,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1749.35
  maximum absolute entry in einsum_ir solution: 1749.35
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134694
  time (eval):    0.329618
  gflops (eval):  126.49
  gflops (total): 125.975
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134694,0.329618,126.49,125.975

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112338
  gflops (total): 371.143
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.143

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473602
  gflops (eval):  880.345
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473602,880.345,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.29
  maximum absolute entry in einsum_ir solution: 1761.29
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00162729
  time (eval):    0.328946
  gflops (eval):  126.748
  gflops (total): 126.124
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00162729,0.328946,126.748,126.124

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114923
  gflops (total): 362.794
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474689
  gflops (eval):  878.33
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474689,878.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1685.61
  maximum absolute entry in einsum_ir solution: 1685.61
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134716
  time (eval):    0.327859
  gflops (eval):  127.168
  gflops (total): 126.648
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134716,0.327859,127.168,126.648

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11329
  gflops (total): 368.022
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475585
  gflops (eval):  876.674
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475585,876.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1829.03
  maximum absolute entry in einsum_ir solution: 1829.03
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133863
  time (eval):    0.329405
  gflops (eval):  126.572
  gflops (total): 126.059
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133863,0.329405,126.572,126.059

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115408
  gflops (total): 361.27
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,361.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475573
  gflops (eval):  876.697
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475573,876.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1934.1
  maximum absolute entry in einsum_ir solution: 1934.1
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133933
  time (eval):    0.328736
  gflops (eval):  126.829
  gflops (total): 126.315
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133933,0.328736,126.829,126.315

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113129
  gflops (total): 368.548
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475165
  gflops (eval):  877.45
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475165,877.45,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1722.98
  maximum absolute entry in einsum_ir solution: 1722.98
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135448
  time (eval):    0.3289
  gflops (eval):  126.766
  gflops (total): 126.246
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135448,0.3289,126.766,126.246

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11404
  gflops (total): 365.604
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476771
  gflops (eval):  874.494
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476771,874.494,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1668.58
  maximum absolute entry in einsum_ir solution: 1668.58
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134678
  time (eval):    0.329532
  gflops (eval):  126.523
  gflops (total): 126.008
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134678,0.329532,126.523,126.008

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11259
  gflops (total): 370.31
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474363
  gflops (eval):  878.933
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474363,878.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1745.03
  maximum absolute entry in einsum_ir solution: 1745.03
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134974
  time (eval):    0.329105
  gflops (eval):  126.687
  gflops (total): 126.169
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134974,0.329105,126.687,126.169

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113565
  gflops (total): 367.131
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474632
  gflops (eval):  878.435
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474632,878.435,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1630.83
  maximum absolute entry in einsum_ir solution: 1630.83
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136472
  time (eval):    0.329142
  gflops (eval):  126.673
  gflops (total): 126.15
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136472,0.329142,126.673,126.15

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113569
  gflops (total): 367.12
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.04739
  gflops (eval):  879.791
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.04739,879.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1756.19
  maximum absolute entry in einsum_ir solution: 1756.19
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013511
  time (eval):    0.328738
  gflops (eval):  126.829
  gflops (total): 126.309
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013511,0.328738,126.829,126.309

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112815
  gflops (total): 369.572
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.572

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047516
  gflops (eval):  877.458
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047516,877.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1648.33
  maximum absolute entry in einsum_ir solution: 1648.33
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135247
  time (eval):    0.328594
  gflops (eval):  126.884
  gflops (total): 126.364
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135247,0.328594,126.884,126.364

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113237
  gflops (total): 368.197
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473746
  gflops (eval):  880.077
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473746,880.077,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1791.93
  maximum absolute entry in einsum_ir solution: 1791.93
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133998
  time (eval):    0.32921
  gflops (eval):  126.647
  gflops (total): 126.133
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133998,0.32921,126.647,126.133

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113743
  gflops (total): 366.558
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.558

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475043
  gflops (eval):  877.674
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475043,877.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1806.34
  maximum absolute entry in einsum_ir solution: 1806.34
  maximum element-wise difference:              0.00396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133065
  time (eval):    0.329415
  gflops (eval):  126.568
  gflops (total): 126.059
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133065,0.329415,126.568,126.059

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113531
  gflops (total): 367.243
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.243

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474471
  gflops (eval):  878.733
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474471,878.733,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1797.72
  maximum absolute entry in einsum_ir solution: 1797.72
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135018
  time (eval):    0.331324
  gflops (eval):  125.838
  gflops (total): 125.328
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135018,0.331324,125.838,125.328

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113908
  gflops (total): 366.025
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.025

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.049761
  gflops (eval):  837.872
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.049761,837.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1666.63
  maximum absolute entry in einsum_ir solution: 1666.63
  maximum element-wise difference:              0.00323486
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135628
  time (eval):    0.329221
  gflops (eval):  126.642
  gflops (total): 126.123
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135628,0.329221,126.642,126.123

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112892
  gflops (total): 369.322
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476443
  gflops (eval):  875.096
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476443,875.096,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1684.16
  maximum absolute entry in einsum_ir solution: 1684.16
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134334
  time (eval):    0.328271
  gflops (eval):  127.009
  gflops (total): 126.491
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134334,0.328271,127.009,126.491

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113385
  gflops (total): 367.713
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.713

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476304
  gflops (eval):  875.351
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476304,875.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1782.7
  maximum absolute entry in einsum_ir solution: 1782.7
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134201
  time (eval):    0.328807
  gflops (eval):  126.802
  gflops (total): 126.286
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134201,0.328807,126.802,126.286

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112879
  gflops (total): 369.364
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.364

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475356
  gflops (eval):  877.096
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475356,877.096,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1768.95
  maximum absolute entry in einsum_ir solution: 1768.95
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134663
  time (eval):    0.328806
  gflops (eval):  126.802
  gflops (total): 126.285
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134663,0.328806,126.802,126.285

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114894
  gflops (total): 362.884
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.884

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0472951
  gflops (eval):  881.557
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0472951,881.557,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1782.08
  maximum absolute entry in einsum_ir solution: 1782.08
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134734
  time (eval):    0.329134
  gflops (eval):  126.676
  gflops (total): 126.159
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134734,0.329134,126.676,126.159

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112324
  gflops (total): 371.188
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474564
  gflops (eval):  878.561
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474564,878.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1796.22
  maximum absolute entry in einsum_ir solution: 1796.22
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135297
  time (eval):    0.328843
  gflops (eval):  126.788
  gflops (total): 126.268
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135297,0.328843,126.788,126.268

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11398
  gflops (total): 365.797
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474056
  gflops (eval):  879.503
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474056,879.503,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1793.32
  maximum absolute entry in einsum_ir solution: 1793.32
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133815
  time (eval):    0.330099
  gflops (eval):  126.306
  gflops (total): 125.796
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133815,0.330099,126.306,125.796

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113245
  gflops (total): 368.17
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.17

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475812
  gflops (eval):  876.257
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475812,876.257,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1749.11
  maximum absolute entry in einsum_ir solution: 1749.11
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136721
  time (eval):    0.328792
  gflops (eval):  126.808
  gflops (total): 126.283
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136721,0.328792,126.808,126.283

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115133
  gflops (total): 362.133
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475798
  gflops (eval):  876.281
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475798,876.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1798.84
  maximum absolute entry in einsum_ir solution: 1798.84
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134686
  time (eval):    0.32948
  gflops (eval):  126.543
  gflops (total): 126.028
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134686,0.32948,126.543,126.028

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11325
  gflops (total): 368.152
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.152

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474314
  gflops (eval):  879.024
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474314,879.024,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1725.65
  maximum absolute entry in einsum_ir solution: 1725.65
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0014041
  time (eval):    0.329125
  gflops (eval):  126.679
  gflops (total): 126.141
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0014041,0.329125,126.679,126.141

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114542
  gflops (total): 364.001
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474623
  gflops (eval):  878.452
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474623,878.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1616.32
  maximum absolute entry in einsum_ir solution: 1616.32
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134145
  time (eval):    0.329429
  gflops (eval):  126.563
  gflops (total): 126.049
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134145,0.329429,126.563,126.049

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113401
  gflops (total): 367.663
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.663

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474623
  gflops (eval):  878.452
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474623,878.452,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1642.87
  maximum absolute entry in einsum_ir solution: 1642.87
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134904
  time (eval):    0.329447
  gflops (eval):  126.556
  gflops (total): 126.039
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134904,0.329447,126.556,126.039

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112964
  gflops (total): 369.085
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475895
  gflops (eval):  876.104
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475895,876.104,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1692.92
  maximum absolute entry in einsum_ir solution: 1692.92
  maximum element-wise difference:              0.00311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00141104
  time (eval):    0.330071
  gflops (eval):  126.316
  gflops (total): 125.779
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00141104,0.330071,126.316,125.779

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114223
  gflops (total): 365.017
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474604
  gflops (eval):  878.487
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474604,878.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1750.57
  maximum absolute entry in einsum_ir solution: 1750.57
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135501
  time (eval):    0.331405
  gflops (eval):  125.808
  gflops (total): 125.295
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135501,0.331405,125.808,125.295

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113201
  gflops (total): 368.311
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.311

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475081
  gflops (eval):  877.604
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475081,877.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1866.43
  maximum absolute entry in einsum_ir solution: 1866.43
  maximum element-wise difference:              0.00268555
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00139572
  time (eval):    0.328517
  gflops (eval):  126.914
  gflops (total): 126.377
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00139572,0.328517,126.914,126.377

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113914
  gflops (total): 366.009
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.009

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476468
  gflops (eval):  875.051
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476468,875.051,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1735.23
  maximum absolute entry in einsum_ir solution: 1735.23
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135187
  time (eval):    0.331107
  gflops (eval):  125.921
  gflops (total): 125.409
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135187,0.331107,125.921,125.409

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113163
  gflops (total): 368.437
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476659
  gflops (eval):  874.7
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476659,874.7,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1837.44
  maximum absolute entry in einsum_ir solution: 1837.44
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134513
  time (eval):    0.331228
  gflops (eval):  125.875
  gflops (total): 125.366
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134513,0.331228,125.875,125.366

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114415
  gflops (total): 364.406
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474611
  gflops (eval):  878.474
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474611,878.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1640.63
  maximum absolute entry in einsum_ir solution: 1640.63
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133385
  time (eval):    0.32927
  gflops (eval):  126.623
  gflops (total): 126.112
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133385,0.32927,126.623,126.112

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112499
  gflops (total): 370.612
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.612

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475394
  gflops (eval):  877.026
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475394,877.026,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1791.88
  maximum absolute entry in einsum_ir solution: 1791.88
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00132369
  time (eval):    0.328967
  gflops (eval):  126.74
  gflops (total): 126.232
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00132369,0.328967,126.74,126.232

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114969
  gflops (total): 362.647
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.647

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475292
  gflops (eval):  877.215
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475292,877.215,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1728.46
  maximum absolute entry in einsum_ir solution: 1728.46
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133705
  time (eval):    0.329362
  gflops (eval):  126.588
  gflops (total): 126.077
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133705,0.329362,126.588,126.077

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112539
  gflops (total): 370.479
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475226
  gflops (eval):  877.336
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475226,877.336,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.16
  maximum absolute entry in einsum_ir solution: 1690.16
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133695
  time (eval):    0.328542
  gflops (eval):  126.904
  gflops (total): 126.39
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133695,0.328542,126.904,126.39

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114329
  gflops (total): 364.68
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.68

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475913
  gflops (eval):  876.07
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475913,876.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1694.25
  maximum absolute entry in einsum_ir solution: 1694.25
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134142
  time (eval):    0.32855
  gflops (eval):  126.901
  gflops (total): 126.385
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134142,0.32855,126.901,126.385

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112417
  gflops (total): 370.882
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475709
  gflops (eval):  876.446
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475709,876.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1821.98
  maximum absolute entry in einsum_ir solution: 1821.98
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134161
  time (eval):    0.328702
  gflops (eval):  126.842
  gflops (total): 126.327
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134161,0.328702,126.842,126.327

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113868
  gflops (total): 366.156
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474811
  gflops (eval):  878.105
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474811,878.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1902.05
  maximum absolute entry in einsum_ir solution: 1902.05
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135024
  time (eval):    0.328961
  gflops (eval):  126.742
  gflops (total): 126.224
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135024,0.328961,126.742,126.224

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.111897
  gflops (total): 372.606
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,372.606

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473812
  gflops (eval):  879.955
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473812,879.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1644.55
  maximum absolute entry in einsum_ir solution: 1644.55
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134986
  time (eval):    0.330471
  gflops (eval):  126.163
  gflops (total): 125.65
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134986,0.330471,126.163,125.65

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114394
  gflops (total): 364.471
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.471

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476661
  gflops (eval):  874.696
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476661,874.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1627.24
  maximum absolute entry in einsum_ir solution: 1627.23
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134307
  time (eval):    0.330027
  gflops (eval):  126.333
  gflops (total): 125.821
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134307,0.330027,126.333,125.821

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112774
  gflops (total): 369.707
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.707

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475808
  gflops (eval):  876.263
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475808,876.263,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1761.92
  maximum absolute entry in einsum_ir solution: 1761.92
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00161675
  time (eval):    0.328624
  gflops (eval):  126.872
  gflops (total): 126.251
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00161675,0.328624,126.872,126.251

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11444
  gflops (total): 364.326
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.326

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476711
  gflops (eval):  874.604
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476711,874.604,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2029
  maximum absolute entry in einsum_ir solution: 2029
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134814
  time (eval):    0.329184
  gflops (eval):  126.657
  gflops (total): 126.14
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134814,0.329184,126.657,126.14

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113441
  gflops (total): 367.534
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474333
  gflops (eval):  878.988
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474333,878.988,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1546.1
  maximum absolute entry in einsum_ir solution: 1546.11
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133311
  time (eval):    0.328635
  gflops (eval):  126.868
  gflops (total): 126.356
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133311,0.328635,126.868,126.356

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114366
  gflops (total): 364.56
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.56

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476126
  gflops (eval):  875.678
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476126,875.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1801.87
  maximum absolute entry in einsum_ir solution: 1801.87
  maximum element-wise difference:              0.00427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134155
  time (eval):    0.328825
  gflops (eval):  126.795
  gflops (total): 126.28
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134155,0.328825,126.795,126.28

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112175
  gflops (total): 371.682
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.682

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475158
  gflops (eval):  877.463
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475158,877.463,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1669.21
  maximum absolute entry in einsum_ir solution: 1669.21
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133878
  time (eval):    0.329344
  gflops (eval):  126.595
  gflops (total): 126.083
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133878,0.329344,126.595,126.083

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115186
  gflops (total): 361.965
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,361.965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475199
  gflops (eval):  877.386
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475199,877.386,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1733.63
  maximum absolute entry in einsum_ir solution: 1733.63
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136027
  time (eval):    0.329275
  gflops (eval):  126.622
  gflops (total): 126.101
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136027,0.329275,126.622,126.101

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11291
  gflops (total): 369.261
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.261

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474588
  gflops (eval):  878.516
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474588,878.516,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1935.68
  maximum absolute entry in einsum_ir solution: 1935.68
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134671
  time (eval):    0.328663
  gflops (eval):  126.857
  gflops (total): 126.34
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134671,0.328663,126.857,126.34

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114427
  gflops (total): 364.365
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.365

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475377
  gflops (eval):  877.058
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475377,877.058,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1674.69
  maximum absolute entry in einsum_ir solution: 1674.69
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133967
  time (eval):    0.329
  gflops (eval):  126.727
  gflops (total): 126.213
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133967,0.329,126.727,126.213

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112213
  gflops (total): 371.556
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.556

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047523
  gflops (eval):  877.33
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047523,877.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1749.97
  maximum absolute entry in einsum_ir solution: 1749.97
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134116
  time (eval):    0.331278
  gflops (eval):  125.856
  gflops (total): 125.349
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134116,0.331278,125.856,125.349

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114869
  gflops (total): 362.965
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047497
  gflops (eval):  877.81
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047497,877.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1787.41
  maximum absolute entry in einsum_ir solution: 1787.41
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134575
  time (eval):    0.328761
  gflops (eval):  126.82
  gflops (total): 126.303
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134575,0.328761,126.82,126.303

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113291
  gflops (total): 368.019
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.019

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047391
  gflops (eval):  879.774
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047391,879.774,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1752.7
  maximum absolute entry in einsum_ir solution: 1752.7
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133675
  time (eval):    0.329299
  gflops (eval):  126.612
  gflops (total): 126.1
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133675,0.329299,126.612,126.1

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114872
  gflops (total): 362.954
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,362.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475315
  gflops (eval):  877.172
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475315,877.172,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1784.91
  maximum absolute entry in einsum_ir solution: 1784.91
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133605
  time (eval):    0.32891
  gflops (eval):  126.762
  gflops (total): 126.249
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133605,0.32891,126.762,126.249

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11399
  gflops (total): 365.763
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.763

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474649
  gflops (eval):  878.404
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474649,878.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.65
  maximum absolute entry in einsum_ir solution: 1807.65
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134234
  time (eval):    0.328587
  gflops (eval):  126.887
  gflops (total): 126.371
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134234,0.328587,126.887,126.371

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114711
  gflops (total): 363.463
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,363.463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475837
  gflops (eval):  876.211
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475837,876.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1795.85
  maximum absolute entry in einsum_ir solution: 1795.85
  maximum element-wise difference:              0.00341797
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134047
  time (eval):    0.329091
  gflops (eval):  126.692
  gflops (total): 126.178
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134047,0.329091,126.692,126.178

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113375
  gflops (total): 367.748
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474069
  gflops (eval):  879.479
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474069,879.479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1853.19
  maximum absolute entry in einsum_ir solution: 1853.19
  maximum element-wise difference:              0.00280762
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135096
  time (eval):    0.328968
  gflops (eval):  126.74
  gflops (total): 126.222
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135096,0.328968,126.74,126.222

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114756
  gflops (total): 363.32
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,363.32

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475401
  gflops (eval):  877.013
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475401,877.013,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1727.44
  maximum absolute entry in einsum_ir solution: 1727.44
  maximum element-wise difference:              0.00384521
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134225
  time (eval):    0.329119
  gflops (eval):  126.682
  gflops (total): 126.167
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134225,0.329119,126.682,126.167

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112874
  gflops (total): 369.379
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.379

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473634
  gflops (eval):  880.286
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473634,880.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1695.48
  maximum absolute entry in einsum_ir solution: 1695.48
  maximum element-wise difference:              0.00439453
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013497
  time (eval):    0.329563
  gflops (eval):  126.511
  gflops (total): 125.995
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013497,0.329563,126.511,125.995

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113725
  gflops (total): 366.614
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.614

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474473
  gflops (eval):  878.729
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474473,878.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1668.71
  maximum absolute entry in einsum_ir solution: 1668.71
  maximum element-wise difference:              0.00378418
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136875
  time (eval):    0.328745
  gflops (eval):  126.826
  gflops (total): 126.3
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136875,0.328745,126.826,126.3

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113121
  gflops (total): 368.574
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474802
  gflops (eval):  878.12
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474802,878.12,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1730.44
  maximum absolute entry in einsum_ir solution: 1730.44
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133575
  time (eval):    0.328799
  gflops (eval):  126.805
  gflops (total): 126.292
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133575,0.328799,126.805,126.292

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114126
  gflops (total): 365.329
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.329

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475026
  gflops (eval):  877.707
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475026,877.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1840.91
  maximum absolute entry in einsum_ir solution: 1840.9
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134985
  time (eval):    0.329377
  gflops (eval):  126.583
  gflops (total): 126.066
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134985,0.329377,126.583,126.066

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11227
  gflops (total): 371.368
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,371.368

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474573
  gflops (eval):  878.545
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474573,878.545,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1711.4
  maximum absolute entry in einsum_ir solution: 1711.4
  maximum element-wise difference:              0.00402832
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135959
  time (eval):    0.328404
  gflops (eval):  126.957
  gflops (total): 126.434
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135959,0.328404,126.957,126.434

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.115654
  gflops (total): 360.501
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,360.501

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475537
  gflops (eval):  876.763
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475537,876.763,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1684.79
  maximum absolute entry in einsum_ir solution: 1684.79
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135914
  time (eval):    0.329004
  gflops (eval):  126.726
  gflops (total): 126.204
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135914,0.329004,126.726,126.204

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11244
  gflops (total): 370.806
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.806

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474106
  gflops (eval):  879.41
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474106,879.41,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      2008.62
  maximum absolute entry in einsum_ir solution: 2008.62
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0013537
  time (eval):    0.329153
  gflops (eval):  126.668
  gflops (total): 126.15
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0013537,0.329153,126.668,126.15

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113498
  gflops (total): 367.35
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476463
  gflops (eval):  875.06
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476463,875.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1695.65
  maximum absolute entry in einsum_ir solution: 1695.65
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.0014027
  time (eval):    0.328898
  gflops (eval):  126.767
  gflops (total): 126.228
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.0014027,0.328898,126.767,126.228

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113565
  gflops (total): 367.131
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476116
  gflops (eval):  875.697
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476116,875.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1807.06
  maximum absolute entry in einsum_ir solution: 1807.06
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135599
  time (eval):    0.329802
  gflops (eval):  126.419
  gflops (total): 125.902
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135599,0.329802,126.419,125.902

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114635
  gflops (total): 363.705
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,363.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475423
  gflops (eval):  876.974
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475423,876.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1771.93
  maximum absolute entry in einsum_ir solution: 1771.94
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134295
  time (eval):    0.328623
  gflops (eval):  126.873
  gflops (total): 126.356
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134295,0.328623,126.873,126.356

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113088
  gflops (total): 368.679
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474551
  gflops (eval):  878.585
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474551,878.585,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1597.62
  maximum absolute entry in einsum_ir solution: 1597.62
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136101
  time (eval):    0.328748
  gflops (eval):  126.825
  gflops (total): 126.302
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136101,0.328748,126.825,126.302

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114319
  gflops (total): 364.711
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0473904
  gflops (eval):  879.784
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0473904,879.784,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1876.14
  maximum absolute entry in einsum_ir solution: 1876.14
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135623
  time (eval):    0.328407
  gflops (eval):  126.956
  gflops (total): 126.434
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135623,0.328407,126.956,126.434

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112963
  gflops (total): 369.087
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.087

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475145
  gflops (eval):  877.487
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475145,877.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1789.46
  maximum absolute entry in einsum_ir solution: 1789.46
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00138254
  time (eval):    0.328299
  gflops (eval):  126.998
  gflops (total): 126.465
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00138254,0.328299,126.998,126.465

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114201
  gflops (total): 365.086
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475687
  gflops (eval):  876.487
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475687,876.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1726.13
  maximum absolute entry in einsum_ir solution: 1726.13
  maximum element-wise difference:              0.00305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134571
  time (eval):    0.328529
  gflops (eval):  126.909
  gflops (total): 126.391
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134571,0.328529,126.909,126.391

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113485
  gflops (total): 367.389
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.389

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475853
  gflops (eval):  876.18
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475853,876.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1753.04
  maximum absolute entry in einsum_ir solution: 1753.04
  maximum element-wise difference:              0.0032959
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00139217
  time (eval):    0.328543
  gflops (eval):  126.904
  gflops (total): 126.368
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00139217,0.328543,126.904,126.368

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113524
  gflops (total): 367.265
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.047509
  gflops (eval):  877.589
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.047509,877.589,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1702.65
  maximum absolute entry in einsum_ir solution: 1702.65
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133449
  time (eval):    0.329392
  gflops (eval):  126.577
  gflops (total): 126.066
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133449,0.329392,126.577,126.066

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.11297
  gflops (total): 369.066
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.066

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475736
  gflops (eval):  876.396
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475736,876.396,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1720.42
  maximum absolute entry in einsum_ir solution: 1720.42
  maximum element-wise difference:              0.00366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135187
  time (eval):    0.328635
  gflops (eval):  126.868
  gflops (total): 126.349
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135187,0.328635,126.868,126.349

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113456
  gflops (total): 367.484
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.484

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474881
  gflops (eval):  877.974
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474881,877.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1710.87
  maximum absolute entry in einsum_ir solution: 1710.87
  maximum element-wise difference:              0.00311279
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00136267
  time (eval):    0.328747
  gflops (eval):  126.825
  gflops (total): 126.301
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00136267,0.328747,126.825,126.301

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113572
  gflops (total): 367.11
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474921
  gflops (eval):  877.9
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474921,877.9,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1708.21
  maximum absolute entry in einsum_ir solution: 1708.21
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00133997
  time (eval):    0.32894
  gflops (eval):  126.751
  gflops (total): 126.236
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00133997,0.32894,126.751,126.236

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113103
  gflops (total): 368.631
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,368.631

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475327
  gflops (eval):  877.151
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475327,877.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1656.56
  maximum absolute entry in einsum_ir solution: 1656.56
  maximum element-wise difference:              0.00317383
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134991
  time (eval):    0.329587
  gflops (eval):  126.502
  gflops (total): 125.986
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134991,0.329587,126.502,125.986

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112645
  gflops (total): 370.129
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,370.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475721
  gflops (eval):  876.425
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475721,876.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1840.89
  maximum absolute entry in einsum_ir solution: 1840.89
  maximum element-wise difference:              0.00335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00135592
  time (eval):    0.329772
  gflops (eval):  126.431
  gflops (total): 125.913
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00135592,0.329772,126.431,125.913

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114094
  gflops (total): 365.429
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,365.429

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475548
  gflops (eval):  876.744
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475548,876.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1630.04
  maximum absolute entry in einsum_ir solution: 1630.04
  maximum element-wise difference:              0.00354004
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00140311
  time (eval):    0.329246
  gflops (eval):  126.633
  gflops (total): 126.096
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00140311,0.329246,126.633,126.096

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.112729
  gflops (total): 369.854
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,369.854

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0474901
  gflops (eval):  877.937
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0474901,877.937,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1889.35
  maximum absolute entry in einsum_ir solution: 1889.35
  maximum element-wise difference:              0.00286865
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134111
  time (eval):    0.328455
  gflops (eval):  126.938
  gflops (total): 126.422
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134111,0.328455,126.938,126.422

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113866
  gflops (total): 366.16
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,366.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475264
  gflops (eval):  877.266
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475264,877.266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1825.23
  maximum absolute entry in einsum_ir solution: 1825.23
  maximum element-wise difference:              0.00390625
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134764
  time (eval):    0.329598
  gflops (eval):  126.497
  gflops (total): 125.982
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134764,0.329598,126.497,125.982

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.113379
  gflops (total): 367.735
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,367.735

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0476095
  gflops (eval):  875.735
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0476095,875.735,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1690.79
  maximum absolute entry in einsum_ir solution: 1690.79
  maximum element-wise difference:              0.00372314
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h,i,j
  e,f,g,h
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 6 4 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 4 5 0 1 2 3 

*** benchmarking einsum_ir ***
[[6,7,2,3,4,5]->[4,6,7,5,2,3]],[[0,1,4,5,6,7]->[4,6,7,0,1,5]]->[0,1,2,3]
  #flops:         41693334528
  time (compile): 0.00134716
  time (eval):    0.329098
  gflops (eval):  126.69
  gflops (total): 126.173
CSV_DATA: einsum_ir,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0.00134716,0.329098,126.69,126.173

*** benchmarking at::einsum ***
  #flops:         41693334528
  time (total):   0.114443
  gflops (total): 364.316
CSV_DATA: at::einsum,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0,0,364.316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 376 384 144384
  #flops:         41693334528
  time (eval):    0.0475062
  gflops (eval):  877.639
CSV_DATA: at::matmul,"efijkl,klghij->efgh","6,64,4,94,4,94,6,64","(0,1)",41693334528,0,0.0475062,877.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      1852.59
  maximum absolute entry in einsum_ir solution: 1852.59
  maximum element-wise difference:              0.00292969
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014006
  time (eval):    0.0532351
  gflops (eval):  782.175
  gflops (total): 762.124
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014006,0.0532351,782.175,762.124

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717177
  gflops (total): 580.598
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.598

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830952
  gflops (eval):  501.102
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830952,501.102,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.691
  maximum absolute entry in einsum_ir solution: 111.691
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140168
  time (eval):    0.0535222
  gflops (eval):  777.979
  gflops (total): 758.125
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140168,0.0535222,777.979,758.125

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.072485
  gflops (total): 574.452
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,574.452

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825941
  gflops (eval):  504.143
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825941,504.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.283
  maximum absolute entry in einsum_ir solution: 112.283
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139864
  time (eval):    0.0545596
  gflops (eval):  763.187
  gflops (total): 744.111
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139864,0.0545596,763.187,744.111

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717556
  gflops (total): 580.292
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.292

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828639
  gflops (eval):  502.501
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828639,502.501,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.482
  maximum absolute entry in einsum_ir solution: 112.482
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138592
  time (eval):    0.0539102
  gflops (eval):  772.38
  gflops (total): 753.022
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138592,0.0539102,772.38,753.022

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.072373
  gflops (total): 575.342
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,575.342

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833131
  gflops (eval):  499.791
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833131,499.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.245
  maximum absolute entry in einsum_ir solution: 111.245
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00169163
  time (eval):    0.0530536
  gflops (eval):  784.851
  gflops (total): 760.599
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00169163,0.0530536,784.851,760.599

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716244
  gflops (total): 581.355
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.355

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822702
  gflops (eval):  506.127
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822702,506.127,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.122
  maximum absolute entry in einsum_ir solution: 115.122
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00165497
  time (eval):    0.0540434
  gflops (eval):  770.477
  gflops (total): 747.584
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00165497,0.0540434,770.477,747.584

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0722022
  gflops (total): 576.702
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.702

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832165
  gflops (eval):  500.372
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832165,500.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.657
  maximum absolute entry in einsum_ir solution: 112.657
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140602
  time (eval):    0.0532561
  gflops (eval):  781.867
  gflops (total): 761.755
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140602,0.0532561,781.867,761.755

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0715251
  gflops (total): 582.162
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,582.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083199
  gflops (eval):  500.477
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083199,500.477,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.558
  maximum absolute entry in einsum_ir solution: 113.558
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138547
  time (eval):    0.0535387
  gflops (eval):  777.74
  gflops (total): 758.122
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138547,0.0535387,777.74,758.122

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718723
  gflops (total): 579.35
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.35

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825563
  gflops (eval):  504.373
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825563,504.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.414
  maximum absolute entry in einsum_ir solution: 113.414
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0013823
  time (eval):    0.0534645
  gflops (eval):  778.819
  gflops (total): 759.19
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0013823,0.0534645,778.819,759.19

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717969
  gflops (total): 579.958
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835246
  gflops (eval):  498.526
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835246,498.526,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.08
  maximum absolute entry in einsum_ir solution: 109.08
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138665
  time (eval):    0.0543064
  gflops (eval):  766.745
  gflops (total): 747.655
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138665,0.0543064,766.745,747.655

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721756
  gflops (total): 576.915
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.915

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834111
  gflops (eval):  499.204
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834111,499.204,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.451
  maximum absolute entry in einsum_ir solution: 109.451
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138911
  time (eval):    0.0544192
  gflops (eval):  765.156
  gflops (total): 746.11
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138911,0.0544192,765.156,746.11

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716773
  gflops (total): 580.926
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830793
  gflops (eval):  501.198
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830793,501.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.577
  maximum absolute entry in einsum_ir solution: 110.577
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142397
  time (eval):    0.0543881
  gflops (eval):  765.594
  gflops (total): 746.061
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142397,0.0543881,765.594,746.061

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071778
  gflops (total): 580.11
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828851
  gflops (eval):  502.372
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828851,502.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.212
  maximum absolute entry in einsum_ir solution: 112.212
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138718
  time (eval):    0.0531872
  gflops (eval):  782.88
  gflops (total): 762.98
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138718,0.0531872,782.88,762.98

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720954
  gflops (total): 577.557
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826097
  gflops (eval):  504.047
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826097,504.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.075
  maximum absolute entry in einsum_ir solution: 109.075
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138679
  time (eval):    0.0538493
  gflops (eval):  773.254
  gflops (total): 753.84
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138679,0.0538493,773.254,753.84

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720987
  gflops (total): 577.53
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829686
  gflops (eval):  501.867
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829686,501.867,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.533
  maximum absolute entry in einsum_ir solution: 115.533
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139649
  time (eval):    0.0533646
  gflops (eval):  780.277
  gflops (total): 760.379
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139649,0.0533646,780.277,760.379

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719135
  gflops (total): 579.018
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.084079
  gflops (eval):  495.239
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.084079,495.239,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.157
  maximum absolute entry in einsum_ir solution: 121.157
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141783
  time (eval):    0.0537575
  gflops (eval):  774.575
  gflops (total): 754.67
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141783,0.0537575,774.575,754.67

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071592
  gflops (total): 581.618
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083044
  gflops (eval):  501.411
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083044,501.411,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.691
  maximum absolute entry in einsum_ir solution: 115.691
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140435
  time (eval):    0.0539403
  gflops (eval):  771.95
  gflops (total): 752.362
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140435,0.0539403,771.95,752.362

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0724492
  gflops (total): 574.737
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,574.737

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836684
  gflops (eval):  497.669
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836684,497.669,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.649
  maximum absolute entry in einsum_ir solution: 115.649
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00161256
  time (eval):    0.0540465
  gflops (eval):  770.432
  gflops (total): 748.111
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00161256,0.0540465,770.432,748.111

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0715388
  gflops (total): 582.05
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,582.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833681
  gflops (eval):  499.462
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833681,499.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.787
  maximum absolute entry in einsum_ir solution: 110.787
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139385
  time (eval):    0.0534037
  gflops (eval):  779.705
  gflops (total): 759.873
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139385,0.0534037,779.705,759.873

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720305
  gflops (total): 578.078
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.078

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831316
  gflops (eval):  500.883
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831316,500.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.008
  maximum absolute entry in einsum_ir solution: 115.008
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141086
  time (eval):    0.0547076
  gflops (eval):  761.122
  gflops (total): 741.987
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141086,0.0547076,761.122,741.987

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719142
  gflops (total): 579.012
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.012

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834491
  gflops (eval):  498.977
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834491,498.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.816
  maximum absolute entry in einsum_ir solution: 112.816
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139709
  time (eval):    0.0537887
  gflops (eval):  774.125
  gflops (total): 754.527
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139709,0.0537887,774.125,754.527

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0722374
  gflops (total): 576.422
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830692
  gflops (eval):  501.259
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830692,501.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.561
  maximum absolute entry in einsum_ir solution: 113.561
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140351
  time (eval):    0.0538784
  gflops (eval):  772.837
  gflops (total): 753.216
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140351,0.0538784,772.837,753.216

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0714472
  gflops (total): 582.796
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,582.796

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0837139
  gflops (eval):  497.399
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0837139,497.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.52
  maximum absolute entry in einsum_ir solution: 118.52
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139896
  time (eval):    0.0532819
  gflops (eval):  781.489
  gflops (total): 761.495
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139896,0.0532819,781.489,761.495

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071807
  gflops (total): 579.877
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.877

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836302
  gflops (eval):  497.897
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836302,497.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.619
  maximum absolute entry in einsum_ir solution: 119.619
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140197
  time (eval):    0.053987
  gflops (eval):  771.282
  gflops (total): 751.76
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140197,0.053987,771.282,751.76

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719501
  gflops (total): 578.723
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.723

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829736
  gflops (eval):  501.837
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829736,501.837,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.349
  maximum absolute entry in einsum_ir solution: 109.349
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014468
  time (eval):    0.0536244
  gflops (eval):  776.496
  gflops (total): 756.097
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014468,0.0536244,776.496,756.097

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718378
  gflops (total): 579.628
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0821604
  gflops (eval):  506.804
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0821604,506.804,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.167
  maximum absolute entry in einsum_ir solution: 111.167
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00147615
  time (eval):    0.053324
  gflops (eval):  780.872
  gflops (total): 759.837
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00147615,0.053324,780.872,759.837

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071951
  gflops (total): 578.716
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.716

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083249
  gflops (eval):  500.176
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083249,500.176,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.538
  maximum absolute entry in einsum_ir solution: 111.538
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139366
  time (eval):    0.0539242
  gflops (eval):  772.18
  gflops (total): 752.726
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139366,0.0539242,772.18,752.726

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718798
  gflops (total): 579.289
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.289

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831091
  gflops (eval):  501.018
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831091,501.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.376
  maximum absolute entry in einsum_ir solution: 112.376
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138842
  time (eval):    0.0539872
  gflops (eval):  771.279
  gflops (total): 751.941
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138842,0.0539872,771.279,751.941

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720489
  gflops (total): 577.93
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829139
  gflops (eval):  502.198
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829139,502.198,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.06
  maximum absolute entry in einsum_ir solution: 118.06
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014087
  time (eval):    0.0534261
  gflops (eval):  779.379
  gflops (total): 759.357
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014087,0.0534261,779.379,759.357

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071942
  gflops (total): 578.788
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831717
  gflops (eval):  500.641
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831717,500.641,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.65
  maximum absolute entry in einsum_ir solution: 119.65
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139449
  time (eval):    0.054339
  gflops (eval):  766.285
  gflops (total): 747.112
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139449,0.054339,766.285,747.112

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718189
  gflops (total): 579.78
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.78

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834006
  gflops (eval):  499.267
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834006,499.267,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.133
  maximum absolute entry in einsum_ir solution: 120.133
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014059
  time (eval):    0.0541992
  gflops (eval):  768.263
  gflops (total): 748.838
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014059,0.0541992,768.263,748.838

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720188
  gflops (total): 578.171
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825707
  gflops (eval):  504.285
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825707,504.285,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.445
  maximum absolute entry in einsum_ir solution: 111.445
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139129
  time (eval):    0.0540018
  gflops (eval):  771.071
  gflops (total): 751.704
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139129,0.0540018,771.071,751.704

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721237
  gflops (total): 577.33
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0838696
  gflops (eval):  496.476
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0838696,496.476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.521
  maximum absolute entry in einsum_ir solution: 111.521
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0015373
  time (eval):    0.0538029
  gflops (eval):  773.922
  gflops (total): 752.423
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0015373,0.0538029,773.922,752.423

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720608
  gflops (total): 577.834
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831693
  gflops (eval):  500.656
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831693,500.656,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.498
  maximum absolute entry in einsum_ir solution: 121.498
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139845
  time (eval):    0.0537777
  gflops (eval):  774.284
  gflops (total): 754.66
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139845,0.0537777,774.284,754.66

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720948
  gflops (total): 577.562
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.562

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083133
  gflops (eval):  500.874
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083133,500.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.319
  maximum absolute entry in einsum_ir solution: 106.319
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140124
  time (eval):    0.0539794
  gflops (eval):  771.391
  gflops (total): 751.873
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140124,0.0539794,771.391,751.873

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718293
  gflops (total): 579.696
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082088
  gflops (eval):  507.251
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082088,507.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.876
  maximum absolute entry in einsum_ir solution: 121.876
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139056
  time (eval):    0.0538573
  gflops (eval):  773.14
  gflops (total): 753.68
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139056,0.0538573,773.14,753.68

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718757
  gflops (total): 579.322
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083673
  gflops (eval):  497.642
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083673,497.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.457
  maximum absolute entry in einsum_ir solution: 116.457
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139487
  time (eval):    0.053157
  gflops (eval):  783.325
  gflops (total): 763.296
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139487,0.053157,783.325,763.296

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071912
  gflops (total): 579.03
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0838241
  gflops (eval):  496.745
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0838241,496.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.403
  maximum absolute entry in einsum_ir solution: 109.403
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139707
  time (eval):    0.0537929
  gflops (eval):  774.065
  gflops (total): 754.471
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139707,0.0537929,774.065,754.471

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721502
  gflops (total): 577.119
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.119

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835028
  gflops (eval):  498.656
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835028,498.656,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.114
  maximum absolute entry in einsum_ir solution: 114.114
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0013981
  time (eval):    0.0539377
  gflops (eval):  771.987
  gflops (total): 752.483
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0013981,0.0539377,771.987,752.483

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717515
  gflops (total): 580.325
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828585
  gflops (eval):  502.533
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828585,502.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.774
  maximum absolute entry in einsum_ir solution: 114.774
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139319
  time (eval):    0.0538892
  gflops (eval):  772.682
  gflops (total): 753.21
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139319,0.0538892,772.682,753.21

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718172
  gflops (total): 579.794
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832632
  gflops (eval):  500.091
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832632,500.091,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.503
  maximum absolute entry in einsum_ir solution: 109.503
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139575
  time (eval):    0.0539891
  gflops (eval):  771.252
  gflops (total): 751.816
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139575,0.0539891,771.252,751.816

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717439
  gflops (total): 580.387
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.387

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822542
  gflops (eval):  506.226
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822542,506.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.777
  maximum absolute entry in einsum_ir solution: 110.777
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0013914
  time (eval):    0.0541411
  gflops (eval):  769.086
  gflops (total): 749.816
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0013914,0.0541411,769.086,749.816

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717289
  gflops (total): 580.508
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.508

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829461
  gflops (eval):  502.003
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829461,502.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.671
  maximum absolute entry in einsum_ir solution: 110.671
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139028
  time (eval):    0.0544242
  gflops (eval):  765.086
  gflops (total): 746.029
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139028,0.0544242,765.086,746.029

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719806
  gflops (total): 578.478
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0822225
  gflops (eval):  506.421
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0822225,506.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.971
  maximum absolute entry in einsum_ir solution: 112.971
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00144554
  time (eval):    0.0545609
  gflops (eval):  763.168
  gflops (total): 743.471
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00144554,0.0545609,763.168,743.471

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719712
  gflops (total): 578.554
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.554

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082462
  gflops (eval):  504.95
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082462,504.95,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.217
  maximum absolute entry in einsum_ir solution: 113.217
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140303
  time (eval):    0.0536359
  gflops (eval):  776.33
  gflops (total): 756.54
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140303,0.0536359,776.33,756.54

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719954
  gflops (total): 578.359
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.359

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830272
  gflops (eval):  501.512
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830272,501.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.586
  maximum absolute entry in einsum_ir solution: 116.586
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00162319
  time (eval):    0.0546372
  gflops (eval):  762.104
  gflops (total): 740.116
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00162319,0.0546372,762.104,740.116

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716491
  gflops (total): 581.154
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0821879
  gflops (eval):  506.634
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0821879,506.634,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.054
  maximum absolute entry in einsum_ir solution: 118.054
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141072
  time (eval):    0.0543499
  gflops (eval):  766.131
  gflops (total): 746.748
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141072,0.0543499,766.131,746.748

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721318
  gflops (total): 577.265
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.265

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824244
  gflops (eval):  505.181
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824244,505.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.281
  maximum absolute entry in einsum_ir solution: 109.281
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138955
  time (eval):    0.0531801
  gflops (eval):  782.985
  gflops (total): 763.047
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138955,0.0531801,782.985,763.047

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718239
  gflops (total): 579.74
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824586
  gflops (eval):  504.971
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824586,504.971,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.451
  maximum absolute entry in einsum_ir solution: 122.451
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00143759
  time (eval):    0.0542819
  gflops (eval):  767.091
  gflops (total): 747.3
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00143759,0.0542819,767.091,747.3

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721975
  gflops (total): 576.74
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836953
  gflops (eval):  497.509
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836953,497.509,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.752
  maximum absolute entry in einsum_ir solution: 121.752
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141411
  time (eval):    0.0539707
  gflops (eval):  771.515
  gflops (total): 751.816
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141411,0.0539707,771.515,751.816

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718305
  gflops (total): 579.687
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.687

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824437
  gflops (eval):  505.062
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824437,505.062,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.143
  maximum absolute entry in einsum_ir solution: 110.143
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014051
  time (eval):    0.0535722
  gflops (eval):  777.254
  gflops (total): 757.389
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014051,0.0535722,777.254,757.389

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721861
  gflops (total): 576.831
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.831

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834321
  gflops (eval):  499.079
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834321,499.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.47
  maximum absolute entry in einsum_ir solution: 112.47
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138574
  time (eval):    0.0544721
  gflops (eval):  764.413
  gflops (total): 745.449
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138574,0.0544721,764.413,745.449

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721408
  gflops (total): 577.193
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829953
  gflops (eval):  501.706
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829953,501.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.354
  maximum absolute entry in einsum_ir solution: 116.354
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140743
  time (eval):    0.0535331
  gflops (eval):  777.822
  gflops (total): 757.896
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140743,0.0535331,777.822,757.896

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719952
  gflops (total): 578.361
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828346
  gflops (eval):  502.678
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828346,502.678,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.175
  maximum absolute entry in einsum_ir solution: 116.175
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149094
  time (eval):    0.0539507
  gflops (eval):  771.8
  gflops (total): 751.045
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149094,0.0539507,771.8,751.045

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718457
  gflops (total): 579.564
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.564

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824239
  gflops (eval):  505.183
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824239,505.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      129.054
  maximum absolute entry in einsum_ir solution: 129.054
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141691
  time (eval):    0.0536138
  gflops (eval):  776.65
  gflops (total): 756.653
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141691,0.0536138,776.65,756.653

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0722798
  gflops (total): 576.083
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.083

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826345
  gflops (eval):  503.896
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826345,503.896,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.595
  maximum absolute entry in einsum_ir solution: 112.595
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00143912
  time (eval):    0.053549
  gflops (eval):  777.591
  gflops (total): 757.24
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00143912,0.053549,777.591,757.24

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.078504
  gflops (total): 530.409
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,530.409

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0818194
  gflops (eval):  508.916
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0818194,508.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.401
  maximum absolute entry in einsum_ir solution: 111.401
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139739
  time (eval):    0.0537449
  gflops (eval):  774.756
  gflops (total): 755.122
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139739,0.0537449,774.756,755.122

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720038
  gflops (total): 578.291
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.291

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0846274
  gflops (eval):  492.03
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0846274,492.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.546
  maximum absolute entry in einsum_ir solution: 113.546
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139145
  time (eval):    0.0533883
  gflops (eval):  779.932
  gflops (total): 760.121
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139145,0.0533883,779.932,760.121

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719135
  gflops (total): 579.018
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.018

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830043
  gflops (eval):  501.651
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830043,501.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.781
  maximum absolute entry in einsum_ir solution: 114.781
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139856
  time (eval):    0.053518
  gflops (eval):  778.042
  gflops (total): 758.227
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139856,0.053518,778.042,758.227

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719483
  gflops (total): 578.738
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0823763
  gflops (eval):  505.475
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0823763,505.475,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.666
  maximum absolute entry in einsum_ir solution: 117.666
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141247
  time (eval):    0.0538522
  gflops (eval):  773.213
  gflops (total): 753.451
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141247,0.0538522,773.213,753.451

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720157
  gflops (total): 578.196
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824737
  gflops (eval):  504.879
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824737,504.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.882
  maximum absolute entry in einsum_ir solution: 112.882
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140255
  time (eval):    0.0538521
  gflops (eval):  773.214
  gflops (total): 753.588
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140255,0.0538521,773.214,753.588

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0729344
  gflops (total): 570.913
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,570.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0828192
  gflops (eval):  502.772
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0828192,502.772,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.785
  maximum absolute entry in einsum_ir solution: 111.785
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139959
  time (eval):    0.0544256
  gflops (eval):  765.066
  gflops (total): 745.885
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139959,0.0544256,765.066,745.885

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718326
  gflops (total): 579.67
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834555
  gflops (eval):  498.939
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834555,498.939,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.881
  maximum absolute entry in einsum_ir solution: 115.881
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140647
  time (eval):    0.0537005
  gflops (eval):  775.397
  gflops (total): 755.607
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140647,0.0537005,775.397,755.607

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719233
  gflops (total): 578.939
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827313
  gflops (eval):  503.307
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827313,503.307,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.569
  maximum absolute entry in einsum_ir solution: 117.569
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140571
  time (eval):    0.0539709
  gflops (eval):  771.512
  gflops (total): 751.927
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140571,0.0539709,771.512,751.927

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721342
  gflops (total): 577.246
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836139
  gflops (eval):  497.994
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836139,497.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.809
  maximum absolute entry in einsum_ir solution: 108.809
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00143234
  time (eval):    0.053888
  gflops (eval):  772.699
  gflops (total): 752.693
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00143234,0.053888,772.699,752.693

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718204
  gflops (total): 579.769
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.769

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834583
  gflops (eval):  498.922
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834583,498.922,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.25
  maximum absolute entry in einsum_ir solution: 113.25
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140623
  time (eval):    0.0545368
  gflops (eval):  763.506
  gflops (total): 744.314
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140623,0.0545368,763.506,744.314

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717135
  gflops (total): 580.633
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831869
  gflops (eval):  500.55
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831869,500.55,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.344
  maximum absolute entry in einsum_ir solution: 113.344
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138397
  time (eval):    0.0533509
  gflops (eval):  780.478
  gflops (total): 760.744
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138397,0.0533509,780.478,760.744

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720354
  gflops (total): 578.038
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.038

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0839602
  gflops (eval):  495.94
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0839602,495.94,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.842
  maximum absolute entry in einsum_ir solution: 111.842
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00138973
  time (eval):    0.0543913
  gflops (eval):  765.549
  gflops (total): 746.476
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00138973,0.0543913,765.549,746.476

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720207
  gflops (total): 578.156
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.156

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827194
  gflops (eval):  503.379
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827194,503.379,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.04
  maximum absolute entry in einsum_ir solution: 113.04
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140097
  time (eval):    0.0538268
  gflops (eval):  773.577
  gflops (total): 753.954
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140097,0.0538268,773.577,753.954

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721274
  gflops (total): 577.301
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.301

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825485
  gflops (eval):  504.421
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825485,504.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.307
  maximum absolute entry in einsum_ir solution: 110.307
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140684
  time (eval):    0.0536192
  gflops (eval):  776.572
  gflops (total): 756.717
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140684,0.0536192,776.572,756.717

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0715753
  gflops (total): 581.754
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0818264
  gflops (eval):  508.873
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0818264,508.873,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.951
  maximum absolute entry in einsum_ir solution: 116.951
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139467
  time (eval):    0.0538556
  gflops (eval):  773.164
  gflops (total): 753.647
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139467,0.0538556,773.164,753.647

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720738
  gflops (total): 577.73
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.73

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0836478
  gflops (eval):  497.792
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0836478,497.792,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.392
  maximum absolute entry in einsum_ir solution: 113.392
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141307
  time (eval):    0.0537333
  gflops (eval):  774.923
  gflops (total): 755.067
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141307,0.0537333,774.923,755.067

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720215
  gflops (total): 578.149
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.149

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827823
  gflops (eval):  502.996
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827823,502.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.542
  maximum absolute entry in einsum_ir solution: 122.542
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140288
  time (eval):    0.0539567
  gflops (eval):  771.715
  gflops (total): 752.159
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140288,0.0539567,771.715,752.159

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719244
  gflops (total): 578.93
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0831755
  gflops (eval):  500.619
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0831755,500.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.52
  maximum absolute entry in einsum_ir solution: 116.52
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140521
  time (eval):    0.0540684
  gflops (eval):  770.121
  gflops (total): 750.613
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140521,0.0540684,770.121,750.613

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718935
  gflops (total): 579.179
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082871
  gflops (eval):  502.458
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082871,502.458,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      123.378
  maximum absolute entry in einsum_ir solution: 123.378
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141123
  time (eval):    0.054116
  gflops (eval):  769.443
  gflops (total): 749.888
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141123,0.054116,769.443,749.888

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0720727
  gflops (total): 577.739
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833042
  gflops (eval):  499.845
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833042,499.845,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.299
  maximum absolute entry in einsum_ir solution: 109.299
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00167061
  time (eval):    0.0534411
  gflops (eval):  779.161
  gflops (total): 755.542
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00167061,0.0534411,779.161,755.542

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071464
  gflops (total): 582.66
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,582.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0818855
  gflops (eval):  508.505
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0818855,508.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.309
  maximum absolute entry in einsum_ir solution: 115.309
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146201
  time (eval):    0.0543806
  gflops (eval):  765.7
  gflops (total): 745.653
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146201,0.0543806,765.7,745.653

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0722372
  gflops (total): 576.423
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0842594
  gflops (eval):  494.178
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0842594,494.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.728
  maximum absolute entry in einsum_ir solution: 110.728
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140914
  time (eval):    0.0539725
  gflops (eval):  771.489
  gflops (total): 751.859
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140914,0.0539725,771.489,751.859

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716301
  gflops (total): 581.308
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.308

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835457
  gflops (eval):  498.4
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835457,498.4,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.633
  maximum absolute entry in einsum_ir solution: 108.633
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00165678
  time (eval):    0.0543259
  gflops (eval):  766.47
  gflops (total): 743.786
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00165678,0.0543259,766.47,743.786

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0722584
  gflops (total): 576.254
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825652
  gflops (eval):  504.319
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825652,504.319,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      124.938
  maximum absolute entry in einsum_ir solution: 124.938
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139882
  time (eval):    0.0538845
  gflops (eval):  772.749
  gflops (total): 753.197
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139882,0.0538845,772.749,753.197

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716089
  gflops (total): 581.481
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825167
  gflops (eval):  504.615
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825167,504.615,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.488
  maximum absolute entry in einsum_ir solution: 119.488
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00145558
  time (eval):    0.0539493
  gflops (eval):  771.82
  gflops (total): 751.543
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00145558,0.0539493,771.82,751.543

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718623
  gflops (total): 579.43
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083914
  gflops (eval):  496.213
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083914,496.213,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.868
  maximum absolute entry in einsum_ir solution: 110.868
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140136
  time (eval):    0.0536006
  gflops (eval):  776.842
  gflops (total): 757.049
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140136,0.0536006,776.842,757.049

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719279
  gflops (total): 578.902
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.902

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0824603
  gflops (eval):  504.96
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0824603,504.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.585
  maximum absolute entry in einsum_ir solution: 108.585
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140056
  time (eval):    0.054206
  gflops (eval):  768.166
  gflops (total): 748.818
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140056,0.054206,768.166,748.818

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0719835
  gflops (total): 578.455
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.455

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833358
  gflops (eval):  499.655
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833358,499.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.392
  maximum absolute entry in einsum_ir solution: 116.392
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140071
  time (eval):    0.0543523
  gflops (eval):  766.097
  gflops (total): 746.85
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140071,0.0543523,766.097,746.85

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721356
  gflops (total): 577.235
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,577.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0835753
  gflops (eval):  498.224
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0835753,498.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.551
  maximum absolute entry in einsum_ir solution: 114.551
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00142773
  time (eval):    0.0536551
  gflops (eval):  776.053
  gflops (total): 755.938
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00142773,0.0536551,776.053,755.938

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718144
  gflops (total): 579.817
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830067
  gflops (eval):  501.637
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830067,501.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.136
  maximum absolute entry in einsum_ir solution: 111.136
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0013966
  time (eval):    0.0545145
  gflops (eval):  763.818
  gflops (total): 744.739
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0013966,0.0545145,763.818,744.739

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.071954
  gflops (total): 578.692
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,578.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0832145
  gflops (eval):  500.384
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0832145,500.384,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.205
  maximum absolute entry in einsum_ir solution: 119.205
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00166997
  time (eval):    0.0541859
  gflops (eval):  768.451
  gflops (total): 745.476
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00166997,0.0541859,768.451,745.476

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0722146
  gflops (total): 576.604
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.083099
  gflops (eval):  501.079
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.083099,501.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.581
  maximum absolute entry in einsum_ir solution: 114.581
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00143487
  time (eval):    0.0536719
  gflops (eval):  775.809
  gflops (total): 755.609
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00143487,0.0536719,775.809,755.609

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718683
  gflops (total): 579.382
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.382

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0842212
  gflops (eval):  494.403
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0842212,494.403,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.944
  maximum absolute entry in einsum_ir solution: 111.944
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014079
  time (eval):    0.0534947
  gflops (eval):  778.38
  gflops (total): 758.42
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014079,0.0534947,778.38,758.42

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717328
  gflops (total): 580.476
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.476

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0827411
  gflops (eval):  503.247
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0827411,503.247,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.155
  maximum absolute entry in einsum_ir solution: 116.155
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140229
  time (eval):    0.0540669
  gflops (eval):  770.142
  gflops (total): 750.672
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140229,0.0540669,770.142,750.672

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0717855
  gflops (total): 580.05
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,580.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0829677
  gflops (eval):  501.872
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0829677,501.872,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.089
  maximum absolute entry in einsum_ir solution: 113.089
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140549
  time (eval):    0.0531803
  gflops (eval):  782.981
  gflops (total): 762.821
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140549,0.0531803,782.981,762.821

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718331
  gflops (total): 579.666
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.666

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0839611
  gflops (eval):  495.934
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0839611,495.934,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.237
  maximum absolute entry in einsum_ir solution: 119.237
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00149398
  time (eval):    0.0537136
  gflops (eval):  775.207
  gflops (total): 754.229
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00149398,0.0537136,775.207,754.229

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0723
  gflops (total): 575.922
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,575.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0839119
  gflops (eval):  496.225
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0839119,496.225,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.79
  maximum absolute entry in einsum_ir solution: 113.79
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00139068
  time (eval):    0.0537572
  gflops (eval):  774.579
  gflops (total): 755.047
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00139068,0.0537572,774.579,755.047

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718024
  gflops (total): 579.914
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.914

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830705
  gflops (eval):  501.251
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830705,501.251,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.743
  maximum absolute entry in einsum_ir solution: 115.743
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140724
  time (eval):    0.0535931
  gflops (eval):  776.95
  gflops (total): 757.071
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140724,0.0535931,776.95,757.071

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0721707
  gflops (total): 576.955
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,576.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0833429
  gflops (eval):  499.613
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0833429,499.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.703
  maximum absolute entry in einsum_ir solution: 112.703
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141804
  time (eval):    0.0541737
  gflops (eval):  768.623
  gflops (total): 749.017
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141804,0.0541737,768.623,749.017

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716491
  gflops (total): 581.154
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.154

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0826625
  gflops (eval):  503.725
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0826625,503.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.602
  maximum absolute entry in einsum_ir solution: 113.602
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00140539
  time (eval):    0.0539454
  gflops (eval):  771.877
  gflops (total): 752.279
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00140539,0.0539454,771.877,752.279

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718041
  gflops (total): 579.9
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0817974
  gflops (eval):  509.053
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0817974,509.053,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.663
  maximum absolute entry in einsum_ir solution: 112.663
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141571
  time (eval):    0.0539349
  gflops (eval):  772.027
  gflops (total): 752.28
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141571,0.0539349,772.027,752.28

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718155
  gflops (total): 579.808
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.808

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.082752
  gflops (eval):  503.181
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.082752,503.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.717
  maximum absolute entry in einsum_ir solution: 113.717
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00141462
  time (eval):    0.0543696
  gflops (eval):  765.854
  gflops (total): 746.433
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00141462,0.0543696,765.854,746.433

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718154
  gflops (total): 579.809
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0834771
  gflops (eval):  498.81
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0834771,498.81,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.206
  maximum absolute entry in einsum_ir solution: 118.206
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.00146759
  time (eval):    0.0547067
  gflops (eval):  761.136
  gflops (total): 741.25
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.00146759,0.0547067,761.136,741.25

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0716527
  gflops (total): 581.125
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,581.125

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0825645
  gflops (eval):  504.323
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0825645,504.323,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.629
  maximum absolute entry in einsum_ir solution: 110.629
  maximum element-wise difference:              0
parsed tensors:
  e,f,i,j,k,l
  k,l,g,h
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 4
  h: 94
  i: 4
  j: 94
  k: 6
  l: 64
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 4 5 6 7 6 7 2 3 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[[0,1,4,5,6,7]->[0,1,6,7,4,5]],[[6,7,2,3]->[2,3,6,7]]->[0,1,2,3,4,5]
  #flops:         41639190528
  time (compile): 0.0014019
  time (eval):    0.0534207
  gflops (eval):  779.458
  gflops (total): 759.526
CSV_DATA: einsum_ir,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0.0014019,0.0534207,779.458,759.526

*** benchmarking at::einsum ***
  #flops:         41639190528
  time (total):   0.0718393
  gflops (total): 579.616
CSV_DATA: at::einsum,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0,0,579.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 376 384
  #flops:         41639190528
  time (eval):    0.0830786
  gflops (eval):  501.202
CSV_DATA: at::matmul,"efijkl,klgh->efghij","6,64,4,94,4,94,6,64","(0,1)",41639190528,0,0.0830786,501.202,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.133
  maximum absolute entry in einsum_ir solution: 119.133
  maximum element-wise difference:              0
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137047
  time (eval):    0.0431824
  gflops (eval):  964.236
  gflops (total): 934.575
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137047,0.0431824,964.236,934.575

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0974073
  gflops (total): 427.463
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.463

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832675
  gflops (eval):  500.052
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832675,500.052,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.555
  maximum absolute entry in einsum_ir solution: 109.555
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137559
  time (eval):    0.0433441
  gflops (eval):  960.639
  gflops (total): 931.09
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137559,0.0433441,960.639,931.09

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0964809
  gflops (total): 431.568
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.568

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831729
  gflops (eval):  500.62
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831729,500.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.422
  maximum absolute entry in einsum_ir solution: 108.422
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013568
  time (eval):    0.0432273
  gflops (eval):  963.234
  gflops (total): 933.921
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013568,0.0432273,963.234,933.921

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971135
  gflops (total): 428.756
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0843193
  gflops (eval):  493.814
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0843193,493.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.91
  maximum absolute entry in einsum_ir solution: 111.91
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137343
  time (eval):    0.0431345
  gflops (eval):  965.307
  gflops (total): 935.519
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137343,0.0431345,965.307,935.519

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969756
  gflops (total): 429.366
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0840687
  gflops (eval):  495.286
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0840687,495.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.866
  maximum absolute entry in einsum_ir solution: 111.866
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136715
  time (eval):    0.0431695
  gflops (eval):  964.523
  gflops (total): 934.915
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136715,0.0431695,964.523,934.915

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971472
  gflops (total): 428.608
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.608

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829481
  gflops (eval):  501.977
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829481,501.977,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.766
  maximum absolute entry in einsum_ir solution: 107.766
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135837
  time (eval):    0.0432224
  gflops (eval):  963.345
  gflops (total): 933.992
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135837,0.0432224,963.345,933.992

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0966332
  gflops (total): 430.888
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.888

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0838192
  gflops (eval):  496.76
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0838192,496.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.545
  maximum absolute entry in einsum_ir solution: 108.545
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138259
  time (eval):    0.0433636
  gflops (eval):  960.208
  gflops (total): 930.539
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138259,0.0433636,960.208,930.539

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973408
  gflops (total): 427.755
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839563
  gflops (eval):  495.949
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839563,495.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.19
  maximum absolute entry in einsum_ir solution: 118.19
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138369
  time (eval):    0.0437132
  gflops (eval):  952.527
  gflops (total): 923.301
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138369,0.0437132,952.527,923.301

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969045
  gflops (total): 429.681
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.681

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0840314
  gflops (eval):  495.505
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0840314,495.505,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      105.642
  maximum absolute entry in einsum_ir solution: 105.642
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00134684
  time (eval):    0.0432921
  gflops (eval):  961.794
  gflops (total): 932.775
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00134684,0.0432921,961.794,932.775

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969119
  gflops (total): 429.648
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.648

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839521
  gflops (eval):  495.974
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839521,495.974,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.147
  maximum absolute entry in einsum_ir solution: 120.147
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136221
  time (eval):    0.0431821
  gflops (eval):  964.244
  gflops (total): 934.756
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136221,0.0431821,964.244,934.756

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968755
  gflops (total): 429.81
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.81

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832679
  gflops (eval):  500.049
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832679,500.049,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.768
  maximum absolute entry in einsum_ir solution: 115.768
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138959
  time (eval):    0.0432606
  gflops (eval):  962.492
  gflops (total): 932.538
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138959,0.0432606,962.492,932.538

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967377
  gflops (total): 430.422
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.422

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834843
  gflops (eval):  498.753
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834843,498.753,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.602
  maximum absolute entry in einsum_ir solution: 117.602
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137137
  time (eval):    0.0427824
  gflops (eval):  973.252
  gflops (total): 943.024
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137137,0.0427824,973.252,943.024

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.09769
  gflops (total): 426.226
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,426.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0840673
  gflops (eval):  495.294
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0840673,495.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.822
  maximum absolute entry in einsum_ir solution: 116.822
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137878
  time (eval):    0.0429789
  gflops (eval):  968.803
  gflops (total): 938.689
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137878,0.0429789,968.803,938.689

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.096088
  gflops (total): 433.332
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,433.332

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833888
  gflops (eval):  499.324
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833888,499.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.734
  maximum absolute entry in einsum_ir solution: 109.734
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135038
  time (eval):    0.0433763
  gflops (eval):  959.925
  gflops (total): 930.943
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135038,0.0433763,959.925,930.943

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0978559
  gflops (total): 425.504
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,425.504

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833257
  gflops (eval):  499.702
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833257,499.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.45
  maximum absolute entry in einsum_ir solution: 110.45
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136274
  time (eval):    0.0429976
  gflops (eval):  968.381
  gflops (total): 938.633
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136274,0.0429976,968.381,938.633

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968258
  gflops (total): 430.031
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.031

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083748
  gflops (eval):  497.182
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083748,497.182,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.719
  maximum absolute entry in einsum_ir solution: 112.719
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138284
  time (eval):    0.042683
  gflops (eval):  975.519
  gflops (total): 944.906
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138284,0.042683,975.519,944.906

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969736
  gflops (total): 429.375
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.375

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831379
  gflops (eval):  500.831
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831379,500.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.426
  maximum absolute entry in einsum_ir solution: 112.426
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136542
  time (eval):    0.04303
  gflops (eval):  967.651
  gflops (total): 937.89
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136542,0.04303,967.651,937.89

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0972467
  gflops (total): 428.169
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823672
  gflops (eval):  505.517
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823672,505.517,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.976
  maximum absolute entry in einsum_ir solution: 111.976
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136862
  time (eval):    0.0431007
  gflops (eval):  966.065
  gflops (total): 936.332
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136862,0.0431007,966.065,936.332

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971064
  gflops (total): 428.788
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.788

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0840987
  gflops (eval):  495.109
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0840987,495.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.55
  maximum absolute entry in einsum_ir solution: 109.55
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137016
  time (eval):    0.0427519
  gflops (eval):  973.945
  gflops (total): 943.701
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137016,0.0427519,973.945,943.701

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969976
  gflops (total): 429.269
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.269

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0838947
  gflops (eval):  496.313
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0838947,496.313,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.562
  maximum absolute entry in einsum_ir solution: 113.562
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013726
  time (eval):    0.0430392
  gflops (eval):  967.445
  gflops (total): 937.545
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013726,0.0430392,967.445,937.545

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.097065
  gflops (total): 428.97
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.97

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.08331
  gflops (eval):  499.796
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.08331,499.796,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.169
  maximum absolute entry in einsum_ir solution: 114.169
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137159
  time (eval):    0.0429672
  gflops (eval):  969.066
  gflops (total): 939.089
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137159,0.0429672,969.066,939.089

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971535
  gflops (total): 428.58
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.58

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835256
  gflops (eval):  498.506
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835256,498.506,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.682
  maximum absolute entry in einsum_ir solution: 108.682
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00139527
  time (eval):    0.043337
  gflops (eval):  960.797
  gflops (total): 930.828
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00139527,0.043337,960.797,930.828

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0965375
  gflops (total): 431.315
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823678
  gflops (eval):  505.514
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823678,505.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.126
  maximum absolute entry in einsum_ir solution: 114.126
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136092
  time (eval):    0.0431455
  gflops (eval):  965.061
  gflops (total): 935.552
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136092,0.0431455,965.061,935.552

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0977427
  gflops (total): 425.996
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,425.996

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0843871
  gflops (eval):  493.417
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0843871,493.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.59
  maximum absolute entry in einsum_ir solution: 110.59
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136416
  time (eval):    0.0427337
  gflops (eval):  974.361
  gflops (total): 944.219
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136416,0.0427337,974.361,944.219

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967901
  gflops (total): 430.189
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834004
  gflops (eval):  499.255
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834004,499.255,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.907
  maximum absolute entry in einsum_ir solution: 112.907
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00139006
  time (eval):    0.0425896
  gflops (eval):  977.658
  gflops (total): 946.757
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00139006,0.0425896,977.658,946.757

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0978307
  gflops (total): 425.613
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,425.613

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083673
  gflops (eval):  497.628
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083673,497.628,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.005
  maximum absolute entry in einsum_ir solution: 113.005
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137597
  time (eval):    0.0432805
  gflops (eval):  962.05
  gflops (total): 932.407
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137597,0.0432805,962.05,932.407

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967555
  gflops (total): 430.343
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.343

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829379
  gflops (eval):  502.039
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829379,502.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.458
  maximum absolute entry in einsum_ir solution: 115.458
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00141947
  time (eval):    0.0429618
  gflops (eval):  969.187
  gflops (total): 938.189
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00141947,0.0429618,969.187,938.189

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967565
  gflops (total): 430.338
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.338

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083573
  gflops (eval):  498.224
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083573,498.224,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      119.112
  maximum absolute entry in einsum_ir solution: 119.112
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013482
  time (eval):    0.042968
  gflops (eval):  969.047
  gflops (total): 939.566
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013482,0.042968,969.047,939.566

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971434
  gflops (total): 428.624
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.624

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836605
  gflops (eval):  497.703
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836605,497.703,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.93
  maximum absolute entry in einsum_ir solution: 110.93
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135975
  time (eval):    0.0429016
  gflops (eval):  970.547
  gflops (total): 940.731
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135975,0.0429016,970.547,940.731

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0975163
  gflops (total): 426.985
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,426.985

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832052
  gflops (eval):  500.426
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832052,500.426,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.778
  maximum absolute entry in einsum_ir solution: 113.778
  maximum element-wise difference:              4.673e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137772
  time (eval):    0.0435606
  gflops (eval):  955.866
  gflops (total): 926.561
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137772,0.0435606,955.866,926.561

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.09688
  gflops (total): 429.79
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826581
  gflops (eval):  503.738
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826581,503.738,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.458
  maximum absolute entry in einsum_ir solution: 115.458
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00169843
  time (eval):    0.0430804
  gflops (eval):  966.52
  gflops (total): 929.861
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00169843,0.0430804,966.52,929.861

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0972185
  gflops (total): 428.293
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.293

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083386
  gflops (eval):  499.341
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083386,499.341,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.123
  maximum absolute entry in einsum_ir solution: 115.123
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135845
  time (eval):    0.0431446
  gflops (eval):  965.081
  gflops (total): 935.622
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135845,0.0431446,965.081,935.622

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.097115
  gflops (total): 428.75
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.75

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829291
  gflops (eval):  502.092
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829291,502.092,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.465
  maximum absolute entry in einsum_ir solution: 109.465
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136427
  time (eval):    0.0431221
  gflops (eval):  965.585
  gflops (total): 935.973
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136427,0.0431221,965.585,935.973

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0974627
  gflops (total): 427.22
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.22

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839487
  gflops (eval):  495.994
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839487,495.994,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.217
  maximum absolute entry in einsum_ir solution: 115.217
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00161036
  time (eval):    0.0435116
  gflops (eval):  956.942
  gflops (total): 922.79
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00161036,0.0435116,956.942,922.79

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.097448
  gflops (total): 427.285
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.285

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830921
  gflops (eval):  501.107
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830921,501.107,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.993
  maximum absolute entry in einsum_ir solution: 110.993
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136737
  time (eval):    0.0434247
  gflops (eval):  958.856
  gflops (total): 929.585
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136737,0.0434247,958.856,929.585

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967383
  gflops (total): 430.419
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.419

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0838911
  gflops (eval):  496.334
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0838911,496.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.452
  maximum absolute entry in einsum_ir solution: 114.452
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136724
  time (eval):    0.0429316
  gflops (eval):  969.869
  gflops (total): 939.935
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136724,0.0429316,969.869,939.935

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967356
  gflops (total): 430.431
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.431

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833924
  gflops (eval):  499.303
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833924,499.303,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.895
  maximum absolute entry in einsum_ir solution: 121.895
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137601
  time (eval):    0.0431005
  gflops (eval):  966.069
  gflops (total): 936.181
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137601,0.0431005,966.069,936.181

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0970389
  gflops (total): 429.086
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837437
  gflops (eval):  497.208
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837437,497.208,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.217
  maximum absolute entry in einsum_ir solution: 108.217
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136116
  time (eval):    0.042985
  gflops (eval):  968.665
  gflops (total): 938.933
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136116,0.042985,968.665,938.933

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0972165
  gflops (total): 428.302
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.302

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083623
  gflops (eval):  497.926
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083623,497.926,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.96
  maximum absolute entry in einsum_ir solution: 110.96
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00147803
  time (eval):    0.0429569
  gflops (eval):  969.298
  gflops (total): 937.056
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00147803,0.0429569,969.298,937.056

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0972548
  gflops (total): 428.133
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.133

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0844314
  gflops (eval):  493.158
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0844314,493.158,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.561
  maximum absolute entry in einsum_ir solution: 115.561
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137377
  time (eval):    0.0432752
  gflops (eval):  962.169
  gflops (total): 932.565
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137377,0.0432752,962.169,932.565

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968382
  gflops (total): 429.975
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.975

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839762
  gflops (eval):  495.831
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839762,495.831,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.283
  maximum absolute entry in einsum_ir solution: 118.282
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00190943
  time (eval):    0.0430528
  gflops (eval):  967.138
  gflops (total): 926.066
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00190943,0.0430528,967.138,926.066

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0964237
  gflops (total): 431.824
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839153
  gflops (eval):  496.191
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839153,496.191,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.694
  maximum absolute entry in einsum_ir solution: 112.694
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135665
  time (eval):    0.042893
  gflops (eval):  970.742
  gflops (total): 940.98
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135665,0.042893,970.742,940.98

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0966662
  gflops (total): 430.74
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834886
  gflops (eval):  498.727
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834886,498.727,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.367
  maximum absolute entry in einsum_ir solution: 108.367
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00165291
  time (eval):    0.0430924
  gflops (eval):  966.25
  gflops (total): 930.556
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00165291,0.0430924,966.25,930.556

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967828
  gflops (total): 430.222
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.222

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833657
  gflops (eval):  499.462
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833657,499.462,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.024
  maximum absolute entry in einsum_ir solution: 122.024
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137267
  time (eval):    0.0429782
  gflops (eval):  968.818
  gflops (total): 938.833
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137267,0.0429782,968.818,938.833

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0970311
  gflops (total): 429.12
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837442
  gflops (eval):  497.205
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837442,497.205,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.577
  maximum absolute entry in einsum_ir solution: 110.577
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136717
  time (eval):    0.0427111
  gflops (eval):  974.877
  gflops (total): 944.639
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136717,0.0427111,974.877,944.639

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0965512
  gflops (total): 431.254
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.254

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836173
  gflops (eval):  497.96
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836173,497.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.228
  maximum absolute entry in einsum_ir solution: 114.228
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00140251
  time (eval):    0.0430608
  gflops (eval):  966.96
  gflops (total): 936.459
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00140251,0.0430608,966.96,936.459

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973425
  gflops (total): 427.748
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.748

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083648
  gflops (eval):  497.777
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083648,497.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.141
  maximum absolute entry in einsum_ir solution: 112.141
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136214
  time (eval):    0.0427588
  gflops (eval):  973.788
  gflops (total): 943.724
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136214,0.0427588,973.788,943.724

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.097549
  gflops (total): 426.842
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,426.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834889
  gflops (eval):  498.726
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834889,498.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.901
  maximum absolute entry in einsum_ir solution: 114.901
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136893
  time (eval):    0.0427414
  gflops (eval):  974.185
  gflops (total): 943.952
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136893,0.0427414,974.185,943.952

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968739
  gflops (total): 429.817
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835058
  gflops (eval):  498.624
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835058,498.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.515
  maximum absolute entry in einsum_ir solution: 118.515
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142205
  time (eval):    0.0430775
  gflops (eval):  966.584
  gflops (total): 935.696
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142205,0.0430775,966.584,935.696

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0978692
  gflops (total): 425.446
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,425.446

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839742
  gflops (eval):  495.843
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839742,495.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.576
  maximum absolute entry in einsum_ir solution: 111.576
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136103
  time (eval):    0.0432538
  gflops (eval):  962.644
  gflops (total): 933.278
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136103,0.0432538,962.644,933.278

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.097238
  gflops (total): 428.207
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.207

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0830309
  gflops (eval):  501.476
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0830309,501.476,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.316
  maximum absolute entry in einsum_ir solution: 109.316
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137363
  time (eval):    0.0431642
  gflops (eval):  964.643
  gflops (total): 934.892
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137363,0.0431642,964.643,934.892

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0975397
  gflops (total): 426.883
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,426.883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826804
  gflops (eval):  503.602
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826804,503.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.198
  maximum absolute entry in einsum_ir solution: 109.198
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0016178
  time (eval):    0.0435384
  gflops (eval):  956.352
  gflops (total): 922.089
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0016178,0.0435384,956.352,922.089

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0964656
  gflops (total): 431.636
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836807
  gflops (eval):  497.582
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836807,497.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.272
  maximum absolute entry in einsum_ir solution: 116.272
  maximum element-wise difference:              4.76837e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137202
  time (eval):    0.0429262
  gflops (eval):  969.992
  gflops (total): 939.949
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137202,0.0429262,969.992,939.949

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971533
  gflops (total): 428.581
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.581

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836111
  gflops (eval):  497.997
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836111,497.997,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.163
  maximum absolute entry in einsum_ir solution: 115.163
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00163913
  time (eval):    0.0431364
  gflops (eval):  965.265
  gflops (total): 929.928
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00163913,0.0431364,965.265,929.928

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.096896
  gflops (total): 429.719
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.719

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831409
  gflops (eval):  500.813
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831409,500.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.017
  maximum absolute entry in einsum_ir solution: 111.017
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00144394
  time (eval):    0.0431617
  gflops (eval):  964.699
  gflops (total): 933.47
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00144394,0.0431617,964.699,933.47

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.097457
  gflops (total): 427.245
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.245

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0826145
  gflops (eval):  504.004
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0826145,504.004,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      122.491
  maximum absolute entry in einsum_ir solution: 122.491
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135155
  time (eval):    0.0432955
  gflops (eval):  961.718
  gflops (total): 932.605
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135155,0.0432955,961.718,932.605

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968228
  gflops (total): 430.044
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.044

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824093
  gflops (eval):  505.259
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824093,505.259,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.107
  maximum absolute entry in einsum_ir solution: 115.107
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135711
  time (eval):    0.0429438
  gflops (eval):  969.593
  gflops (total): 939.891
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135711,0.0429438,969.593,939.891

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0970684
  gflops (total): 428.955
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0841418
  gflops (eval):  494.856
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0841418,494.856,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      106.606
  maximum absolute entry in einsum_ir solution: 106.606
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138063
  time (eval):    0.0434312
  gflops (eval):  958.714
  gflops (total): 929.176
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138063,0.0434312,958.714,929.176

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0966629
  gflops (total): 430.755
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.755

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835489
  gflops (eval):  498.367
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835489,498.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.645
  maximum absolute entry in einsum_ir solution: 112.645
  maximum element-wise difference:              4.3869e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137774
  time (eval):    0.043418
  gflops (eval):  959.004
  gflops (total): 929.509
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137774,0.043418,959.004,929.509

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973878
  gflops (total): 427.549
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.549

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0825174
  gflops (eval):  504.597
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0825174,504.597,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.42
  maximum absolute entry in einsum_ir solution: 108.42
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136499
  time (eval):    0.0432567
  gflops (eval):  962.581
  gflops (total): 933.135
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136499,0.0432567,962.581,933.135

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968322
  gflops (total): 430.002
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.002

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832956
  gflops (eval):  499.883
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832956,499.883,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.586
  maximum absolute entry in einsum_ir solution: 112.586
  maximum element-wise difference:              6.86646e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00156829
  time (eval):    0.0431635
  gflops (eval):  964.659
  gflops (total): 930.838
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00156829,0.0431635,964.659,930.838

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973874
  gflops (total): 427.55
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.55

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082831
  gflops (eval):  502.687
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082831,502.687,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.856
  maximum absolute entry in einsum_ir solution: 113.856
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136739
  time (eval):    0.0428149
  gflops (eval):  972.513
  gflops (total): 942.415
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136739,0.0428149,972.513,942.415

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971564
  gflops (total): 428.567
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835653
  gflops (eval):  498.269
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835653,498.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.121
  maximum absolute entry in einsum_ir solution: 112.121
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137717
  time (eval):    0.0429204
  gflops (eval):  970.123
  gflops (total): 939.963
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137717,0.0429204,970.123,939.963

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973519
  gflops (total): 427.706
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834804
  gflops (eval):  498.776
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834804,498.776,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.457
  maximum absolute entry in einsum_ir solution: 109.457
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013664
  time (eval):    0.0428805
  gflops (eval):  971.025
  gflops (total): 941.038
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013664,0.0428805,971.025,941.038

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0964054
  gflops (total): 431.906
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.906

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0840194
  gflops (eval):  495.577
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0840194,495.577,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.887
  maximum absolute entry in einsum_ir solution: 113.887
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00166794
  time (eval):    0.0429413
  gflops (eval):  969.649
  gflops (total): 933.394
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00166794,0.0429413,969.649,933.394

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0975262
  gflops (total): 426.942
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,426.942

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835618
  gflops (eval):  498.29
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835618,498.29,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.825
  maximum absolute entry in einsum_ir solution: 115.825
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136219
  time (eval):    0.0431472
  gflops (eval):  965.024
  gflops (total): 935.49
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136219,0.0431472,965.024,935.49

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0964842
  gflops (total): 431.553
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0846028
  gflops (eval):  492.159
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0846028,492.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.487
  maximum absolute entry in einsum_ir solution: 108.487
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136423
  time (eval):    0.0434546
  gflops (eval):  958.196
  gflops (total): 929.029
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136423,0.0434546,958.196,929.029

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973035
  gflops (total): 427.919
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.919

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.08414
  gflops (eval):  494.866
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.08414,494.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.561
  maximum absolute entry in einsum_ir solution: 109.561
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136128
  time (eval):    0.0430564
  gflops (eval):  967.059
  gflops (total): 937.421
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136128,0.0430564,967.059,937.421

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967738
  gflops (total): 430.262
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.262

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0824455
  gflops (eval):  505.037
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0824455,505.037,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.433
  maximum absolute entry in einsum_ir solution: 111.433
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137749
  time (eval):    0.042942
  gflops (eval):  969.633
  gflops (total): 939.496
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137749,0.042942,969.633,939.496

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968679
  gflops (total): 429.843
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.843

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839064
  gflops (eval):  496.244
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839064,496.244,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.635
  maximum absolute entry in einsum_ir solution: 112.635
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00140491
  time (eval):    0.0432624
  gflops (eval):  962.453
  gflops (total): 932.181
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00140491,0.0432624,962.453,932.181

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967798
  gflops (total): 430.235
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829839
  gflops (eval):  501.76
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829839,501.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.903
  maximum absolute entry in einsum_ir solution: 107.903
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136608
  time (eval):    0.0430286
  gflops (eval):  967.683
  gflops (total): 937.906
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136608,0.0430286,967.683,937.906

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971489
  gflops (total): 428.6
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.082446
  gflops (eval):  505.034
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.082446,505.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.531
  maximum absolute entry in einsum_ir solution: 115.531
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137757
  time (eval):    0.0432532
  gflops (eval):  962.658
  gflops (total): 932.945
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137757,0.0432532,962.658,932.945

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.096715
  gflops (total): 430.523
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.523

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832501
  gflops (eval):  500.156
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832501,500.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.294
  maximum absolute entry in einsum_ir solution: 114.294
  maximum element-wise difference:              5.14984e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136105
  time (eval):    0.0430222
  gflops (eval):  967.827
  gflops (total): 938.148
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136105,0.0430222,967.827,938.148

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967635
  gflops (total): 430.307
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.307

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835778
  gflops (eval):  498.195
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835778,498.195,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.622
  maximum absolute entry in einsum_ir solution: 113.622
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135965
  time (eval):    0.0434231
  gflops (eval):  958.891
  gflops (total): 929.778
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135965,0.0434231,958.891,929.778

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0972766
  gflops (total): 428.037
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.037

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0828212
  gflops (eval):  502.746
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0828212,502.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.76
  maximum absolute entry in einsum_ir solution: 108.76
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013717
  time (eval):    0.0428509
  gflops (eval):  971.695
  gflops (total): 941.555
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013717,0.0428509,971.695,941.555

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0970537
  gflops (total): 429.02
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.02

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832156
  gflops (eval):  500.363
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832156,500.363,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.477
  maximum absolute entry in einsum_ir solution: 108.477
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00139795
  time (eval):    0.0431504
  gflops (eval):  964.951
  gflops (total): 934.67
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00139795,0.0431504,964.951,934.67

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967925
  gflops (total): 430.178
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836587
  gflops (eval):  497.713
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836587,497.713,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.728
  maximum absolute entry in einsum_ir solution: 113.728
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138298
  time (eval):    0.0428522
  gflops (eval):  971.666
  gflops (total): 941.288
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138298,0.0428522,971.666,941.288

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967328
  gflops (total): 430.444
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832003
  gflops (eval):  500.455
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832003,500.455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.467
  maximum absolute entry in einsum_ir solution: 116.467
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137282
  time (eval):    0.043171
  gflops (eval):  964.491
  gflops (total): 934.766
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137282,0.043171,964.491,934.766

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969355
  gflops (total): 429.544
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.544

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.084562
  gflops (eval):  492.397
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.084562,492.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.65
  maximum absolute entry in einsum_ir solution: 113.65
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137196
  time (eval):    0.0432705
  gflops (eval):  962.273
  gflops (total): 932.701
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137196,0.0432705,962.273,932.701

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968593
  gflops (total): 429.882
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831177
  gflops (eval):  500.953
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831177,500.953,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.881
  maximum absolute entry in einsum_ir solution: 118.881
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013512
  time (eval):    0.0430806
  gflops (eval):  966.516
  gflops (total): 937.123
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013512,0.0430806,966.516,937.123

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0965351
  gflops (total): 431.325
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083391
  gflops (eval):  499.311
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083391,499.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.971
  maximum absolute entry in einsum_ir solution: 110.971
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00138232
  time (eval):    0.0430149
  gflops (eval):  967.992
  gflops (total): 937.853
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00138232,0.0430149,967.992,937.853

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0965757
  gflops (total): 431.144
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.144

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0838669
  gflops (eval):  496.478
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0838669,496.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      111.991
  maximum absolute entry in einsum_ir solution: 111.991
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137324
  time (eval):    0.0431483
  gflops (eval):  964.997
  gflops (total): 935.233
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137324,0.0431483,964.997,935.233

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0973225
  gflops (total): 427.836
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.836

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.083891
  gflops (eval):  496.335
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.083891,496.335,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      125.932
  maximum absolute entry in einsum_ir solution: 125.932
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135775
  time (eval):    0.043639
  gflops (eval):  954.148
  gflops (total): 925.357
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135775,0.043639,954.148,925.357

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0963953
  gflops (total): 431.951
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837482
  gflops (eval):  497.181
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837482,497.181,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.464
  maximum absolute entry in einsum_ir solution: 109.464
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136309
  time (eval):    0.0432229
  gflops (eval):  963.332
  gflops (total): 933.881
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136309,0.0432229,963.332,933.881

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969767
  gflops (total): 429.361
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0823101
  gflops (eval):  505.868
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0823101,505.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      115.738
  maximum absolute entry in einsum_ir solution: 115.738
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136474
  time (eval):    0.0429047
  gflops (eval):  970.478
  gflops (total): 940.56
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136474,0.0429047,970.478,940.56

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0966125
  gflops (total): 430.98
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837785
  gflops (eval):  497.001
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837785,497.001,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      112.194
  maximum absolute entry in einsum_ir solution: 112.194
  maximum element-wise difference:              7.24792e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135947
  time (eval):    0.0432158
  gflops (eval):  963.492
  gflops (total): 934.107
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135947,0.0432158,963.492,934.107

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0966879
  gflops (total): 430.644
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831865
  gflops (eval):  500.538
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831865,500.538,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      114.333
  maximum absolute entry in einsum_ir solution: 114.333
  maximum element-wise difference:              4.19617e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137371
  time (eval):    0.0431021
  gflops (eval):  966.034
  gflops (total): 936.196
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137371,0.0431021,966.034,936.196

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969347
  gflops (total): 429.547
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0827005
  gflops (eval):  503.48
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0827005,503.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      107.374
  maximum absolute entry in einsum_ir solution: 107.374
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136546
  time (eval):    0.0432049
  gflops (eval):  963.734
  gflops (total): 934.209
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136546,0.0432049,963.734,934.209

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0971688
  gflops (total): 428.512
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.512

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837264
  gflops (eval):  497.311
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837264,497.311,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      116.029
  maximum absolute entry in einsum_ir solution: 116.029
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00134972
  time (eval):    0.0426782
  gflops (eval):  975.627
  gflops (total): 945.718
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00134972,0.0426782,975.627,945.718

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0974078
  gflops (total): 427.461
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,427.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0835693
  gflops (eval):  498.245
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0835693,498.245,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.381
  maximum absolute entry in einsum_ir solution: 108.381
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00143534
  time (eval):    0.042806
  gflops (eval):  972.715
  gflops (total): 941.157
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00143534,0.042806,972.715,941.157

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0967502
  gflops (total): 430.366
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833254
  gflops (eval):  499.704
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833254,499.704,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      120.243
  maximum absolute entry in einsum_ir solution: 120.243
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136903
  time (eval):    0.0433013
  gflops (eval):  961.589
  gflops (total): 932.119
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136903,0.0433013,961.589,932.119

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969618
  gflops (total): 429.427
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0832056
  gflops (eval):  500.424
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0832056,500.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      109.86
  maximum absolute entry in einsum_ir solution: 109.86
  maximum element-wise difference:              6.10352e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136225
  time (eval):    0.0438962
  gflops (eval):  948.556
  gflops (total): 920.005
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136225,0.0438962,948.556,920.005

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969764
  gflops (total): 429.363
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0836179
  gflops (eval):  497.956
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0836179,497.956,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      110.117
  maximum absolute entry in einsum_ir solution: 110.117
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136428
  time (eval):    0.0425192
  gflops (eval):  979.276
  gflops (total): 948.832
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136428,0.0425192,979.276,948.832

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0970663
  gflops (total): 428.965
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.965

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833353
  gflops (eval):  499.644
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833353,499.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.031
  maximum absolute entry in einsum_ir solution: 113.031
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013494
  time (eval):    0.0428584
  gflops (eval):  971.525
  gflops (total): 941.87
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013494,0.0428584,971.525,941.87

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0964701
  gflops (total): 431.616
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.616

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0829539
  gflops (eval):  501.942
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0829539,501.942,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      118.675
  maximum absolute entry in einsum_ir solution: 118.675
  maximum element-wise difference:              5.53131e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00137877
  time (eval):    0.0431044
  gflops (eval):  965.98
  gflops (total): 936.039
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00137877,0.0431044,965.98,936.039

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0965319
  gflops (total): 431.339
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,431.339

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0833344
  gflops (eval):  499.65
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0833344,499.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.484
  maximum absolute entry in einsum_ir solution: 108.484
  maximum element-wise difference:              4.57764e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00136825
  time (eval):    0.0433435
  gflops (eval):  960.653
  gflops (total): 931.256
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00136825,0.0433435,960.653,931.256

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0972127
  gflops (total): 428.319
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,428.319

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0839734
  gflops (eval):  495.848
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0839734,495.848,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      121.078
  maximum absolute entry in einsum_ir solution: 121.078
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.0013625
  time (eval):    0.0434619
  gflops (eval):  958.036
  gflops (total): 928.915
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.0013625,0.0434619,958.036,928.915

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0969543
  gflops (total): 429.46
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.46

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0834585
  gflops (eval):  498.907
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0834585,498.907,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.945
  maximum absolute entry in einsum_ir solution: 108.945
  maximum element-wise difference:              5.34058e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00151585
  time (eval):    0.0430711
  gflops (eval):  966.729
  gflops (total): 933.862
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00151585,0.0430711,966.729,933.862

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0966292
  gflops (total): 430.905
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,430.905

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837604
  gflops (eval):  497.109
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837604,497.109,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      117.022
  maximum absolute entry in einsum_ir solution: 117.022
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00142863
  time (eval):    0.0425257
  gflops (eval):  979.127
  gflops (total): 947.303
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00142863,0.0425257,979.127,947.303

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0975627
  gflops (total): 426.782
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,426.782

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0837527
  gflops (eval):  497.154
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0837527,497.154,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      108.225
  maximum absolute entry in einsum_ir solution: 108.225
  maximum element-wise difference:              5.72205e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,f,k,l,i,j
  g,h,k,l
  e,f,g,h,i,j
parsed contraction path: 0 1 
parsed dimension ids:
  e: 0
  f: 1
  g: 2
  h: 3
  i: 4
  j: 5
  k: 6
  l: 7
parsed dimension sizes:
  e: 6
  f: 64
  g: 6
  h: 64
  i: 4
  j: 94
  k: 4
  l: 94
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 6 4 6 
  string_dim_ids: 0 1 6 7 4 5 2 3 6 7 0 1 2 3 4 5 

*** benchmarking einsum_ir ***
[0,1,6,7,4,5],[2,3,6,7]->[0,1,2,3,4,5]
  #flops:         41638035456
  time (compile): 0.00135421
  time (eval):    0.0428448
  gflops (eval):  971.834
  gflops (total): 942.058
CSV_DATA: einsum_ir,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0.00135421,0.0428448,971.834,942.058

*** benchmarking at::einsum ***
  #flops:         41638035456
  time (total):   0.0968903
  gflops (total): 429.744
CSV_DATA: at::einsum,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0,0,429.744

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 144384 384 376
  #flops:         41638035456
  time (eval):    0.0831306
  gflops (eval):  500.875
CSV_DATA: at::matmul,"efklij,ghkl->efghij","6,64,6,64,4,94,4,94","(0,1)",41638035456,0,0.0831306,500.875,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      113.846
  maximum absolute entry in einsum_ir solution: 113.846
  maximum element-wise difference:              4.95911e-05
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139814
  time (eval):    0.880713
  gflops (eval):  863.656
  gflops (total): 862.287
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139814,0.880713,863.656,862.287

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788168
  gflops (total): 965.064
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.064

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786074
  gflops (eval):  967.635
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786074,967.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.951
  maximum absolute entry in einsum_ir solution: 474.951
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014121
  time (eval):    0.876512
  gflops (eval):  867.795
  gflops (total): 866.399
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014121,0.876512,867.795,866.399

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786548
  gflops (total): 967.051
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.051

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785255
  gflops (eval):  968.645
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785255,968.645,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.932
  maximum absolute entry in einsum_ir solution: 495.932
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139194
  time (eval):    0.879583
  gflops (eval):  864.765
  gflops (total): 863.398
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139194,0.879583,864.765,863.398

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789803
  gflops (total): 963.067
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791184
  gflops (eval):  961.385
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791184,961.385,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      521.983
  maximum absolute entry in einsum_ir solution: 521.983
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00163322
  time (eval):    0.880016
  gflops (eval):  864.34
  gflops (total): 862.738
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00163322,0.880016,864.34,862.738

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788171
  gflops (total): 965.061
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788676
  gflops (eval):  964.443
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788676,964.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.726
  maximum absolute entry in einsum_ir solution: 466.726
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139195
  time (eval):    0.880218
  gflops (eval):  864.142
  gflops (total): 862.777
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139195,0.880218,864.142,862.777

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787252
  gflops (total): 966.188
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783289
  gflops (eval):  971.075
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783289,971.075,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.571
  maximum absolute entry in einsum_ir solution: 478.571
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138132
  time (eval):    0.880059
  gflops (eval):  864.297
  gflops (total): 862.943
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138132,0.880059,864.297,862.943

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78886
  gflops (total): 964.218
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.218

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78816
  gflops (eval):  965.073
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78816,965.073,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.687
  maximum absolute entry in einsum_ir solution: 501.687
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138084
  time (eval):    0.877606
  gflops (eval):  866.713
  gflops (total): 865.352
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138084,0.877606,866.713,865.352

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788487
  gflops (total): 964.673
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785593
  gflops (eval):  968.228
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785593,968.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.237
  maximum absolute entry in einsum_ir solution: 477.237
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00174296
  time (eval):    0.876337
  gflops (eval):  867.969
  gflops (total): 866.246
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00174296,0.876337,867.969,866.246

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788117
  gflops (total): 965.127
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790956
  gflops (eval):  961.662
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790956,961.662,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.638
  maximum absolute entry in einsum_ir solution: 492.638
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140145
  time (eval):    0.879709
  gflops (eval):  864.641
  gflops (total): 863.266
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140145,0.879709,864.641,863.266

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787565
  gflops (total): 965.803
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.803

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789927
  gflops (eval):  962.915
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789927,962.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.091
  maximum absolute entry in einsum_ir solution: 501.091
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139945
  time (eval):    0.877147
  gflops (eval):  867.167
  gflops (total): 865.786
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139945,0.877147,867.167,865.786

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.794018
  gflops (total): 957.954
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,957.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786142
  gflops (eval):  967.551
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786142,967.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.036
  maximum absolute entry in einsum_ir solution: 454.036
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138899
  time (eval):    0.875997
  gflops (eval):  868.305
  gflops (total): 866.931
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138899,0.875997,868.305,866.931

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790567
  gflops (total): 962.135
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.135

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785985
  gflops (eval):  967.745
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785985,967.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.64
  maximum absolute entry in einsum_ir solution: 461.64
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00136344
  time (eval):    0.880764
  gflops (eval):  863.606
  gflops (total): 862.271
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00136344,0.880764,863.606,862.271

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787024
  gflops (total): 966.467
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.467

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789923
  gflops (eval):  962.92
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789923,962.92,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.792
  maximum absolute entry in einsum_ir solution: 453.792
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0015074
  time (eval):    0.880779
  gflops (eval):  863.591
  gflops (total): 862.115
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0015074,0.880779,863.591,862.115

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.794018
  gflops (total): 957.954
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,957.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786119
  gflops (eval):  967.579
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786119,967.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.814
  maximum absolute entry in einsum_ir solution: 475.814
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138537
  time (eval):    0.880248
  gflops (eval):  864.112
  gflops (total): 862.754
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138537,0.880248,864.112,862.754

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786739
  gflops (total): 966.818
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.818

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785236
  gflops (eval):  968.668
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785236,968.668,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.865
  maximum absolute entry in einsum_ir solution: 480.865
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139201
  time (eval):    0.880389
  gflops (eval):  863.973
  gflops (total): 862.609
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139201,0.880389,863.973,862.609

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789219
  gflops (total): 963.779
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.779

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78545
  gflops (eval):  968.404
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78545,968.404,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.04
  maximum absolute entry in einsum_ir solution: 466.04
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140801
  time (eval):    0.876845
  gflops (eval):  867.465
  gflops (total): 866.075
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140801,0.876845,867.465,866.075

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791137
  gflops (total): 961.443
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787753
  gflops (eval):  965.573
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787753,965.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.113
  maximum absolute entry in einsum_ir solution: 523.113
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138376
  time (eval):    0.880115
  gflops (eval):  864.242
  gflops (total): 862.885
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138376,0.880115,864.242,862.885

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788191
  gflops (total): 965.036
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.036

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78518
  gflops (eval):  968.737
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78518,968.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.913
  maximum absolute entry in einsum_ir solution: 469.913
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138446
  time (eval):    0.880992
  gflops (eval):  863.382
  gflops (total): 862.027
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138446,0.880992,863.382,862.027

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788583
  gflops (total): 964.557
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.557

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785971
  gflops (eval):  967.761
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785971,967.761,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.816
  maximum absolute entry in einsum_ir solution: 499.816
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137865
  time (eval):    0.880831
  gflops (eval):  863.539
  gflops (total): 862.19
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137865,0.880831,863.539,862.19

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792452
  gflops (total): 959.847
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.847

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783438
  gflops (eval):  970.891
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783438,970.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.131
  maximum absolute entry in einsum_ir solution: 471.131
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144684
  time (eval):    0.877203
  gflops (eval):  867.111
  gflops (total): 865.683
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144684,0.877203,867.111,865.683

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788448
  gflops (total): 964.721
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.721

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783411
  gflops (eval):  970.924
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783411,970.924,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.63
  maximum absolute entry in einsum_ir solution: 487.63
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138886
  time (eval):    0.881108
  gflops (eval):  863.268
  gflops (total): 861.91
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138886,0.881108,863.268,861.91

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788739
  gflops (total): 964.366
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785205
  gflops (eval):  968.706
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785205,968.706,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.739
  maximum absolute entry in einsum_ir solution: 486.739
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139251
  time (eval):    0.87656
  gflops (eval):  867.747
  gflops (total): 866.371
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139251,0.87656,867.747,866.371

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788974
  gflops (total): 964.079
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789737
  gflops (eval):  963.146
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789737,963.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.352
  maximum absolute entry in einsum_ir solution: 498.352
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013894
  time (eval):    0.876771
  gflops (eval):  867.538
  gflops (total): 866.166
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013894,0.876771,867.538,866.166

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793381
  gflops (total): 958.724
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791386
  gflops (eval):  961.14
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791386,961.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.687
  maximum absolute entry in einsum_ir solution: 465.687
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139037
  time (eval):    0.879952
  gflops (eval):  864.403
  gflops (total): 863.039
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139037,0.879952,864.403,863.039

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786892
  gflops (total): 966.629
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.629

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78505
  gflops (eval):  968.898
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78505,968.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.404
  maximum absolute entry in einsum_ir solution: 494.404
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142031
  time (eval):    0.879946
  gflops (eval):  864.408
  gflops (total): 863.015
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142031,0.879946,864.408,863.015

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789798
  gflops (total): 963.072
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.072

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784396
  gflops (eval):  969.705
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784396,969.705,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.962
  maximum absolute entry in einsum_ir solution: 476.962
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144457
  time (eval):    0.876828
  gflops (eval):  867.482
  gflops (total): 866.056
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144457,0.876828,867.482,866.056

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785886
  gflops (total): 967.866
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.866

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785355
  gflops (eval):  968.521
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785355,968.521,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.935
  maximum absolute entry in einsum_ir solution: 476.935
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138137
  time (eval):    0.876967
  gflops (eval):  867.345
  gflops (total): 865.981
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138137,0.876967,867.345,865.981

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788641
  gflops (total): 964.486
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.486

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785857
  gflops (eval):  967.902
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785857,967.902,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.824
  maximum absolute entry in einsum_ir solution: 484.824
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00135615
  time (eval):    0.876294
  gflops (eval):  868.01
  gflops (total): 866.669
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00135615,0.876294,868.01,866.669

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788399
  gflops (total): 964.781
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788264
  gflops (eval):  964.946
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788264,964.946,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.396
  maximum absolute entry in einsum_ir solution: 495.396
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013841
  time (eval):    0.876908
  gflops (eval):  867.403
  gflops (total): 866.036
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013841,0.876908,867.403,866.036

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78783
  gflops (total): 965.478
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790532
  gflops (eval):  962.178
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790532,962.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.927
  maximum absolute entry in einsum_ir solution: 482.927
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139162
  time (eval):    0.87713
  gflops (eval):  867.184
  gflops (total): 865.81
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139162,0.87713,867.184,865.81

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788281
  gflops (total): 964.926
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.926

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789843
  gflops (eval):  963.018
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789843,963.018,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.101
  maximum absolute entry in einsum_ir solution: 526.101
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140389
  time (eval):    0.880444
  gflops (eval):  863.919
  gflops (total): 862.544
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140389,0.880444,863.919,862.544

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.79004
  gflops (total): 962.778
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785795
  gflops (eval):  967.979
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785795,967.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.925
  maximum absolute entry in einsum_ir solution: 471.925
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141083
  time (eval):    0.877142
  gflops (eval):  867.171
  gflops (total): 865.779
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141083,0.877142,867.171,865.779

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790209
  gflops (total): 962.571
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.571

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785334
  gflops (eval):  968.547
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785334,968.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.041
  maximum absolute entry in einsum_ir solution: 494.041
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00169017
  time (eval):    0.87629
  gflops (eval):  868.015
  gflops (total): 866.344
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00169017,0.87629,868.015,866.344

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788483
  gflops (total): 964.679
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785077
  gflops (eval):  968.863
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785077,968.863,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      454.802
  maximum absolute entry in einsum_ir solution: 454.802
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143665
  time (eval):    0.880877
  gflops (eval):  863.494
  gflops (total): 862.088
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143665,0.880877,863.494,862.088

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790157
  gflops (total): 962.635
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791825
  gflops (eval):  960.607
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791825,960.607,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      474.398
  maximum absolute entry in einsum_ir solution: 474.398
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00141696
  time (eval):    0.880455
  gflops (eval):  863.909
  gflops (total): 862.521
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00141696,0.880455,863.909,862.521

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.794129
  gflops (total): 957.82
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,957.82

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786371
  gflops (eval):  967.27
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786371,967.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.083
  maximum absolute entry in einsum_ir solution: 465.084
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0326646
  time (eval):    0.880528
  gflops (eval):  863.837
  gflops (total): 832.938
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0326646,0.880528,863.837,832.938

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787215
  gflops (total): 966.232
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.791559
  gflops (eval):  960.93
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.791559,960.93,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.384
  maximum absolute entry in einsum_ir solution: 481.384
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143105
  time (eval):    0.877113
  gflops (eval):  867.2
  gflops (total): 865.788
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143105,0.877113,867.2,865.788

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789239
  gflops (total): 963.754
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785372
  gflops (eval):  968.5
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785372,968.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.191
  maximum absolute entry in einsum_ir solution: 459.191
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138701
  time (eval):    0.880308
  gflops (eval):  864.053
  gflops (total): 862.694
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138701,0.880308,864.053,862.694

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789906
  gflops (total): 962.94
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.94

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785841
  gflops (eval):  967.921
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785841,967.921,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.215
  maximum absolute entry in einsum_ir solution: 493.215
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140792
  time (eval):    0.877709
  gflops (eval):  866.612
  gflops (total): 865.224
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140792,0.877709,866.612,865.224

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788644
  gflops (total): 964.481
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.481

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78623
  gflops (eval):  967.443
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78623,967.443,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.657
  maximum absolute entry in einsum_ir solution: 479.657
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139384
  time (eval):    0.880175
  gflops (eval):  864.184
  gflops (total): 862.817
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139384,0.880175,864.184,862.817

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790669
  gflops (total): 962.011
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785951
  gflops (eval):  967.786
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785951,967.786,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.339
  maximum absolute entry in einsum_ir solution: 463.339
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00167574
  time (eval):    0.880204
  gflops (eval):  864.155
  gflops (total): 862.513
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00167574,0.880204,864.155,862.513

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78945
  gflops (total): 963.496
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.496

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785378
  gflops (eval):  968.493
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785378,968.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.847
  maximum absolute entry in einsum_ir solution: 460.847
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138254
  time (eval):    0.879337
  gflops (eval):  865.007
  gflops (total): 863.649
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138254,0.879337,865.007,863.649

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789752
  gflops (total): 963.129
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.129

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.79146
  gflops (eval):  961.05
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.79146,961.05,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      460.558
  maximum absolute entry in einsum_ir solution: 460.558
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138725
  time (eval):    0.88071
  gflops (eval):  863.659
  gflops (total): 862.301
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138725,0.88071,863.659,862.301

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789876
  gflops (total): 962.977
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.977

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785112
  gflops (eval):  968.82
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785112,968.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.158
  maximum absolute entry in einsum_ir solution: 511.158
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00135985
  time (eval):    0.876145
  gflops (eval):  868.158
  gflops (total): 866.813
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00135985,0.876145,868.158,866.813

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790548
  gflops (total): 962.159
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786871
  gflops (eval):  966.655
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786871,966.655,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.227
  maximum absolute entry in einsum_ir solution: 517.227
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00150414
  time (eval):    0.881967
  gflops (eval):  862.428
  gflops (total): 860.959
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00150414,0.881967,862.428,860.959

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788615
  gflops (total): 964.518
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.518

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784185
  gflops (eval):  969.965
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784185,969.965,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.858
  maximum absolute entry in einsum_ir solution: 471.858
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138728
  time (eval):    0.880068
  gflops (eval):  864.288
  gflops (total): 862.928
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138728,0.880068,864.288,862.928

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787073
  gflops (total): 966.406
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785827
  gflops (eval):  967.938
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785827,967.938,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.226
  maximum absolute entry in einsum_ir solution: 507.226
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140081
  time (eval):    0.882133
  gflops (eval):  862.265
  gflops (total): 860.898
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140081,0.882133,862.265,860.898

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788435
  gflops (total): 964.738
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.738

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786201
  gflops (eval):  967.479
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786201,967.479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.199
  maximum absolute entry in einsum_ir solution: 485.199
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138799
  time (eval):    0.880325
  gflops (eval):  864.036
  gflops (total): 862.676
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138799,0.880325,864.036,862.676

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786926
  gflops (total): 966.588
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.588

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788916
  gflops (eval):  964.15
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788916,964.15,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.176
  maximum absolute entry in einsum_ir solution: 473.176
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137358
  time (eval):    0.876985
  gflops (eval):  867.327
  gflops (total): 865.971
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137358,0.876985,867.327,865.971

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790278
  gflops (total): 962.487
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.487

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78359
  gflops (eval):  970.702
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78359,970.702,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.91
  maximum absolute entry in einsum_ir solution: 484.91
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0014018
  time (eval):    0.877003
  gflops (eval):  867.309
  gflops (total): 865.925
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0014018,0.877003,867.309,865.925

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789778
  gflops (total): 963.097
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.097

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785481
  gflops (eval):  968.366
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785481,968.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.715
  maximum absolute entry in einsum_ir solution: 473.715
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138904
  time (eval):    0.880637
  gflops (eval):  863.73
  gflops (total): 862.37
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138904,0.880637,863.73,862.37

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788207
  gflops (total): 965.017
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785958
  gflops (eval):  967.777
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785958,967.777,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.007
  maximum absolute entry in einsum_ir solution: 538.007
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140167
  time (eval):    0.88051
  gflops (eval):  863.855
  gflops (total): 862.482
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140167,0.88051,863.855,862.482

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789493
  gflops (total): 963.445
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.445

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787584
  gflops (eval):  965.78
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787584,965.78,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.6
  maximum absolute entry in einsum_ir solution: 465.6
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139054
  time (eval):    0.876293
  gflops (eval):  868.012
  gflops (total): 866.637
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139054,0.876293,868.012,866.637

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789113
  gflops (total): 963.908
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.908

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786065
  gflops (eval):  967.646
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786065,967.646,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      554.862
  maximum absolute entry in einsum_ir solution: 554.862
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138764
  time (eval):    0.879792
  gflops (eval):  864.559
  gflops (total): 863.198
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138764,0.879792,864.559,863.198

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792576
  gflops (total): 959.697
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.697

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790606
  gflops (eval):  962.089
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790606,962.089,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.849
  maximum absolute entry in einsum_ir solution: 467.849
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140995
  time (eval):    0.877072
  gflops (eval):  867.241
  gflops (total): 865.849
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140995,0.877072,867.241,865.849

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790132
  gflops (total): 962.665
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.665

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784641
  gflops (eval):  969.402
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784641,969.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.427
  maximum absolute entry in einsum_ir solution: 546.427
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138404
  time (eval):    0.879495
  gflops (eval):  864.852
  gflops (total): 863.493
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138404,0.879495,864.852,863.493

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786731
  gflops (total): 966.827
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.827

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784619
  gflops (eval):  969.43
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784619,969.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.836
  maximum absolute entry in einsum_ir solution: 468.836
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138944
  time (eval):    0.879702
  gflops (eval):  864.648
  gflops (total): 863.284
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138944,0.879702,864.648,863.284

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788315
  gflops (total): 964.885
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784308
  gflops (eval):  969.813
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784308,969.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.557
  maximum absolute entry in einsum_ir solution: 500.557
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139325
  time (eval):    0.880354
  gflops (eval):  864.008
  gflops (total): 862.642
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139325,0.880354,864.008,862.642

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788429
  gflops (total): 964.745
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78245
  gflops (eval):  972.116
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78245,972.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.669
  maximum absolute entry in einsum_ir solution: 497.669
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139133
  time (eval):    0.880306
  gflops (eval):  864.055
  gflops (total): 862.691
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139133,0.880306,864.055,862.691

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.814112
  gflops (total): 934.31
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,934.31

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786744
  gflops (eval):  966.811
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786744,966.811,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.435
  maximum absolute entry in einsum_ir solution: 493.435
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00148751
  time (eval):    0.876511
  gflops (eval):  867.796
  gflops (total): 866.325
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00148751,0.876511,867.796,866.325

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786581
  gflops (total): 967.011
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785657
  gflops (eval):  968.149
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785657,968.149,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.598
  maximum absolute entry in einsum_ir solution: 497.598
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013769
  time (eval):    0.880482
  gflops (eval):  863.882
  gflops (total): 862.534
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013769,0.880482,863.882,862.534

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790378
  gflops (total): 962.366
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786929
  gflops (eval):  966.583
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786929,966.583,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.218
  maximum absolute entry in einsum_ir solution: 528.218
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138295
  time (eval):    0.879473
  gflops (eval):  864.874
  gflops (total): 863.516
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138295,0.879473,864.874,863.516

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78778
  gflops (total): 965.539
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.539

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.782786
  gflops (eval):  971.699
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.782786,971.699,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.033
  maximum absolute entry in einsum_ir solution: 471.033
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00173554
  time (eval):    0.879987
  gflops (eval):  864.368
  gflops (total): 862.667
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00173554,0.879987,864.368,862.667

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788311
  gflops (total): 964.889
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.889

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784556
  gflops (eval):  969.507
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784556,969.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.147
  maximum absolute entry in einsum_ir solution: 480.147
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137511
  time (eval):    0.879914
  gflops (eval):  864.44
  gflops (total): 863.091
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137511,0.879914,864.44,863.091

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788623
  gflops (total): 964.507
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.507

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788079
  gflops (eval):  965.173
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788079,965.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.583
  maximum absolute entry in einsum_ir solution: 489.583
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139073
  time (eval):    0.875981
  gflops (eval):  868.321
  gflops (total): 866.945
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139073,0.875981,868.321,866.945

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787898
  gflops (total): 965.395
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.395

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784166
  gflops (eval):  969.989
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784166,969.989,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.067
  maximum absolute entry in einsum_ir solution: 507.067
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00144628
  time (eval):    0.879867
  gflops (eval):  864.486
  gflops (total): 863.067
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00144628,0.879867,864.486,863.067

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.792681
  gflops (total): 959.569
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,959.569

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784061
  gflops (eval):  970.119
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784061,970.119,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.285
  maximum absolute entry in einsum_ir solution: 478.285
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.001381
  time (eval):    0.879464
  gflops (eval):  864.882
  gflops (total): 863.526
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.001381,0.879464,864.882,863.526

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789174
  gflops (total): 963.834
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.834

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786505
  gflops (eval):  967.105
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786505,967.105,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.065
  maximum absolute entry in einsum_ir solution: 482.064
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137653
  time (eval):    0.877499
  gflops (eval):  866.819
  gflops (total): 865.461
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137653,0.877499,866.819,865.461

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788875
  gflops (total): 964.199
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.199

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790435
  gflops (eval):  962.296
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790435,962.296,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.199
  maximum absolute entry in einsum_ir solution: 503.2
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00146038
  time (eval):    0.879963
  gflops (eval):  864.392
  gflops (total): 862.96
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00146038,0.879963,864.392,862.96

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787489
  gflops (total): 965.896
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784513
  gflops (eval):  969.56
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784513,969.56,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.087
  maximum absolute entry in einsum_ir solution: 461.087
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145768
  time (eval):    0.876727
  gflops (eval):  867.582
  gflops (total): 866.142
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145768,0.876727,867.582,866.142

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78729
  gflops (total): 966.14
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.14

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790919
  gflops (eval):  961.707
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790919,961.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.419
  maximum absolute entry in einsum_ir solution: 494.419
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145534
  time (eval):    0.877941
  gflops (eval):  866.382
  gflops (total): 864.948
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145534,0.877941,866.382,864.948

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785975
  gflops (total): 967.756
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.756

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784928
  gflops (eval):  969.048
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784928,969.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.908
  maximum absolute entry in einsum_ir solution: 486.908
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138654
  time (eval):    0.876442
  gflops (eval):  867.864
  gflops (total): 866.493
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138654,0.876442,867.864,866.493

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785917
  gflops (total): 967.828
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.828

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787372
  gflops (eval):  966.039
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787372,966.039,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.742
  maximum absolute entry in einsum_ir solution: 484.743
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137675
  time (eval):    0.876899
  gflops (eval):  867.412
  gflops (total): 866.052
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137675,0.876899,867.412,866.052

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787892
  gflops (total): 965.403
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.403

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789081
  gflops (eval):  963.948
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789081,963.948,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.683
  maximum absolute entry in einsum_ir solution: 481.683
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139644
  time (eval):    0.876731
  gflops (eval):  867.578
  gflops (total): 866.198
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139644,0.876731,867.578,866.198

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787228
  gflops (total): 966.217
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.217

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785833
  gflops (eval):  967.932
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785833,967.932,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.966
  maximum absolute entry in einsum_ir solution: 475.966
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00147713
  time (eval):    0.876617
  gflops (eval):  867.691
  gflops (total): 866.231
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00147713,0.876617,867.691,866.231

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789202
  gflops (total): 963.8
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.8

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785387
  gflops (eval):  968.481
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785387,968.481,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.463
  maximum absolute entry in einsum_ir solution: 467.463
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013776
  time (eval):    0.879636
  gflops (eval):  864.713
  gflops (total): 863.361
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013776,0.879636,864.713,863.361

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.791136
  gflops (total): 961.444
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785332
  gflops (eval):  968.549
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785332,968.549,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      452.634
  maximum absolute entry in einsum_ir solution: 452.634
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00165872
  time (eval):    0.875013
  gflops (eval):  869.281
  gflops (total): 867.637
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00165872,0.875013,869.281,867.637

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787937
  gflops (total): 965.347
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785544
  gflops (eval):  968.288
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785544,968.288,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.73
  maximum absolute entry in einsum_ir solution: 458.73
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137983
  time (eval):    0.879819
  gflops (eval):  864.533
  gflops (total): 863.18
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137983,0.879819,864.533,863.18

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787441
  gflops (total): 965.955
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.955

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784939
  gflops (eval):  969.034
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784939,969.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.828
  maximum absolute entry in einsum_ir solution: 500.828
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137889
  time (eval):    0.876472
  gflops (eval):  867.835
  gflops (total): 866.471
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137889,0.876472,867.835,866.471

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789539
  gflops (total): 963.388
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.388

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785098
  gflops (eval):  968.838
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785098,968.838,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.813
  maximum absolute entry in einsum_ir solution: 505.813
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139241
  time (eval):    0.876393
  gflops (eval):  867.913
  gflops (total): 866.536
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139241,0.876393,867.913,866.536

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786173
  gflops (total): 967.513
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.513

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78782
  gflops (eval):  965.491
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78782,965.491,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.907
  maximum absolute entry in einsum_ir solution: 502.907
  maximum element-wise difference:              0.000213623
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00150843
  time (eval):    0.879739
  gflops (eval):  864.611
  gflops (total): 863.131
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00150843,0.879739,864.611,863.131

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793333
  gflops (total): 958.781
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.781

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788604
  gflops (eval):  964.53
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788604,964.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.23
  maximum absolute entry in einsum_ir solution: 498.23
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138606
  time (eval):    0.879605
  gflops (eval):  864.743
  gflops (total): 863.383
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138606,0.879605,864.743,863.383

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793844
  gflops (total): 958.164
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.164

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785705
  gflops (eval):  968.09
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785705,968.09,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.707
  maximum absolute entry in einsum_ir solution: 467.707
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142757
  time (eval):    0.879776
  gflops (eval):  864.575
  gflops (total): 863.174
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142757,0.879776,864.575,863.174

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78608
  gflops (total): 967.628
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784909
  gflops (eval):  969.071
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784909,969.071,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      469.756
  maximum absolute entry in einsum_ir solution: 469.756
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013944
  time (eval):    0.876324
  gflops (eval):  867.981
  gflops (total): 866.602
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013944,0.876324,867.981,866.602

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785188
  gflops (total): 968.727
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.727

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.782894
  gflops (eval):  971.565
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.782894,971.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.845
  maximum absolute entry in einsum_ir solution: 481.845
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00145374
  time (eval):    0.879233
  gflops (eval):  865.11
  gflops (total): 863.682
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00145374,0.879233,865.11,863.682

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793566
  gflops (total): 958.499
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.499

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78961
  gflops (eval):  963.301
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78961,963.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.48
  maximum absolute entry in einsum_ir solution: 472.48
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00136741
  time (eval):    0.875734
  gflops (eval):  868.566
  gflops (total): 867.211
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00136741,0.875734,868.566,867.211

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787958
  gflops (total): 965.322
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.322

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785345
  gflops (eval):  968.533
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785345,968.533,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.461
  maximum absolute entry in einsum_ir solution: 493.46
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138574
  time (eval):    0.879599
  gflops (eval):  864.75
  gflops (total): 863.389
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138574,0.879599,864.75,863.389

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786606
  gflops (total): 966.981
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786193
  gflops (eval):  967.489
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786193,967.489,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.481
  maximum absolute entry in einsum_ir solution: 496.481
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.0013866
  time (eval):    0.876492
  gflops (eval):  867.815
  gflops (total): 866.444
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.0013866,0.876492,867.815,866.444

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787103
  gflops (total): 966.37
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.37

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784109
  gflops (eval):  970.06
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784109,970.06,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.304
  maximum absolute entry in einsum_ir solution: 498.304
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138645
  time (eval):    0.875808
  gflops (eval):  868.492
  gflops (total): 867.12
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138645,0.875808,868.492,867.12

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.789263
  gflops (total): 963.725
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,963.725

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.786228
  gflops (eval):  967.445
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.786228,967.445,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.152
  maximum absolute entry in einsum_ir solution: 477.152
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139226
  time (eval):    0.876552
  gflops (eval):  867.755
  gflops (total): 866.379
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139226,0.876552,867.755,866.379

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787385
  gflops (total): 966.023
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,966.023

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785433
  gflops (eval):  968.425
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785433,968.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.587
  maximum absolute entry in einsum_ir solution: 475.587
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00139255
  time (eval):    0.879187
  gflops (eval):  865.155
  gflops (total): 863.787
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00139255,0.879187,865.155,863.787

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.799768
  gflops (total): 951.067
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,951.067

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783554
  gflops (eval):  970.747
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783554,970.747,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.302
  maximum absolute entry in einsum_ir solution: 485.302
  maximum element-wise difference:              0.000228882
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00143443
  time (eval):    0.880101
  gflops (eval):  864.257
  gflops (total): 862.85
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00143443,0.880101,864.257,862.85

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.786076
  gflops (total): 967.632
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,967.632

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.788545
  gflops (eval):  964.602
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.788545,964.602,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.941
  maximum absolute entry in einsum_ir solution: 494.941
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00137824
  time (eval):    0.876004
  gflops (eval):  868.298
  gflops (total): 866.934
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00137824,0.876004,868.298,866.934

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.793304
  gflops (total): 958.816
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,958.816

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78575
  gflops (eval):  968.034
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78575,968.034,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.546
  maximum absolute entry in einsum_ir solution: 458.546
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138881
  time (eval):    0.879899
  gflops (eval):  864.455
  gflops (total): 863.092
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138881,0.879899,864.455,863.092

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790128
  gflops (total): 962.67
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,962.67

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.783932
  gflops (eval):  970.279
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.783932,970.279,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.338
  maximum absolute entry in einsum_ir solution: 503.337
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138814
  time (eval):    0.880365
  gflops (eval):  863.997
  gflops (total): 862.636
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138814,0.880365,863.997,862.636

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.78825
  gflops (total): 964.964
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.964

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.790739
  gflops (eval):  961.927
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.790739,961.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.822
  maximum absolute entry in einsum_ir solution: 475.822
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138512
  time (eval):    0.879942
  gflops (eval):  864.413
  gflops (total): 863.054
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138512,0.879942,864.413,863.054

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.787471
  gflops (total): 965.918
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,965.918

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.784764
  gflops (eval):  969.25
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.784764,969.25,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.687
  maximum absolute entry in einsum_ir solution: 472.687
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00167457
  time (eval):    0.877713
  gflops (eval):  866.608
  gflops (total): 864.957
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00167457,0.877713,866.608,864.957

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.785614
  gflops (total): 968.201
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,968.201

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.78635
  gflops (eval):  967.295
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.78635,967.295,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      571.423
  maximum absolute entry in einsum_ir solution: 571.423
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00142996
  time (eval):    0.878993
  gflops (eval):  865.345
  gflops (total): 863.94
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00142996,0.878993,865.345,863.94

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788652
  gflops (total): 964.472
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.472

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.787896
  gflops (eval):  965.398
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.787896,965.398,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.189
  maximum absolute entry in einsum_ir solution: 485.189
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00140987
  time (eval):    0.876881
  gflops (eval):  867.43
  gflops (total): 866.037
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00140987,0.876881,867.43,866.037

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.790924
  gflops (total): 961.701
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,961.701

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.789226
  gflops (eval):  963.771
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.789226,963.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.895
  maximum absolute entry in einsum_ir solution: 538.894
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  d,e,h,i
  h,i,f,g
  d,e,f,g
parsed contraction path: 0 1 
parsed dimension ids:
  d: 0
  e: 1
  f: 2
  g: 3
  h: 4
  i: 5
parsed dimension sizes:
  d: 151
  e: 48
  f: 181
  g: 40
  h: 151
  i: 48
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 1 4 5 4 5 2 3 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,5,2,3]->[2,5,4,3]],[[0,1,4,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         760632662400
  time (compile): 0.00138319
  time (eval):    0.87997
  gflops (eval):  864.385
  gflops (total): 863.028
CSV_DATA: einsum_ir,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0.00138319,0.87997,864.385,863.028

*** benchmarking at::einsum ***
  #flops:         760632662400
  time (total):   0.788533
  gflops (total): 964.618
CSV_DATA: at::einsum,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0,0,964.618

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7240 7248 7248
  #flops:         760632662400
  time (eval):    0.785534
  gflops (eval):  968.301
CSV_DATA: at::matmul,"dehi,hifg->defg","151,48,181,40,151,48","(0,1)",760632662400,0,0.785534,968.301,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.911
  maximum absolute entry in einsum_ir solution: 527.911
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139438
  time (eval):    0.954451
  gflops (eval):  961.411
  gflops (total): 960.008
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139438,0.954451,961.411,960.008

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999647
  gflops (total): 917.943
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942659
  gflops (eval):  973.437
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942659,973.437,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.605
  maximum absolute entry in einsum_ir solution: 511.605
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139054
  time (eval):    0.955561
  gflops (eval):  960.294
  gflops (total): 958.898
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139054,0.955561,960.294,958.898

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00014
  gflops (total): 917.491
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.491

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943671
  gflops (eval):  972.394
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943671,972.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.323
  maximum absolute entry in einsum_ir solution: 530.323
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137372
  time (eval):    0.955673
  gflops (eval):  960.181
  gflops (total): 958.803
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137372,0.955673,960.181,958.803

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00191
  gflops (total): 915.869
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.869

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94643
  gflops (eval):  969.559
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94643,969.559,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.88
  maximum absolute entry in einsum_ir solution: 526.879
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138829
  time (eval):    0.954934
  gflops (eval):  960.925
  gflops (total): 959.53
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138829,0.954934,960.925,959.53

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0072
  gflops (total): 911.058
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,911.058

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.947382
  gflops (eval):  968.584
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.947382,968.584,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.904
  maximum absolute entry in einsum_ir solution: 486.904
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137641
  time (eval):    0.953435
  gflops (eval):  962.435
  gflops (total): 961.048
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137641,0.953435,962.435,961.048

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00168
  gflops (total): 916.079
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.079

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946474
  gflops (eval):  969.514
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946474,969.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.306
  maximum absolute entry in einsum_ir solution: 537.306
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0013782
  time (eval):    0.956204
  gflops (eval):  959.649
  gflops (total): 958.268
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0013782,0.956204,959.649,958.268

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00002
  gflops (total): 917.6
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.6

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945842
  gflops (eval):  970.162
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945842,970.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      545.808
  maximum absolute entry in einsum_ir solution: 545.808
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00145993
  time (eval):    0.955501
  gflops (eval):  960.354
  gflops (total): 958.889
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00145993,0.955501,960.354,958.889

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00021
  gflops (total): 917.423
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.423

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944521
  gflops (eval):  971.518
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944521,971.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.015
  maximum absolute entry in einsum_ir solution: 529.015
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00164758
  time (eval):    0.957418
  gflops (eval):  958.432
  gflops (total): 956.785
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00164758,0.957418,958.432,956.785

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00085
  gflops (total): 916.842
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.842

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945791
  gflops (eval):  970.214
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945791,970.214,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.97
  maximum absolute entry in einsum_ir solution: 506.97
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00146855
  time (eval):    0.955786
  gflops (eval):  960.068
  gflops (total): 958.595
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00146855,0.955786,960.068,958.595

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00087
  gflops (total): 916.824
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943936
  gflops (eval):  972.121
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943936,972.121,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.925
  maximum absolute entry in einsum_ir solution: 517.925
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140514
  time (eval):    0.95554
  gflops (eval):  960.316
  gflops (total): 958.906
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140514,0.95554,960.316,958.906

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00026
  gflops (total): 917.384
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.384

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942646
  gflops (eval):  973.451
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942646,973.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.571
  maximum absolute entry in einsum_ir solution: 523.571
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138187
  time (eval):    0.955285
  gflops (eval):  960.571
  gflops (total): 959.184
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138187,0.955285,960.571,959.184

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999536
  gflops (total): 918.046
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.046

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943357
  gflops (eval):  972.717
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943357,972.717,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.234
  maximum absolute entry in einsum_ir solution: 523.234
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137802
  time (eval):    0.955841
  gflops (eval):  960.013
  gflops (total): 958.631
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137802,0.955841,960.013,958.631

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00409
  gflops (total): 913.883
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,913.883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944682
  gflops (eval):  971.353
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944682,971.353,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.499
  maximum absolute entry in einsum_ir solution: 506.499
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138228
  time (eval):    0.95537
  gflops (eval):  960.486
  gflops (total): 959.098
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138228,0.95537,960.486,959.098

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00086
  gflops (total): 916.832
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.832

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944527
  gflops (eval):  971.512
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944527,971.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.145
  maximum absolute entry in einsum_ir solution: 517.145
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137965
  time (eval):    0.955892
  gflops (eval):  959.961
  gflops (total): 958.578
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137965,0.955892,959.961,958.578

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99919
  gflops (total): 918.363
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943041
  gflops (eval):  973.044
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943041,973.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.836
  maximum absolute entry in einsum_ir solution: 524.835
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137859
  time (eval):    0.956094
  gflops (eval):  959.758
  gflops (total): 958.376
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137859,0.956094,959.758,958.376

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00082
  gflops (total): 916.868
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946049
  gflops (eval):  969.949
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946049,969.949,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.504
  maximum absolute entry in einsum_ir solution: 531.504
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139578
  time (eval):    0.956212
  gflops (eval):  959.64
  gflops (total): 958.241
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139578,0.956212,959.64,958.241

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999334
  gflops (total): 918.232
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.232

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943341
  gflops (eval):  972.734
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943341,972.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.283
  maximum absolute entry in einsum_ir solution: 508.283
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00150626
  time (eval):    0.956201
  gflops (eval):  959.651
  gflops (total): 958.142
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00150626,0.956201,959.651,958.142

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00033
  gflops (total): 917.314
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.314

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94445
  gflops (eval):  971.591
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94445,971.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      512.98
  maximum absolute entry in einsum_ir solution: 512.98
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00183061
  time (eval):    0.956594
  gflops (eval):  959.257
  gflops (total): 957.425
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00183061,0.956594,959.257,957.425

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00181
  gflops (total): 915.962
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946371
  gflops (eval):  969.619
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946371,969.619,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.756
  maximum absolute entry in einsum_ir solution: 492.756
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139084
  time (eval):    0.955962
  gflops (eval):  959.891
  gflops (total): 958.497
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139084,0.955962,959.891,958.497

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00165
  gflops (total): 916.11
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.11

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943641
  gflops (eval):  972.424
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943641,972.424,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      567.903
  maximum absolute entry in einsum_ir solution: 567.902
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139211
  time (eval):    0.955472
  gflops (eval):  960.383
  gflops (total): 958.986
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139211,0.955472,960.383,958.986

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99758
  gflops (total): 919.846
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942236
  gflops (eval):  973.874
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942236,973.874,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.362
  maximum absolute entry in einsum_ir solution: 519.362
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014113
  time (eval):    0.954767
  gflops (eval):  961.092
  gflops (total): 959.674
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014113,0.954767,961.092,959.674

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00162
  gflops (total): 916.139
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.139

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946377
  gflops (eval):  969.613
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946377,969.613,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      498.582
  maximum absolute entry in einsum_ir solution: 498.582
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138372
  time (eval):    0.954868
  gflops (eval):  960.991
  gflops (total): 959.601
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138372,0.954868,960.991,959.601

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998818
  gflops (total): 918.706
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.706

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943488
  gflops (eval):  972.582
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943488,972.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.744
  maximum absolute entry in einsum_ir solution: 527.744
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137224
  time (eval):    0.955168
  gflops (eval):  960.69
  gflops (total): 959.311
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137224,0.955168,960.69,959.311

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999181
  gflops (total): 918.372
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.372

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94268
  gflops (eval):  973.416
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94268,973.416,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.103
  maximum absolute entry in einsum_ir solution: 543.103
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138048
  time (eval):    0.955439
  gflops (eval):  960.417
  gflops (total): 959.031
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138048,0.955439,960.417,959.031

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00165
  gflops (total): 916.106
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.106

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942903
  gflops (eval):  973.185
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942903,973.185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.508
  maximum absolute entry in einsum_ir solution: 507.508
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00141533
  time (eval):    0.956007
  gflops (eval):  959.846
  gflops (total): 958.427
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00141533,0.956007,959.846,958.427

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00069
  gflops (total): 916.99
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945321
  gflops (eval):  970.696
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945321,970.696,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.445
  maximum absolute entry in einsum_ir solution: 524.445
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139234
  time (eval):    0.956082
  gflops (eval):  959.771
  gflops (total): 958.375
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139234,0.956082,959.771,958.375

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00165
  gflops (total): 916.105
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.105

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944437
  gflops (eval):  971.605
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944437,971.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.63
  maximum absolute entry in einsum_ir solution: 484.63
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139165
  time (eval):    0.954063
  gflops (eval):  961.802
  gflops (total): 960.401
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139165,0.954063,961.802,960.401

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0019
  gflops (total): 915.879
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94511
  gflops (eval):  970.913
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94511,970.913,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.52
  maximum absolute entry in einsum_ir solution: 539.52
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137717
  time (eval):    0.956726
  gflops (eval):  959.125
  gflops (total): 957.747
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137717,0.956726,959.125,957.747

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999796
  gflops (total): 917.807
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.807

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943254
  gflops (eval):  972.823
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943254,972.823,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.961
  maximum absolute entry in einsum_ir solution: 563.961
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00136981
  time (eval):    0.956127
  gflops (eval):  959.726
  gflops (total): 958.353
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00136981,0.956127,959.726,958.353

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00071
  gflops (total): 916.968
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.968

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943888
  gflops (eval):  972.17
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943888,972.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.441
  maximum absolute entry in einsum_ir solution: 537.441
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00142622
  time (eval):    0.954482
  gflops (eval):  961.38
  gflops (total): 959.945
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00142622,0.954482,961.38,959.945

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.9997
  gflops (total): 917.895
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943775
  gflops (eval):  972.286
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943775,972.286,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.779
  maximum absolute entry in einsum_ir solution: 520.779
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138332
  time (eval):    0.954462
  gflops (eval):  961.4
  gflops (total): 960.009
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138332,0.954462,961.4,960.009

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00371
  gflops (total): 914.225
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,914.225

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.949647
  gflops (eval):  966.274
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.949647,966.274,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.861
  maximum absolute entry in einsum_ir solution: 496.861
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00168071
  time (eval):    0.953717
  gflops (eval):  962.151
  gflops (total): 960.458
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00168071,0.953717,962.151,960.458

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999265
  gflops (total): 918.295
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942817
  gflops (eval):  973.275
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942817,973.275,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      569.787
  maximum absolute entry in einsum_ir solution: 569.787
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00142472
  time (eval):    0.954674
  gflops (eval):  961.187
  gflops (total): 959.754
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00142472,0.954674,961.187,959.754

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00239
  gflops (total): 915.43
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.43

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945885
  gflops (eval):  970.118
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945885,970.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.537
  maximum absolute entry in einsum_ir solution: 504.537
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138022
  time (eval):    0.95574
  gflops (eval):  960.114
  gflops (total): 958.729
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138022,0.95574,960.114,958.729

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00124
  gflops (total): 916.479
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.479

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942311
  gflops (eval):  973.797
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942311,973.797,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.336
  maximum absolute entry in einsum_ir solution: 522.336
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138846
  time (eval):    0.954238
  gflops (eval):  961.626
  gflops (total): 960.228
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138846,0.954238,961.626,960.228

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00789
  gflops (total): 910.437
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,910.437

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946922
  gflops (eval):  969.056
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946922,969.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.903
  maximum absolute entry in einsum_ir solution: 524.903
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138406
  time (eval):    0.955802
  gflops (eval):  960.052
  gflops (total): 958.664
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138406,0.955802,960.052,958.664

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00219
  gflops (total): 915.611
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.611

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945187
  gflops (eval):  970.833
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945187,970.833,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.198
  maximum absolute entry in einsum_ir solution: 497.198
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137082
  time (eval):    0.955914
  gflops (eval):  959.939
  gflops (total): 958.565
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137082,0.955914,959.939,958.565

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00032
  gflops (total): 917.323
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.323

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944406
  gflops (eval):  971.636
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944406,971.636,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.075
  maximum absolute entry in einsum_ir solution: 523.075
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0013794
  time (eval):    0.952334
  gflops (eval):  963.548
  gflops (total): 962.155
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0013794,0.952334,963.548,962.155

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00177
  gflops (total): 915.997
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.997

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943324
  gflops (eval):  972.751
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943324,972.751,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.562
  maximum absolute entry in einsum_ir solution: 487.562
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014081
  time (eval):    0.955453
  gflops (eval):  960.403
  gflops (total): 958.99
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014081,0.955453,960.403,958.99

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0007
  gflops (total): 916.981
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.981

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944374
  gflops (eval):  971.67
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944374,971.67,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.809
  maximum absolute entry in einsum_ir solution: 496.809
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138768
  time (eval):    0.955367
  gflops (eval):  960.489
  gflops (total): 959.096
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138768,0.955367,960.489,959.096

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00358
  gflops (total): 914.348
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,914.348

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944115
  gflops (eval):  971.936
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944115,971.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.87
  maximum absolute entry in einsum_ir solution: 516.87
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138631
  time (eval):    0.953695
  gflops (eval):  962.173
  gflops (total): 960.776
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138631,0.953695,962.173,960.776

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00005
  gflops (total): 917.575
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.575

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944869
  gflops (eval):  971.161
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944869,971.161,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.666
  maximum absolute entry in einsum_ir solution: 511.666
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139099
  time (eval):    0.954897
  gflops (eval):  960.961
  gflops (total): 959.564
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139099,0.954897,960.961,959.564

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999631
  gflops (total): 917.958
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.958

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942002
  gflops (eval):  974.116
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942002,974.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.799
  maximum absolute entry in einsum_ir solution: 553.799
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139293
  time (eval):    0.955755
  gflops (eval):  960.099
  gflops (total): 958.702
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139293,0.955755,960.099,958.702

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00667
  gflops (total): 911.543
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,911.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.948394
  gflops (eval):  967.551
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.948394,967.551,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.608
  maximum absolute entry in einsum_ir solution: 495.609
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138873
  time (eval):    0.956285
  gflops (eval):  959.567
  gflops (total): 958.176
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138873,0.956285,959.567,958.176

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999159
  gflops (total): 918.392
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.392

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943633
  gflops (eval):  972.433
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943633,972.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.261
  maximum absolute entry in einsum_ir solution: 510.261
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139201
  time (eval):    0.955085
  gflops (eval):  960.773
  gflops (total): 959.375
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139201,0.955085,960.773,959.375

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00033
  gflops (total): 917.317
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.317

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945006
  gflops (eval):  971.02
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945006,971.02,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      511.559
  maximum absolute entry in einsum_ir solution: 511.559
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137807
  time (eval):    0.952436
  gflops (eval):  963.445
  gflops (total): 962.053
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137807,0.952436,963.445,962.053

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999412
  gflops (total): 918.159
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.159

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.941489
  gflops (eval):  974.647
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.941489,974.647,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.535
  maximum absolute entry in einsum_ir solution: 520.535
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00136681
  time (eval):    0.956467
  gflops (eval):  959.384
  gflops (total): 958.015
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00136681,0.956467,959.384,958.015

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999886
  gflops (total): 917.724
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945401
  gflops (eval):  970.614
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945401,970.614,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.194
  maximum absolute entry in einsum_ir solution: 487.194
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00165959
  time (eval):    0.954673
  gflops (eval):  961.187
  gflops (total): 959.519
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00165959,0.954673,961.187,959.519

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998847
  gflops (total): 918.679
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.679

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943695
  gflops (eval):  972.368
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943695,972.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.144
  maximum absolute entry in einsum_ir solution: 504.144
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137628
  time (eval):    0.955827
  gflops (eval):  960.027
  gflops (total): 958.646
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137628,0.955827,960.027,958.646

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00067
  gflops (total): 917.001
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944239
  gflops (eval):  971.809
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944239,971.809,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.982
  maximum absolute entry in einsum_ir solution: 520.982
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138131
  time (eval):    0.955882
  gflops (eval):  959.971
  gflops (total): 958.586
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138131,0.955882,959.971,958.586

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0013
  gflops (total): 916.427
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.427

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94275
  gflops (eval):  973.343
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94275,973.343,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.512
  maximum absolute entry in einsum_ir solution: 548.513
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137212
  time (eval):    0.956313
  gflops (eval):  959.539
  gflops (total): 958.165
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137212,0.956313,959.539,958.165

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00047
  gflops (total): 917.185
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.185

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944662
  gflops (eval):  971.373
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944662,971.373,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      510.71
  maximum absolute entry in einsum_ir solution: 510.71
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00143843
  time (eval):    0.955354
  gflops (eval):  960.502
  gflops (total): 959.058
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00143843,0.955354,960.502,959.058

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999672
  gflops (total): 917.921
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.921

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944024
  gflops (eval):  972.03
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944024,972.03,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.894
  maximum absolute entry in einsum_ir solution: 501.894
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138253
  time (eval):    0.955391
  gflops (eval):  960.465
  gflops (total): 959.077
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138253,0.955391,960.465,959.077

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00162
  gflops (total): 916.136
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943382
  gflops (eval):  972.692
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943382,972.692,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.373
  maximum absolute entry in einsum_ir solution: 508.373
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00151923
  time (eval):    0.955255
  gflops (eval):  960.601
  gflops (total): 959.076
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00151923,0.955255,960.601,959.076

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999951
  gflops (total): 917.664
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.664

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944521
  gflops (eval):  971.518
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944521,971.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.378
  maximum absolute entry in einsum_ir solution: 539.378
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137985
  time (eval):    0.953474
  gflops (eval):  962.396
  gflops (total): 961.006
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137985,0.953474,962.396,961.006

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00317
  gflops (total): 914.715
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,914.715

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946044
  gflops (eval):  969.954
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946044,969.954,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.172
  maximum absolute entry in einsum_ir solution: 504.172
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140234
  time (eval):    0.955923
  gflops (eval):  959.93
  gflops (total): 958.524
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140234,0.955923,959.93,958.524

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00012
  gflops (total): 917.509
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.509

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944922
  gflops (eval):  971.106
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944922,971.106,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.163
  maximum absolute entry in einsum_ir solution: 553.163
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138544
  time (eval):    0.956353
  gflops (eval):  959.499
  gflops (total): 958.111
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138544,0.956353,959.499,958.111

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999787
  gflops (total): 917.815
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.815

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944529
  gflops (eval):  971.51
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944529,971.51,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.682
  maximum absolute entry in einsum_ir solution: 495.682
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.001392
  time (eval):    0.955621
  gflops (eval):  960.234
  gflops (total): 958.838
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.001392,0.955621,960.234,958.838

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00064
  gflops (total): 917.03
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.03

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942396
  gflops (eval):  973.709
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942396,973.709,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.798
  maximum absolute entry in einsum_ir solution: 503.798
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138875
  time (eval):    0.954207
  gflops (eval):  961.656
  gflops (total): 960.259
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138875,0.954207,961.656,960.259

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00129
  gflops (total): 916.434
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.434

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.947344
  gflops (eval):  968.624
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.947344,968.624,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      507.418
  maximum absolute entry in einsum_ir solution: 507.418
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138755
  time (eval):    0.955671
  gflops (eval):  960.184
  gflops (total): 958.792
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138755,0.955671,960.184,958.792

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00116
  gflops (total): 916.559
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944073
  gflops (eval):  971.979
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944073,971.979,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.108
  maximum absolute entry in einsum_ir solution: 529.108
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139947
  time (eval):    0.955798
  gflops (eval):  960.056
  gflops (total): 958.652
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139947,0.955798,960.056,958.652

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00015
  gflops (total): 917.48
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.48

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94432
  gflops (eval):  971.726
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94432,971.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.21
  maximum absolute entry in einsum_ir solution: 536.21
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138076
  time (eval):    0.954344
  gflops (eval):  961.518
  gflops (total): 960.129
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138076,0.954344,961.518,960.129

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00142
  gflops (total): 916.318
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.318

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944321
  gflops (eval):  971.725
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944321,971.725,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.738
  maximum absolute entry in einsum_ir solution: 522.738
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138669
  time (eval):    0.955618
  gflops (eval):  960.237
  gflops (total): 958.846
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138669,0.955618,960.237,958.846

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00193
  gflops (total): 915.848
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946244
  gflops (eval):  969.75
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946244,969.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.413
  maximum absolute entry in einsum_ir solution: 502.413
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140816
  time (eval):    0.955409
  gflops (eval):  960.447
  gflops (total): 959.034
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140816,0.955409,960.447,959.034

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00048
  gflops (total): 917.178
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945445
  gflops (eval):  970.569
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945445,970.569,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      503.905
  maximum absolute entry in einsum_ir solution: 503.905
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139104
  time (eval):    0.954618
  gflops (eval):  961.243
  gflops (total): 959.844
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139104,0.954618,961.243,959.844

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.99899
  gflops (total): 918.548
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942718
  gflops (eval):  973.377
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942718,973.377,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      501.666
  maximum absolute entry in einsum_ir solution: 501.666
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139527
  time (eval):    0.954749
  gflops (eval):  961.111
  gflops (total): 959.708
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139527,0.954749,961.111,959.708

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00075
  gflops (total): 916.929
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.929

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945128
  gflops (eval):  970.894
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945128,970.894,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.905
  maximum absolute entry in einsum_ir solution: 500.905
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139193
  time (eval):    0.955302
  gflops (eval):  960.554
  gflops (total): 959.157
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139193,0.955302,960.554,959.157

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0082
  gflops (total): 910.155
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,910.155

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945435
  gflops (eval):  970.579
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945435,970.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.205
  maximum absolute entry in einsum_ir solution: 506.205
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139057
  time (eval):    0.956372
  gflops (eval):  959.48
  gflops (total): 958.086
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139057,0.956372,959.48,958.086

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00151
  gflops (total): 916.233
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.233

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943848
  gflops (eval):  972.211
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943848,972.211,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.698
  maximum absolute entry in einsum_ir solution: 491.698
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139974
  time (eval):    0.955425
  gflops (eval):  960.43
  gflops (total): 959.025
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139974,0.955425,960.43,959.025

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999811
  gflops (total): 917.793
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942558
  gflops (eval):  973.542
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942558,973.542,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.157
  maximum absolute entry in einsum_ir solution: 536.157
  maximum element-wise difference:              0.000289917
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139025
  time (eval):    0.956469
  gflops (eval):  959.382
  gflops (total): 957.99
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139025,0.956469,959.382,957.99

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00067
  gflops (total): 917.001
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.001

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943107
  gflops (eval):  972.975
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943107,972.975,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.3
  maximum absolute entry in einsum_ir solution: 481.3
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138157
  time (eval):    0.955532
  gflops (eval):  960.323
  gflops (total): 958.936
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138157,0.955532,960.323,958.936

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00043
  gflops (total): 917.227
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.227

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945415
  gflops (eval):  970.6
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945415,970.6,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.342
  maximum absolute entry in einsum_ir solution: 525.342
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137723
  time (eval):    0.955393
  gflops (eval):  960.463
  gflops (total): 959.081
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137723,0.955393,960.463,959.081

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00285
  gflops (total): 915.013
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.013

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94483
  gflops (eval):  971.201
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94483,971.201,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.623
  maximum absolute entry in einsum_ir solution: 519.623
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138212
  time (eval):    0.954731
  gflops (eval):  961.128
  gflops (total): 959.739
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138212,0.954731,961.128,959.739

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999855
  gflops (total): 917.753
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.753

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94553
  gflops (eval):  970.482
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94553,970.482,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.45
  maximum absolute entry in einsum_ir solution: 490.45
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139277
  time (eval):    0.956778
  gflops (eval):  959.073
  gflops (total): 957.679
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139277,0.956778,959.073,957.679

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999246
  gflops (total): 918.312
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.312

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943898
  gflops (eval):  972.159
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943898,972.159,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      516.465
  maximum absolute entry in einsum_ir solution: 516.465
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00141258
  time (eval):    0.955879
  gflops (eval):  959.974
  gflops (total): 958.558
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00141258,0.955879,959.974,958.558

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00085
  gflops (total): 916.838
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.838

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943296
  gflops (eval):  972.781
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943296,972.781,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.69
  maximum absolute entry in einsum_ir solution: 506.69
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138305
  time (eval):    0.954924
  gflops (eval):  960.935
  gflops (total): 959.545
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138305,0.954924,960.935,959.545

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0017
  gflops (total): 916.061
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946866
  gflops (eval):  969.112
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946866,969.112,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.747
  maximum absolute entry in einsum_ir solution: 531.747
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00143174
  time (eval):    0.95511
  gflops (eval):  960.747
  gflops (total): 959.309
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00143174,0.95511,960.747,959.309

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998324
  gflops (total): 919.16
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942019
  gflops (eval):  974.099
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942019,974.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      515.941
  maximum absolute entry in einsum_ir solution: 515.941
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137225
  time (eval):    0.954526
  gflops (eval):  961.335
  gflops (total): 959.955
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137225,0.954526,961.335,959.955

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00158
  gflops (total): 916.171
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.171

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945322
  gflops (eval):  970.695
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945322,970.695,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      525.225
  maximum absolute entry in einsum_ir solution: 525.225
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139379
  time (eval):    0.956085
  gflops (eval):  959.768
  gflops (total): 958.371
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139379,0.956085,959.768,958.371

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00168
  gflops (total): 916.084
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.084

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945362
  gflops (eval):  970.654
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945362,970.654,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      563.79
  maximum absolute entry in einsum_ir solution: 563.79
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137955
  time (eval):    0.956194
  gflops (eval):  959.658
  gflops (total): 958.276
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137955,0.956194,959.658,958.276

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00055
  gflops (total): 917.113
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.113

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944243
  gflops (eval):  971.805
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944243,971.805,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      499.533
  maximum absolute entry in einsum_ir solution: 499.533
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138916
  time (eval):    0.955291
  gflops (eval):  960.566
  gflops (total): 959.171
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138916,0.955291,960.566,959.171

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00033
  gflops (total): 917.316
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.316

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.94364
  gflops (eval):  972.425
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.94364,972.425,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.954
  maximum absolute entry in einsum_ir solution: 526.954
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0014052
  time (eval):    0.955201
  gflops (eval):  960.656
  gflops (total): 959.245
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0014052,0.955201,960.656,959.245

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00184
  gflops (total): 915.937
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.937

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944848
  gflops (eval):  971.183
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944848,971.183,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      497.001
  maximum absolute entry in einsum_ir solution: 497.001
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138454
  time (eval):    0.953788
  gflops (eval):  962.079
  gflops (total): 960.685
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138454,0.953788,962.079,960.685

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999254
  gflops (total): 918.304
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.304

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943611
  gflops (eval):  972.455
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943611,972.455,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.496
  maximum absolute entry in einsum_ir solution: 529.496
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139363
  time (eval):    0.955194
  gflops (eval):  960.663
  gflops (total): 959.263
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139363,0.955194,960.663,959.263

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00006
  gflops (total): 917.563
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945115
  gflops (eval):  970.908
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945115,970.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529
  maximum absolute entry in einsum_ir solution: 529
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139483
  time (eval):    0.95545
  gflops (eval):  960.406
  gflops (total): 959.006
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139483,0.95545,960.406,959.006

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00217
  gflops (total): 915.633
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.633

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943865
  gflops (eval):  972.194
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943865,972.194,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.769
  maximum absolute entry in einsum_ir solution: 541.769
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140339
  time (eval):    0.954519
  gflops (eval):  961.342
  gflops (total): 959.931
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140339,0.954519,961.342,959.931

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00119
  gflops (total): 916.528
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943917
  gflops (eval):  972.141
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943917,972.141,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.645
  maximum absolute entry in einsum_ir solution: 537.646
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00169298
  time (eval):    0.955389
  gflops (eval):  960.467
  gflops (total): 958.768
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00169298,0.955389,960.467,958.768

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00323
  gflops (total): 914.669
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,914.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944406
  gflops (eval):  971.637
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944406,971.637,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.844
  maximum absolute entry in einsum_ir solution: 542.844
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00165949
  time (eval):    0.964612
  gflops (eval):  951.283
  gflops (total): 949.65
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00165949,0.964612,951.283,949.65

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.997756
  gflops (total): 919.683
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,919.683

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944404
  gflops (eval):  971.639
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944404,971.639,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.721
  maximum absolute entry in einsum_ir solution: 493.721
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139098
  time (eval):    0.955804
  gflops (eval):  960.05
  gflops (total): 958.655
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139098,0.955804,960.05,958.655

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00075
  gflops (total): 916.932
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.932

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.945852
  gflops (eval):  970.151
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.945852,970.151,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      509.734
  maximum absolute entry in einsum_ir solution: 509.734
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00167096
  time (eval):    0.955509
  gflops (eval):  960.347
  gflops (total): 958.67
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00167096,0.955509,960.347,958.67

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00145
  gflops (total): 916.295
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.295

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942992
  gflops (eval):  973.094
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942992,973.094,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.501
  maximum absolute entry in einsum_ir solution: 537.501
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.0013926
  time (eval):    0.955914
  gflops (eval):  959.939
  gflops (total): 958.543
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.0013926,0.955914,959.939,958.543

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00007
  gflops (total): 917.551
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.551

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944448
  gflops (eval):  971.593
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944448,971.593,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      603.943
  maximum absolute entry in einsum_ir solution: 603.943
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00164478
  time (eval):    0.954768
  gflops (eval):  961.092
  gflops (total): 959.439
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00164478,0.954768,961.092,959.439

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00231
  gflops (total): 915.505
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.946702
  gflops (eval):  969.28
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.946702,969.28,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.265
  maximum absolute entry in einsum_ir solution: 546.265
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00140156
  time (eval):    0.956457
  gflops (eval):  959.394
  gflops (total): 957.99
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00140156,0.956457,959.394,957.99

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00083
  gflops (total): 916.863
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.863

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944507
  gflops (eval):  971.532
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944507,971.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      490.429
  maximum absolute entry in einsum_ir solution: 490.429
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137959
  time (eval):    0.954444
  gflops (eval):  961.418
  gflops (total): 960.03
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137959,0.954444,961.418,960.03

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.0024
  gflops (total): 915.424
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.424

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944985
  gflops (eval):  971.041
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944985,971.041,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.955
  maximum absolute entry in einsum_ir solution: 513.955
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00137926
  time (eval):    0.954055
  gflops (eval):  961.81
  gflops (total): 960.421
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00137926,0.954055,961.81,960.421

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.998539
  gflops (total): 918.962
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.962

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943095
  gflops (eval):  972.987
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943095,972.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.564
  maximum absolute entry in einsum_ir solution: 494.564
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139196
  time (eval):    0.955085
  gflops (eval):  960.773
  gflops (total): 959.375
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139196,0.955085,960.773,959.375

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999608
  gflops (total): 917.98
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,917.98

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944337
  gflops (eval):  971.708
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944337,971.708,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.26
  maximum absolute entry in einsum_ir solution: 488.26
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00142239
  time (eval):    0.956705
  gflops (eval):  959.146
  gflops (total): 957.722
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00142239,0.956705,959.146,957.722

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   0.999165
  gflops (total): 918.386
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,918.386

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.942599
  gflops (eval):  973.499
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.942599,973.499,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.068
  maximum absolute entry in einsum_ir solution: 532.068
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138039
  time (eval):    0.955326
  gflops (eval):  960.53
  gflops (total): 959.144
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138039,0.955326,960.53,959.144

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00123
  gflops (total): 916.493
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.493

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944492
  gflops (eval):  971.548
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944492,971.548,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      519.155
  maximum absolute entry in einsum_ir solution: 519.155
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00139213
  time (eval):    0.955994
  gflops (eval):  959.859
  gflops (total): 958.463
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00139213,0.955994,959.859,958.463

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00072
  gflops (total): 916.956
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,916.956

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.944053
  gflops (eval):  972
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.944053,972,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.366
  maximum absolute entry in einsum_ir solution: 517.366
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  f,d,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 84
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 5 3 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[5,3,4,2]->[2,4,5,3]],[0,4,1,5]->[0,1,2,3]
  #flops:         917619591168
  time (compile): 0.00138252
  time (eval):    0.955679
  gflops (eval):  960.176
  gflops (total): 958.789
CSV_DATA: einsum_ir,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0.00138252,0.955679,960.176,958.789

*** benchmarking at::einsum ***
  #flops:         917619591168
  time (total):   1.00199
  gflops (total): 915.801
CSV_DATA: at::einsum,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0,0,915.801

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 7056 8064 8064
  #flops:         917619591168
  time (eval):    0.943961
  gflops (eval):  972.095
CSV_DATA: at::matmul,"aebf,fdec->abcd","96,84,84,84,84,96","(0,1)",917619591168,0,0.943961,972.095,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.672
  maximum absolute entry in einsum_ir solution: 485.672
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144621
  time (eval):    1.23337
  gflops (eval):  850.282
  gflops (total): 849.286
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144621,1.23337,850.282,849.286

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14822
  gflops (total): 913.337
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.337

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07901
  gflops (eval):  971.927
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07901,971.927,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.585
  maximum absolute entry in einsum_ir solution: 531.585
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138437
  time (eval):    1.23789
  gflops (eval):  847.183
  gflops (total): 846.236
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138437,1.23789,847.183,846.236

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14716
  gflops (total): 914.184
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.184

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0759
  gflops (eval):  974.734
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0759,974.734,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.098
  maximum absolute entry in einsum_ir solution: 534.098
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139087
  time (eval):    1.23857
  gflops (eval):  846.713
  gflops (total): 845.764
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139087,1.23857,846.713,845.764

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15033
  gflops (total): 911.662
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.662

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07747
  gflops (eval):  973.31
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07747,973.31,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.259
  maximum absolute entry in einsum_ir solution: 531.259
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139186
  time (eval):    1.24426
  gflops (eval):  842.846
  gflops (total): 841.904
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139186,1.24426,842.846,841.904

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1454
  gflops (total): 915.589
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.589

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06887
  gflops (eval):  981.146
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06887,981.146,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      565.112
  maximum absolute entry in einsum_ir solution: 565.113
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0014225
  time (eval):    1.2435
  gflops (eval):  843.361
  gflops (total): 842.397
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0014225,1.2435,843.361,842.397

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14974
  gflops (total): 912.136
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.136

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08039
  gflops (eval):  970.68
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08039,970.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      575.924
  maximum absolute entry in einsum_ir solution: 575.924
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013719
  time (eval):    1.24604
  gflops (eval):  841.638
  gflops (total): 840.713
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013719,1.24604,841.638,840.713

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14945
  gflops (total): 912.361
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.361

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07699
  gflops (eval):  973.746
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07699,973.746,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.944
  maximum absolute entry in einsum_ir solution: 547.944
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137733
  time (eval):    1.23
  gflops (eval):  852.613
  gflops (total): 851.659
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137733,1.23,852.613,851.659

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15744
  gflops (total): 906.065
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,906.065

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07431
  gflops (eval):  976.18
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07431,976.18,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      520.945
  maximum absolute entry in einsum_ir solution: 520.945
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013866
  time (eval):    1.24387
  gflops (eval):  843.106
  gflops (total): 842.167
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013866,1.24387,843.106,842.167

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15926
  gflops (total): 904.644
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,904.644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07936
  gflops (eval):  971.612
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07936,971.612,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.463
  maximum absolute entry in einsum_ir solution: 549.463
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138198
  time (eval):    1.24483
  gflops (eval):  842.458
  gflops (total): 841.524
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138198,1.24483,842.458,841.524

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15046
  gflops (total): 911.559
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.559

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07635
  gflops (eval):  974.324
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07635,974.324,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.077
  maximum absolute entry in einsum_ir solution: 542.077
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137695
  time (eval):    1.24513
  gflops (eval):  842.257
  gflops (total): 841.327
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137695,1.24513,842.257,841.327

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14888
  gflops (total): 912.817
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.817

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07614
  gflops (eval):  974.52
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07614,974.52,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.053
  maximum absolute entry in einsum_ir solution: 532.053
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138658
  time (eval):    1.24364
  gflops (eval):  843.264
  gflops (total): 842.325
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138658,1.24364,843.264,842.325

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15161
  gflops (total): 910.654
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.654

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07821
  gflops (eval):  972.647
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07821,972.647,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.549
  maximum absolute entry in einsum_ir solution: 535.549
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139463
  time (eval):    1.24552
  gflops (eval):  841.989
  gflops (total): 841.047
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139463,1.24552,841.989,841.047

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15109
  gflops (total): 911.06
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07575
  gflops (eval):  974.869
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07575,974.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.691
  maximum absolute entry in einsum_ir solution: 539.691
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137866
  time (eval):    1.2459
  gflops (eval):  841.736
  gflops (total): 840.805
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137866,1.2459,841.736,840.805

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15045
  gflops (total): 911.573
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.573

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07393
  gflops (eval):  976.525
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07393,976.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      558.791
  maximum absolute entry in einsum_ir solution: 558.791
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142274
  time (eval):    1.22527
  gflops (eval):  855.906
  gflops (total): 854.913
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142274,1.22527,855.906,854.913

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15145
  gflops (total): 910.778
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.778

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08768
  gflops (eval):  964.178
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08768,964.178,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      537.551
  maximum absolute entry in einsum_ir solution: 537.55
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139124
  time (eval):    1.22577
  gflops (eval):  855.56
  gflops (total): 854.59
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139124,1.22577,855.56,854.59

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15049
  gflops (total): 911.536
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07541
  gflops (eval):  975.179
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07541,975.179,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      589.98
  maximum absolute entry in einsum_ir solution: 589.98
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142363
  time (eval):    1.24388
  gflops (eval):  843.102
  gflops (total): 842.138
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142363,1.24388,843.102,842.138

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15052
  gflops (total): 911.514
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.514

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07648
  gflops (eval):  974.207
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07648,974.207,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.867
  maximum absolute entry in einsum_ir solution: 539.867
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141926
  time (eval):    1.23849
  gflops (eval):  846.769
  gflops (total): 845.8
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141926,1.23849,846.769,845.8

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14846
  gflops (total): 913.146
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.146

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07689
  gflops (eval):  973.84
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07689,973.84,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.753
  maximum absolute entry in einsum_ir solution: 534.753
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00152119
  time (eval):    1.23148
  gflops (eval):  851.593
  gflops (total): 850.543
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00152119,1.23148,851.593,850.543

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14634
  gflops (total): 914.84
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.84

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07835
  gflops (eval):  972.516
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07835,972.516,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.612
  maximum absolute entry in einsum_ir solution: 553.613
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138249
  time (eval):    1.23882
  gflops (eval):  846.547
  gflops (total): 845.603
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138249,1.23882,846.547,845.603

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14784
  gflops (total): 913.644
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.644

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07985
  gflops (eval):  971.166
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07985,971.166,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.715
  maximum absolute entry in einsum_ir solution: 561.714
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137427
  time (eval):    1.24593
  gflops (eval):  841.711
  gflops (total): 840.783
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137427,1.24593,841.711,840.783

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15662
  gflops (total): 906.704
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,906.704

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07537
  gflops (eval):  975.216
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07537,975.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      591.659
  maximum absolute entry in einsum_ir solution: 591.66
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00136859
  time (eval):    1.24421
  gflops (eval):  842.876
  gflops (total): 841.95
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00136859,1.24421,842.876,841.95

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15415
  gflops (total): 908.646
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,908.646

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0756
  gflops (eval):  975.006
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0756,975.006,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      593.985
  maximum absolute entry in einsum_ir solution: 593.985
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00166367
  time (eval):    1.2433
  gflops (eval):  843.495
  gflops (total): 842.367
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00166367,1.2433,843.495,842.367

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14917
  gflops (total): 912.582
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.582

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07021
  gflops (eval):  979.916
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07021,979.916,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.154
  maximum absolute entry in einsum_ir solution: 536.154
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141562
  time (eval):    1.24519
  gflops (eval):  842.212
  gflops (total): 841.256
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141562,1.24519,842.212,841.256

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1485
  gflops (total): 913.117
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.117

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07312
  gflops (eval):  977.256
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07312,977.256,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      559.056
  maximum absolute entry in einsum_ir solution: 559.056
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137115
  time (eval):    1.24432
  gflops (eval):  842.803
  gflops (total): 841.876
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137115,1.24432,842.803,841.876

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15221
  gflops (total): 910.178
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.178

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07825
  gflops (eval):  972.608
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07825,972.608,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      602.537
  maximum absolute entry in einsum_ir solution: 602.537
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138215
  time (eval):    1.23556
  gflops (eval):  848.778
  gflops (total): 847.83
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138215,1.23556,848.778,847.83

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15057
  gflops (total): 911.474
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.474

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07007
  gflops (eval):  980.048
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07007,980.048,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      544.011
  maximum absolute entry in einsum_ir solution: 544.011
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137959
  time (eval):    1.24627
  gflops (eval):  841.485
  gflops (total): 840.554
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137959,1.24627,841.485,840.554

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15047
  gflops (total): 911.553
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.553

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07568
  gflops (eval):  974.931
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07568,974.931,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.085
  maximum absolute entry in einsum_ir solution: 539.085
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00143466
  time (eval):    1.23694
  gflops (eval):  847.829
  gflops (total): 846.847
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00143466,1.23694,847.829,846.847

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14949
  gflops (total): 912.33
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.33

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07682
  gflops (eval):  973.898
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07682,973.898,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.943
  maximum absolute entry in einsum_ir solution: 548.943
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138885
  time (eval):    1.24478
  gflops (eval):  842.494
  gflops (total): 841.555
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138885,1.24478,842.494,841.555

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14796
  gflops (total): 913.548
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.548

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07699
  gflops (eval):  973.745
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07699,973.745,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.038
  maximum absolute entry in einsum_ir solution: 574.038
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138041
  time (eval):    1.23726
  gflops (eval):  847.613
  gflops (total): 846.668
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138041,1.23726,847.613,846.668

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14919
  gflops (total): 912.567
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.567

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0732
  gflops (eval):  977.189
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0732,977.189,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      572.921
  maximum absolute entry in einsum_ir solution: 572.921
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137413
  time (eval):    1.23691
  gflops (eval):  847.85
  gflops (total): 846.909
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137413,1.23691,847.85,846.909

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14681
  gflops (total): 914.461
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.461

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07391
  gflops (eval):  976.54
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07391,976.54,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      557.004
  maximum absolute entry in einsum_ir solution: 557.004
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00164873
  time (eval):    1.23273
  gflops (eval):  850.73
  gflops (total): 849.593
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00164873,1.23273,850.73,849.593

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14707
  gflops (total): 914.26
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.26

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07551
  gflops (eval):  975.089
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07551,975.089,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.523
  maximum absolute entry in einsum_ir solution: 539.523
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013787
  time (eval):    1.24354
  gflops (eval):  843.33
  gflops (total): 842.396
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013787,1.24354,843.33,842.396

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1513
  gflops (total): 910.9
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.9

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08101
  gflops (eval):  970.126
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08101,970.126,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      557.253
  maximum absolute entry in einsum_ir solution: 557.253
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138607
  time (eval):    1.23548
  gflops (eval):  848.831
  gflops (total): 847.88
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138607,1.23548,848.831,847.88

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14797
  gflops (total): 913.537
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.537

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07989
  gflops (eval):  971.136
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07989,971.136,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.426
  maximum absolute entry in einsum_ir solution: 560.426
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137613
  time (eval):    1.23672
  gflops (eval):  847.981
  gflops (total): 847.039
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137613,1.23672,847.981,847.039

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14796
  gflops (total): 913.546
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06857
  gflops (eval):  981.421
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06857,981.421,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      517.939
  maximum absolute entry in einsum_ir solution: 517.939
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142007
  time (eval):    1.23185
  gflops (eval):  851.336
  gflops (total): 850.355
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142007,1.23185,851.336,850.355

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14799
  gflops (total): 913.528
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07223
  gflops (eval):  978.066
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07223,978.066,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.276
  maximum absolute entry in einsum_ir solution: 546.276
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00134922
  time (eval):    1.24464
  gflops (eval):  842.583
  gflops (total): 841.671
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00134922,1.24464,842.583,841.671

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1467
  gflops (total): 914.552
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07822
  gflops (eval):  972.638
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07822,972.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.81
  maximum absolute entry in einsum_ir solution: 552.81
  maximum element-wise difference:              0.000320435
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138841
  time (eval):    1.24228
  gflops (eval):  844.189
  gflops (total): 843.246
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138841,1.24228,844.189,843.246

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1485
  gflops (total): 913.121
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08782
  gflops (eval):  964.054
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08782,964.054,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.548
  maximum absolute entry in einsum_ir solution: 561.547
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138863
  time (eval):    1.23202
  gflops (eval):  851.216
  gflops (total): 850.257
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138863,1.23202,851.216,850.257

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15174
  gflops (total): 910.547
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.547

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07706
  gflops (eval):  973.681
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07706,973.681,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.535
  maximum absolute entry in einsum_ir solution: 532.535
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137059
  time (eval):    1.2374
  gflops (eval):  847.513
  gflops (total): 846.575
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137059,1.2374,847.513,846.575

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14475
  gflops (total): 916.107
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,916.107

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07806
  gflops (eval):  972.779
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07806,972.779,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.281
  maximum absolute entry in einsum_ir solution: 560.281
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138148
  time (eval):    1.23472
  gflops (eval):  849.359
  gflops (total): 848.41
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138148,1.23472,849.359,848.41

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15102
  gflops (total): 911.116
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.116

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07127
  gflops (eval):  978.947
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07127,978.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      532.442
  maximum absolute entry in einsum_ir solution: 532.442
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138087
  time (eval):    1.24154
  gflops (eval):  844.69
  gflops (total): 843.751
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138087,1.24154,844.69,843.751

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1479
  gflops (total): 913.592
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.592

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07544
  gflops (eval):  975.147
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07544,975.147,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.238
  maximum absolute entry in einsum_ir solution: 526.238
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138114
  time (eval):    1.24366
  gflops (eval):  843.25
  gflops (total): 842.314
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138114,1.24366,843.25,842.314

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15069
  gflops (total): 911.383
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.383

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0722
  gflops (eval):  978.099
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0722,978.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.48
  maximum absolute entry in einsum_ir solution: 555.48
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137185
  time (eval):    1.23759
  gflops (eval):  847.384
  gflops (total): 846.446
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137185,1.23759,847.384,846.446

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1484
  gflops (total): 913.197
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.197

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07594
  gflops (eval):  974.701
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07594,974.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.767
  maximum absolute entry in einsum_ir solution: 555.767
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137982
  time (eval):    1.25226
  gflops (eval):  837.457
  gflops (total): 836.535
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137982,1.25226,837.457,836.535

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14911
  gflops (total): 912.637
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.637

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07616
  gflops (eval):  974.5
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07616,974.5,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      577.154
  maximum absolute entry in einsum_ir solution: 577.154
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137609
  time (eval):    1.23257
  gflops (eval):  850.835
  gflops (total): 849.886
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137609,1.23257,850.835,849.886

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14935
  gflops (total): 912.442
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.442

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07639
  gflops (eval):  974.294
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07639,974.294,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      583.256
  maximum absolute entry in einsum_ir solution: 583.256
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137257
  time (eval):    1.22492
  gflops (eval):  856.149
  gflops (total): 855.191
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137257,1.22492,856.149,855.191

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15113
  gflops (total): 911.032
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.032

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0727
  gflops (eval):  977.644
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0727,977.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      559.061
  maximum absolute entry in einsum_ir solution: 559.061
  maximum element-wise difference:              0.000457764
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137059
  time (eval):    1.24331
  gflops (eval):  843.489
  gflops (total): 842.56
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137059,1.24331,843.489,842.56

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14917
  gflops (total): 912.585
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.585

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06889
  gflops (eval):  981.125
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06889,981.125,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      541.905
  maximum absolute entry in einsum_ir solution: 541.905
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013819
  time (eval):    1.24395
  gflops (eval):  843.053
  gflops (total): 842.117
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013819,1.24395,843.053,842.117

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14776
  gflops (total): 913.705
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.705

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07167
  gflops (eval):  978.582
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07167,978.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.477
  maximum absolute entry in einsum_ir solution: 529.477
  maximum element-wise difference:              0.000427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138205
  time (eval):    1.23621
  gflops (eval):  848.331
  gflops (total): 847.384
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138205,1.23621,848.331,847.384

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14891
  gflops (total): 912.789
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.789

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07705
  gflops (eval):  973.69
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07705,973.69,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.63
  maximum absolute entry in einsum_ir solution: 528.63
  maximum element-wise difference:              0.000427246
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138121
  time (eval):    1.2365
  gflops (eval):  848.13
  gflops (total): 847.184
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138121,1.2365,848.13,847.184

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14704
  gflops (total): 914.278
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.278

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0764
  gflops (eval):  974.281
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0764,974.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.125
  maximum absolute entry in einsum_ir solution: 529.125
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138608
  time (eval):    1.24934
  gflops (eval):  839.416
  gflops (total): 838.486
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138608,1.24934,839.416,838.486

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14734
  gflops (total): 914.039
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.039

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07428
  gflops (eval):  976.2
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07428,976.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      572.802
  maximum absolute entry in einsum_ir solution: 572.802
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139315
  time (eval):    1.24463
  gflops (eval):  842.592
  gflops (total): 841.65
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139315,1.24463,842.592,841.65

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15011
  gflops (total): 911.839
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.839

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07214
  gflops (eval):  978.148
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07214,978.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.618
  maximum absolute entry in einsum_ir solution: 549.617
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138679
  time (eval):    1.24181
  gflops (eval):  844.507
  gflops (total): 843.565
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138679,1.24181,844.507,843.565

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14859
  gflops (total): 913.05
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.05

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07903
  gflops (eval):  971.908
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07903,971.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.849
  maximum absolute entry in einsum_ir solution: 528.849
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139139
  time (eval):    1.22562
  gflops (eval):  855.661
  gflops (total): 854.691
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139139,1.22562,855.661,854.691

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14798
  gflops (total): 913.534
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.534

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07009
  gflops (eval):  980.023
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07009,980.023,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      538.586
  maximum absolute entry in einsum_ir solution: 538.585
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142856
  time (eval):    1.2436
  gflops (eval):  843.292
  gflops (total): 842.324
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142856,1.2436,843.292,842.324

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14834
  gflops (total): 913.248
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.248

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07856
  gflops (eval):  972.33
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07856,972.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.814
  maximum absolute entry in einsum_ir solution: 523.813
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138378
  time (eval):    1.23364
  gflops (eval):  850.096
  gflops (total): 849.143
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138378,1.23364,850.096,849.143

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14966
  gflops (total): 912.198
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.198

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07168
  gflops (eval):  978.573
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07168,978.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.676
  maximum absolute entry in einsum_ir solution: 533.676
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139288
  time (eval):    1.24511
  gflops (eval):  842.27
  gflops (total): 841.328
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139288,1.24511,842.27,841.328

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14943
  gflops (total): 912.378
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.378

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.08636
  gflops (eval):  965.351
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.08636,965.351,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      602.071
  maximum absolute entry in einsum_ir solution: 602.071
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137407
  time (eval):    1.22566
  gflops (eval):  855.633
  gflops (total): 854.675
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137407,1.22566,855.633,854.675

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14936
  gflops (total): 912.438
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.438

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07869
  gflops (eval):  972.216
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07869,972.216,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      551.41
  maximum absolute entry in einsum_ir solution: 551.41
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137747
  time (eval):    1.24721
  gflops (eval):  840.851
  gflops (total): 839.924
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137747,1.24721,840.851,839.924

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14822
  gflops (total): 913.344
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.344

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07363
  gflops (eval):  976.799
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07363,976.799,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.686
  maximum absolute entry in einsum_ir solution: 531.685
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137253
  time (eval):    1.23192
  gflops (eval):  851.288
  gflops (total): 850.34
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137253,1.23192,851.288,850.34

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14789
  gflops (total): 913.604
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.604

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07103
  gflops (eval):  979.164
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07103,979.164,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.46
  maximum absolute entry in einsum_ir solution: 536.46
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00150399
  time (eval):    1.24745
  gflops (eval):  840.686
  gflops (total): 839.674
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00150399,1.24745,840.686,839.674

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15119
  gflops (total): 910.982
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07275
  gflops (eval):  977.596
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07275,977.596,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.229
  maximum absolute entry in einsum_ir solution: 526.229
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00143152
  time (eval):    1.24544
  gflops (eval):  842.042
  gflops (total): 841.075
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00143152,1.24544,842.042,841.075

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14825
  gflops (total): 913.315
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.315

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07542
  gflops (eval):  975.169
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07542,975.169,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.212
  maximum absolute entry in einsum_ir solution: 533.212
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138656
  time (eval):    1.24315
  gflops (eval):  843.595
  gflops (total): 842.655
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138656,1.24315,843.595,842.655

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14998
  gflops (total): 911.943
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07956
  gflops (eval):  971.431
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07956,971.431,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.887
  maximum absolute entry in einsum_ir solution: 531.887
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00175977
  time (eval):    1.2508
  gflops (eval):  838.435
  gflops (total): 837.257
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00175977,1.2508,838.435,837.257

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14909
  gflops (total): 912.653
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.653

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07083
  gflops (eval):  979.35
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07083,979.35,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      575.584
  maximum absolute entry in einsum_ir solution: 575.584
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138086
  time (eval):    1.23312
  gflops (eval):  850.457
  gflops (total): 849.506
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138086,1.23312,850.457,849.506

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14899
  gflops (total): 912.731
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.731

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07807
  gflops (eval):  972.77
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07807,972.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.361
  maximum absolute entry in einsum_ir solution: 536.361
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140108
  time (eval):    1.23437
  gflops (eval):  849.599
  gflops (total): 848.635
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140108,1.23437,849.599,848.635

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14824
  gflops (total): 913.325
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.325

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07345
  gflops (eval):  976.96
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07345,976.96,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      591.395
  maximum absolute entry in einsum_ir solution: 591.395
  maximum element-wise difference:              0.000350952
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013986
  time (eval):    1.24589
  gflops (eval):  841.744
  gflops (total): 840.8
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013986,1.24589,841.744,840.8

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14659
  gflops (total): 914.64
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.64

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0714
  gflops (eval):  978.824
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0714,978.824,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.698
  maximum absolute entry in einsum_ir solution: 561.698
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138215
  time (eval):    1.23937
  gflops (eval):  846.171
  gflops (total): 845.228
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138215,1.23937,846.171,845.228

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15104
  gflops (total): 911.102
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.102

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07789
  gflops (eval):  972.933
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07789,972.933,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      534.717
  maximum absolute entry in einsum_ir solution: 534.717
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013798
  time (eval):    1.24285
  gflops (eval):  843.799
  gflops (total): 842.863
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013798,1.24285,843.799,842.863

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14957
  gflops (total): 912.268
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.268

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07528
  gflops (eval):  975.298
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07528,975.298,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      546.132
  maximum absolute entry in einsum_ir solution: 546.132
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00141978
  time (eval):    1.22588
  gflops (eval):  855.479
  gflops (total): 854.49
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00141978,1.22588,855.479,854.49

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14642
  gflops (total): 914.773
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.773

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07507
  gflops (eval):  975.486
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07507,975.486,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      604.917
  maximum absolute entry in einsum_ir solution: 604.917
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138448
  time (eval):    1.2251
  gflops (eval):  856.027
  gflops (total): 855.06
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138448,1.2251,856.027,855.06

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15036
  gflops (total): 911.643
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.643

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07069
  gflops (eval):  979.474
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07069,979.474,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      529.538
  maximum absolute entry in einsum_ir solution: 529.538
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00144092
  time (eval):    1.22993
  gflops (eval):  852.663
  gflops (total): 851.665
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00144092,1.22993,852.663,851.665

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1502
  gflops (total): 911.765
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07591
  gflops (eval):  974.729
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07591,974.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      539.295
  maximum absolute entry in einsum_ir solution: 539.295
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00166209
  time (eval):    1.24363
  gflops (eval):  843.273
  gflops (total): 842.147
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00166209,1.24363,843.273,842.147

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15253
  gflops (total): 909.922
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,909.922

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07367
  gflops (eval):  976.757
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07367,976.757,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      528.405
  maximum absolute entry in einsum_ir solution: 528.405
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138122
  time (eval):    1.24476
  gflops (eval):  842.505
  gflops (total): 841.571
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138122,1.24476,842.505,841.571

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14898
  gflops (total): 912.739
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.739

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07289
  gflops (eval):  977.469
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07289,977.469,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      549.021
  maximum absolute entry in einsum_ir solution: 549.021
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138406
  time (eval):    1.23615
  gflops (eval):  848.371
  gflops (total): 847.422
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138406,1.23615,848.371,847.422

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14992
  gflops (total): 911.99
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.99

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07921
  gflops (eval):  971.744
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07921,971.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      543.436
  maximum absolute entry in einsum_ir solution: 543.436
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139574
  time (eval):    1.24271
  gflops (eval):  843.895
  gflops (total): 842.948
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139574,1.24271,843.895,842.948

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14888
  gflops (total): 912.813
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.813

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07664
  gflops (eval):  974.068
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07664,974.068,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.591
  maximum absolute entry in einsum_ir solution: 530.591
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140678
  time (eval):    1.23985
  gflops (eval):  845.84
  gflops (total): 844.882
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140678,1.23985,845.84,844.882

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14805
  gflops (total): 913.473
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.473

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07317
  gflops (eval):  977.218
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07317,977.218,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.858
  maximum absolute entry in einsum_ir solution: 533.858
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138818
  time (eval):    1.22541
  gflops (eval):  855.806
  gflops (total): 854.838
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138818,1.22541,855.806,854.838

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14882
  gflops (total): 912.865
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.865

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07152
  gflops (eval):  978.723
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07152,978.723,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.416
  maximum absolute entry in einsum_ir solution: 561.416
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138773
  time (eval):    1.22582
  gflops (eval):  855.523
  gflops (total): 854.556
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138773,1.22582,855.523,854.556

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14864
  gflops (total): 913.004
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.004

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07599
  gflops (eval):  974.65
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07599,974.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      548.917
  maximum absolute entry in einsum_ir solution: 548.917
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013901
  time (eval):    1.2434
  gflops (eval):  843.428
  gflops (total): 842.486
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013901,1.2434,843.428,842.486

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14815
  gflops (total): 913.4
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.4

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07654
  gflops (eval):  974.156
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07654,974.156,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      561.59
  maximum absolute entry in einsum_ir solution: 561.59
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139261
  time (eval):    1.24287
  gflops (eval):  843.786
  gflops (total): 842.842
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139261,1.24287,843.786,842.842

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14957
  gflops (total): 912.271
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.271

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07497
  gflops (eval):  975.576
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07497,975.576,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      524.334
  maximum absolute entry in einsum_ir solution: 524.334
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138363
  time (eval):    1.22558
  gflops (eval):  855.687
  gflops (total): 854.722
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138363,1.22558,855.687,854.722

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15251
  gflops (total): 909.943
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,909.943

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07373
  gflops (eval):  976.707
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07373,976.707,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      574.008
  maximum absolute entry in einsum_ir solution: 574.009
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013784
  time (eval):    1.23285
  gflops (eval):  850.645
  gflops (total): 849.695
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013784,1.23285,850.645,849.695

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15218
  gflops (total): 910.2
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,910.2

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.081
  gflops (eval):  970.131
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.081,970.131,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.784
  maximum absolute entry in einsum_ir solution: 542.784
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00146228
  time (eval):    1.24672
  gflops (eval):  841.179
  gflops (total): 840.194
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00146228,1.24672,841.179,840.194

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14639
  gflops (total): 914.797
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.797

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0743
  gflops (eval):  976.184
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0743,976.184,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.516
  maximum absolute entry in einsum_ir solution: 531.516
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139023
  time (eval):    1.24444
  gflops (eval):  842.724
  gflops (total): 841.784
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139023,1.24444,842.724,841.784

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14583
  gflops (total): 915.246
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,915.246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07101
  gflops (eval):  979.185
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07101,979.185,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      560.304
  maximum absolute entry in einsum_ir solution: 560.304
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137616
  time (eval):    1.23444
  gflops (eval):  849.547
  gflops (total): 848.601
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137616,1.23444,849.547,848.601

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14778
  gflops (total): 913.69
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07447
  gflops (eval):  976.031
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07447,976.031,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      578.867
  maximum absolute entry in einsum_ir solution: 578.868
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013855
  time (eval):    1.23723
  gflops (eval):  847.63
  gflops (total): 846.682
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013855,1.23723,847.63,846.682

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14689
  gflops (total): 914.399
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.399

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07193
  gflops (eval):  978.342
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07193,978.342,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.561
  maximum absolute entry in einsum_ir solution: 553.561
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00139111
  time (eval):    1.24266
  gflops (eval):  843.931
  gflops (total): 842.988
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00139111,1.24266,843.931,842.988

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14912
  gflops (total): 912.626
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.626

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07952
  gflops (eval):  971.464
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07952,971.464,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      542.16
  maximum absolute entry in einsum_ir solution: 542.16
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138152
  time (eval):    1.24169
  gflops (eval):  844.59
  gflops (total): 843.651
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138152,1.24169,844.59,843.651

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1507
  gflops (total): 911.369
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.369

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07484
  gflops (eval):  975.694
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07484,975.694,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      553.754
  maximum absolute entry in einsum_ir solution: 553.754
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00178861
  time (eval):    1.23627
  gflops (eval):  848.292
  gflops (total): 847.066
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00178861,1.23627,848.292,847.066

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14832
  gflops (total): 913.258
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0741
  gflops (eval):  976.365
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0741,976.365,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      526.372
  maximum absolute entry in einsum_ir solution: 526.372
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00140038
  time (eval):    1.23208
  gflops (eval):  851.172
  gflops (total): 850.206
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00140038,1.23208,851.172,850.206

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15458
  gflops (total): 908.309
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,908.309

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07129
  gflops (eval):  978.925
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07129,978.925,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      540.473
  maximum absolute entry in einsum_ir solution: 540.473
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013883
  time (eval):    1.24363
  gflops (eval):  843.272
  gflops (total): 842.332
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013883,1.24363,843.272,842.332

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15009
  gflops (total): 911.857
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.857

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07502
  gflops (eval):  975.53
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07502,975.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      555.033
  maximum absolute entry in einsum_ir solution: 555.033
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00142823
  time (eval):    1.23593
  gflops (eval):  848.525
  gflops (total): 847.545
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00142823,1.23593,848.525,847.545

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1475
  gflops (total): 913.913
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,913.913

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07197
  gflops (eval):  978.309
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07197,978.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      550.47
  maximum absolute entry in einsum_ir solution: 550.47
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138286
  time (eval):    1.24395
  gflops (eval):  843.056
  gflops (total): 842.12
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138286,1.24395,843.056,842.12

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14676
  gflops (total): 914.505
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.505

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0687
  gflops (eval):  981.297
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0687,981.297,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.65
  maximum absolute entry in einsum_ir solution: 530.65
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138887
  time (eval):    1.24183
  gflops (eval):  844.493
  gflops (total): 843.55
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138887,1.24183,844.493,843.55

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15097
  gflops (total): 911.162
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07824
  gflops (eval):  972.62
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07824,972.62,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      531.513
  maximum absolute entry in einsum_ir solution: 531.513
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137808
  time (eval):    1.23254
  gflops (eval):  850.859
  gflops (total): 849.909
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137808,1.23254,850.859,849.909

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14947
  gflops (total): 912.347
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,912.347

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.0803
  gflops (eval):  970.766
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.0803,970.766,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      552.166
  maximum absolute entry in einsum_ir solution: 552.166
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00137989
  time (eval):    1.2371
  gflops (eval):  847.72
  gflops (total): 846.776
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00137989,1.2371,847.72,846.776

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.15412
  gflops (total): 908.672
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,908.672

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07647
  gflops (eval):  974.221
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07647,974.221,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      518.556
  maximum absolute entry in einsum_ir solution: 518.557
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138303
  time (eval):    1.24308
  gflops (eval):  843.645
  gflops (total): 842.707
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138303,1.24308,843.645,842.707

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14681
  gflops (total): 914.462
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.06884
  gflops (eval):  981.17
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.06884,981.17,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      536.13
  maximum absolute entry in einsum_ir solution: 536.13
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.00138093
  time (eval):    1.24266
  gflops (eval):  843.927
  gflops (total): 842.99
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.00138093,1.24266,843.927,842.99

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.1502
  gflops (total): 911.766
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,911.766

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07596
  gflops (eval):  974.68
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07596,974.68,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      530.024
  maximum absolute entry in einsum_ir solution: 530.023
  maximum element-wise difference:              0.000396729
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  e,a,f,d
  f,b,e,c
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 84
  e: 96
  f: 96
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 4 0 5 3 5 1 4 2 0 1 2 3 

*** benchmarking einsum_ir ***
[[4,0,5,3]->[0,4,5,3]],[[5,1,4,2]->[1,4,2,5]]->[0,1,2,3]
  #flops:         1048716232704
  time (compile): 0.0013756
  time (eval):    1.23707
  gflops (eval):  847.74
  gflops (total): 846.798
CSV_DATA: einsum_ir,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0.0013756,1.23707,847.74,846.798

*** benchmarking at::einsum ***
  #flops:         1048716232704
  time (total):   1.14652
  gflops (total): 914.692
CSV_DATA: at::einsum,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,0,0,914.692

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 7056 9216
  #flops:         1048716232704
  time (eval):    1.07581
  gflops (eval):  974.813
CSV_DATA: at::matmul,"eafd,fbec->abcd","96,84,84,84,96,96","(0,1)",1048716232704,0,1.07581,974.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      547.063
  maximum absolute entry in einsum_ir solution: 547.063
  maximum element-wise difference:              0.000366211
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00142597
  time (eval):    0.929612
  gflops (eval):  987.09
  gflops (total): 985.579
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00142597,0.929612,987.09,985.579

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05403
  gflops (total): 870.577
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.577

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943227
  gflops (eval):  972.843
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943227,972.843,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.827
  maximum absolute entry in einsum_ir solution: 488.827
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138375
  time (eval):    0.928668
  gflops (eval):  988.094
  gflops (total): 986.624
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138375,0.928668,988.094,986.624

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05614
  gflops (total): 868.833
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.833

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951322
  gflops (eval):  964.565
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951322,964.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.049
  maximum absolute entry in einsum_ir solution: 480.049
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137621
  time (eval):    0.922952
  gflops (eval):  994.213
  gflops (total): 992.733
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137621,0.922952,994.213,992.733

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05311
  gflops (total): 871.331
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94712
  gflops (eval):  968.844
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94712,968.844,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.823
  maximum absolute entry in einsum_ir solution: 465.823
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137769
  time (eval):    0.928639
  gflops (eval):  988.125
  gflops (total): 986.661
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137769,0.928639,988.125,986.661

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04866
  gflops (total): 875.033
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,875.033

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942103
  gflops (eval):  974.003
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942103,974.003,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.646
  maximum absolute entry in einsum_ir solution: 500.646
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143371
  time (eval):    0.959659
  gflops (eval):  956.184
  gflops (total): 954.758
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143371,0.959659,956.184,954.758

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05294
  gflops (total): 871.478
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.478

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95007
  gflops (eval):  965.836
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95007,965.836,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.029
  maximum absolute entry in einsum_ir solution: 486.029
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146292
  time (eval):    0.953298
  gflops (eval):  962.565
  gflops (total): 961.09
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146292,0.953298,962.565,961.09

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05275
  gflops (total): 871.636
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.636

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947122
  gflops (eval):  968.842
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947122,968.842,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      478.34
  maximum absolute entry in einsum_ir solution: 478.34
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138551
  time (eval):    0.947445
  gflops (eval):  968.511
  gflops (total): 967.097
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138551,0.947445,968.511,967.097

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05513
  gflops (total): 869.671
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.671

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944248
  gflops (eval):  971.791
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944248,971.791,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      462.292
  maximum absolute entry in einsum_ir solution: 462.292
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144608
  time (eval):    0.941633
  gflops (eval):  974.49
  gflops (total): 972.995
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144608,0.941633,974.49,972.995

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05336
  gflops (total): 871.127
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941994
  gflops (eval):  974.116
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941994,974.116,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.629
  maximum absolute entry in einsum_ir solution: 463.629
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138246
  time (eval):    0.941409
  gflops (eval):  974.721
  gflops (total): 973.292
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138246,0.941409,974.721,973.292

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05554
  gflops (total): 869.331
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950487
  gflops (eval):  965.412
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950487,965.412,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.201
  maximum absolute entry in einsum_ir solution: 470.201
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138841
  time (eval):    0.92779
  gflops (eval):  989.03
  gflops (total): 987.552
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138841,0.92779,989.03,987.552

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05911
  gflops (total): 866.402
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,866.402

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.953356
  gflops (eval):  962.507
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.953356,962.507,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.81
  maximum absolute entry in einsum_ir solution: 477.81
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.001427
  time (eval):    0.958714
  gflops (eval):  957.127
  gflops (total): 955.705
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.001427,0.958714,957.127,955.705

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05515
  gflops (total): 869.652
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.652

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950824
  gflops (eval):  965.07
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950824,965.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.5
  maximum absolute entry in einsum_ir solution: 486.5
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138716
  time (eval):    0.945455
  gflops (eval):  970.55
  gflops (total): 969.128
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138716,0.945455,970.55,969.128

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05985
  gflops (total): 865.79
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,865.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949713
  gflops (eval):  966.199
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949713,966.199,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.219
  maximum absolute entry in einsum_ir solution: 471.219
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140396
  time (eval):    0.922829
  gflops (eval):  994.347
  gflops (total): 992.836
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140396,0.922829,994.347,992.836

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0532
  gflops (total): 871.258
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944506
  gflops (eval):  971.525
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944506,971.525,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.63
  maximum absolute entry in einsum_ir solution: 475.63
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013809
  time (eval):    0.935196
  gflops (eval):  981.197
  gflops (total): 979.75
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013809,0.935196,981.197,979.75

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05997
  gflops (total): 865.693
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,865.693

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952139
  gflops (eval):  963.737
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952139,963.737,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.995
  maximum absolute entry in einsum_ir solution: 492.995
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137387
  time (eval):    0.954255
  gflops (eval):  961.6
  gflops (total): 960.218
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137387,0.954255,961.6,960.218

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0546
  gflops (total): 870.104
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.104

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947447
  gflops (eval):  968.509
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947447,968.509,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      533.641
  maximum absolute entry in einsum_ir solution: 533.641
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138812
  time (eval):    0.937097
  gflops (eval):  979.207
  gflops (total): 977.758
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138812,0.937097,979.207,977.758

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05329
  gflops (total): 871.182
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.182

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946024
  gflops (eval):  969.966
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946024,969.966,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.309
  maximum absolute entry in einsum_ir solution: 473.309
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138406
  time (eval):    0.941513
  gflops (eval):  974.613
  gflops (total): 973.183
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138406,0.941513,974.613,973.183

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0515
  gflops (total): 872.665
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.665

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942339
  gflops (eval):  973.76
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942339,973.76,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      502.514
  maximum absolute entry in einsum_ir solution: 502.514
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138238
  time (eval):    0.940482
  gflops (eval):  975.682
  gflops (total): 974.25
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138238,0.940482,975.682,974.25

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05261
  gflops (total): 871.745
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.745

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946876
  gflops (eval):  969.093
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946876,969.093,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.384
  maximum absolute entry in einsum_ir solution: 483.384
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137264
  time (eval):    0.920531
  gflops (eval):  996.829
  gflops (total): 995.345
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137264,0.920531,996.829,995.345

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05705
  gflops (total): 868.086
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.086

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.940921
  gflops (eval):  975.226
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.940921,975.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.602
  maximum absolute entry in einsum_ir solution: 465.602
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136977
  time (eval):    0.924327
  gflops (eval):  992.735
  gflops (total): 991.266
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136977,0.924327,992.735,991.266

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05055
  gflops (total): 873.458
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.458

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94088
  gflops (eval):  975.27
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94088,975.27,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      500.682
  maximum absolute entry in einsum_ir solution: 500.682
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138915
  time (eval):    0.930343
  gflops (eval):  986.315
  gflops (total): 984.844
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138915,0.930343,986.315,984.844

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.056
  gflops (total): 868.954
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.954

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950877
  gflops (eval):  965.016
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950877,965.016,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.464
  maximum absolute entry in einsum_ir solution: 479.464
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00156929
  time (eval):    0.938887
  gflops (eval):  977.34
  gflops (total): 975.709
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00156929,0.938887,977.34,975.709

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05988
  gflops (total): 865.768
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,865.768

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942997
  gflops (eval):  973.079
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942997,973.079,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      489.797
  maximum absolute entry in einsum_ir solution: 489.797
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138419
  time (eval):    0.929107
  gflops (eval):  987.628
  gflops (total): 986.158
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138419,0.929107,987.628,986.158

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05482
  gflops (total): 869.924
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.924

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944045
  gflops (eval):  972
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944045,972,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.551
  maximum absolute entry in einsum_ir solution: 480.551
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139939
  time (eval):    0.931388
  gflops (eval):  985.208
  gflops (total): 983.73
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139939,0.931388,985.208,983.73

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05409
  gflops (total): 870.525
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.525

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941453
  gflops (eval):  974.675
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941453,974.675,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      504.753
  maximum absolute entry in einsum_ir solution: 504.753
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145051
  time (eval):    0.954563
  gflops (eval):  961.289
  gflops (total): 959.831
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145051,0.954563,961.289,959.831

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05588
  gflops (total): 869.047
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.047

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948308
  gflops (eval):  967.63
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948308,967.63,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      457.858
  maximum absolute entry in einsum_ir solution: 457.858
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140456
  time (eval):    0.929827
  gflops (eval):  986.863
  gflops (total): 985.374
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140456,0.929827,986.863,985.374

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0555
  gflops (total): 869.363
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.363

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942979
  gflops (eval):  973.099
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942979,973.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      459.15
  maximum absolute entry in einsum_ir solution: 459.15
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141429
  time (eval):    0.928697
  gflops (eval):  988.063
  gflops (total): 986.561
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141429,0.928697,988.063,986.561

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05701
  gflops (total): 868.12
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950441
  gflops (eval):  965.459
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950441,965.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.516
  maximum absolute entry in einsum_ir solution: 482.516
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137761
  time (eval):    0.938222
  gflops (eval):  978.032
  gflops (total): 976.598
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137761,0.938222,978.032,976.598

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.06017
  gflops (total): 865.531
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,865.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949854
  gflops (eval):  966.056
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949854,966.056,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.816
  maximum absolute entry in einsum_ir solution: 473.816
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00145179
  time (eval):    0.931888
  gflops (eval):  984.68
  gflops (total): 983.148
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00145179,0.931888,984.68,983.148

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05496
  gflops (total): 869.809
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.809

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942445
  gflops (eval):  973.65
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942445,973.65,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      492.065
  maximum absolute entry in einsum_ir solution: 492.065
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140645
  time (eval):    0.917583
  gflops (eval):  1000.03
  gflops (total): 998.501
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140645,0.917583,1000.03,998.501

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05205
  gflops (total): 872.212
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.212

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944391
  gflops (eval):  971.644
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944391,971.644,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.746
  maximum absolute entry in einsum_ir solution: 485.746
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013789
  time (eval):    0.922221
  gflops (eval):  995.002
  gflops (total): 993.517
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013789,0.922221,995.002,993.517

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04988
  gflops (total): 874.017
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.017

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950024
  gflops (eval):  965.882
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950024,965.882,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.62
  maximum absolute entry in einsum_ir solution: 461.62
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139161
  time (eval):    0.926711
  gflops (eval):  990.181
  gflops (total): 988.696
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139161,0.926711,990.181,988.696

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05613
  gflops (total): 868.841
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.841

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947263
  gflops (eval):  968.697
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947263,968.697,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.941
  maximum absolute entry in einsum_ir solution: 465.941
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138576
  time (eval):    0.92768
  gflops (eval):  989.146
  gflops (total): 987.671
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138576,0.92768,989.146,987.671

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05125
  gflops (total): 872.879
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943906
  gflops (eval):  972.143
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943906,972.143,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.422
  maximum absolute entry in einsum_ir solution: 471.422
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013797
  time (eval):    0.927828
  gflops (eval):  988.988
  gflops (total): 987.52
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013797,0.927828,988.988,987.52

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0551
  gflops (total): 869.691
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.691

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943429
  gflops (eval):  972.635
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943429,972.635,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.266
  maximum absolute entry in einsum_ir solution: 496.266
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137544
  time (eval):    0.948979
  gflops (eval):  966.946
  gflops (total): 965.547
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137544,0.948979,966.946,965.547

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05642
  gflops (total): 868.603
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.603

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949523
  gflops (eval):  966.392
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949523,966.392,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      465.934
  maximum absolute entry in einsum_ir solution: 465.934
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139436
  time (eval):    0.941063
  gflops (eval):  975.079
  gflops (total): 973.637
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139436,0.941063,975.079,973.637

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05601
  gflops (total): 868.939
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.939

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951613
  gflops (eval):  964.269
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951613,964.269,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.906
  maximum absolute entry in einsum_ir solution: 482.906
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138218
  time (eval):    0.949129
  gflops (eval):  966.793
  gflops (total): 965.387
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138218,0.949129,966.793,965.387

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05546
  gflops (total): 869.397
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.397

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942287
  gflops (eval):  973.813
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942287,973.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.323
  maximum absolute entry in einsum_ir solution: 481.323
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139211
  time (eval):    0.927186
  gflops (eval):  989.674
  gflops (total): 988.19
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139211,0.927186,989.674,988.19

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.06093
  gflops (total): 864.911
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,864.911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950502
  gflops (eval):  965.397
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950502,965.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.228
  maximum absolute entry in einsum_ir solution: 484.228
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00157045
  time (eval):    0.945218
  gflops (eval):  970.793
  gflops (total): 969.183
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00157045,0.945218,970.793,969.183

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05441
  gflops (total): 870.263
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.263

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951733
  gflops (eval):  964.148
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951733,964.148,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.461
  maximum absolute entry in einsum_ir solution: 456.461
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013778
  time (eval):    0.940507
  gflops (eval):  975.656
  gflops (total): 974.229
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013778,0.940507,975.656,974.229

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05288
  gflops (total): 871.528
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948089
  gflops (eval):  967.854
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948089,967.854,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.693
  maximum absolute entry in einsum_ir solution: 475.693
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141936
  time (eval):    0.927439
  gflops (eval):  989.404
  gflops (total): 987.892
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141936,0.927439,989.404,987.892

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05235
  gflops (total): 871.966
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.966

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944219
  gflops (eval):  971.82
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944219,971.82,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.246
  maximum absolute entry in einsum_ir solution: 479.246
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138441
  time (eval):    0.957034
  gflops (eval):  958.807
  gflops (total): 957.422
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138441,0.957034,958.807,957.422

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05816
  gflops (total): 867.177
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.177

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947643
  gflops (eval):  968.309
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947643,968.309,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      488.654
  maximum absolute entry in einsum_ir solution: 488.654
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138722
  time (eval):    0.929929
  gflops (eval):  986.754
  gflops (total): 985.284
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138722,0.929929,986.754,985.284

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04967
  gflops (total): 874.19
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.19

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94378
  gflops (eval):  972.273
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94378,972.273,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      480.614
  maximum absolute entry in einsum_ir solution: 480.614
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138679
  time (eval):    0.94062
  gflops (eval):  975.539
  gflops (total): 974.103
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138679,0.94062,975.539,974.103

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05639
  gflops (total): 868.63
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.63

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946448
  gflops (eval):  969.532
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946448,969.532,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.227
  maximum absolute entry in einsum_ir solution: 475.227
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138784
  time (eval):    0.946718
  gflops (eval):  969.255
  gflops (total): 967.837
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138784,0.946718,969.255,967.837

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05936
  gflops (total): 866.196
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,866.196

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949493
  gflops (eval):  966.422
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949493,966.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.941
  maximum absolute entry in einsum_ir solution: 473.941
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00146809
  time (eval):    0.949166
  gflops (eval):  966.755
  gflops (total): 965.262
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00146809,0.949166,966.755,965.262

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05801
  gflops (total): 867.303
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948924
  gflops (eval):  967.002
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948924,967.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.446
  maximum absolute entry in einsum_ir solution: 484.446
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138607
  time (eval):    0.922878
  gflops (eval):  994.294
  gflops (total): 992.803
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138607,0.922878,994.294,992.803

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05039
  gflops (total): 873.588
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.588

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944517
  gflops (eval):  971.514
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944517,971.514,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.606
  maximum absolute entry in einsum_ir solution: 464.606
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00157112
  time (eval):    0.926861
  gflops (eval):  990.02
  gflops (total): 988.345
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00157112,0.926861,990.02,988.345

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05111
  gflops (total): 872.991
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.991

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943202
  gflops (eval):  972.869
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943202,972.869,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      473.883
  maximum absolute entry in einsum_ir solution: 473.884
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014206
  time (eval):    0.928374
  gflops (eval):  988.407
  gflops (total): 986.897
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014206,0.928374,988.407,986.897

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05393
  gflops (total): 870.66
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.66

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946081
  gflops (eval):  969.908
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946081,969.908,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.543
  maximum absolute entry in einsum_ir solution: 481.543
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138775
  time (eval):    0.92329
  gflops (eval):  993.85
  gflops (total): 992.358
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138775,0.92329,993.85,992.358

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05701
  gflops (total): 868.118
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.118

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950327
  gflops (eval):  965.575
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950327,965.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.564
  maximum absolute entry in einsum_ir solution: 483.565
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139408
  time (eval):    0.926812
  gflops (eval):  990.073
  gflops (total): 988.586
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139408,0.926812,990.073,988.586

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05257
  gflops (total): 871.783
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.783

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94639
  gflops (eval):  969.591
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94639,969.591,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      458.505
  maximum absolute entry in einsum_ir solution: 458.505
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137613
  time (eval):    0.930141
  gflops (eval):  986.529
  gflops (total): 985.072
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137613,0.930141,986.529,985.072

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05837
  gflops (total): 867.006
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947648
  gflops (eval):  968.304
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947648,968.304,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.122
  maximum absolute entry in einsum_ir solution: 466.122
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00135308
  time (eval):    0.932355
  gflops (eval):  984.187
  gflops (total): 982.76
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00135308,0.932355,984.187,982.76

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05116
  gflops (total): 872.95
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.95

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948062
  gflops (eval):  967.881
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948062,967.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      513.376
  maximum absolute entry in einsum_ir solution: 513.376
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138545
  time (eval):    0.92606
  gflops (eval):  990.877
  gflops (total): 989.397
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138545,0.92606,990.877,989.397

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05695
  gflops (total): 868.169
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.169

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946932
  gflops (eval):  969.036
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946932,969.036,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.782
  maximum absolute entry in einsum_ir solution: 477.782
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144921
  time (eval):    0.929321
  gflops (eval):  987.4
  gflops (total): 985.863
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144921,0.929321,987.4,985.863

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04986
  gflops (total): 874.029
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.029

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950334
  gflops (eval):  965.567
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950334,965.567,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.699
  maximum absolute entry in einsum_ir solution: 472.699
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139596
  time (eval):    0.927119
  gflops (eval):  989.746
  gflops (total): 988.258
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139596,0.927119,989.746,988.258

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05699
  gflops (total): 868.138
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.138

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950439
  gflops (eval):  965.461
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950439,965.461,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.18
  maximum absolute entry in einsum_ir solution: 484.18
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138449
  time (eval):    0.929797
  gflops (eval):  986.894
  gflops (total): 985.427
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138449,0.929797,986.894,985.427

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05614
  gflops (total): 868.837
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.837

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94963
  gflops (eval):  966.284
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94963,966.284,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      527.69
  maximum absolute entry in einsum_ir solution: 527.69
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139223
  time (eval):    0.923494
  gflops (eval):  993.63
  gflops (total): 992.135
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139223,0.923494,993.63,992.135

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05266
  gflops (total): 871.711
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.711

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946047
  gflops (eval):  969.943
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946047,969.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      477.734
  maximum absolute entry in einsum_ir solution: 477.734
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137719
  time (eval):    0.919034
  gflops (eval):  998.453
  gflops (total): 996.959
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137719,0.919034,998.453,996.959

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05357
  gflops (total): 870.953
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.953

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949562
  gflops (eval):  966.352
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949562,966.352,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      496.532
  maximum absolute entry in einsum_ir solution: 496.532
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00153514
  time (eval):    0.938283
  gflops (eval):  977.968
  gflops (total): 976.371
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00153514,0.938283,977.968,976.371

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05741
  gflops (total): 867.79
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.79

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.957918
  gflops (eval):  957.923
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.957918,957.923,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      505.626
  maximum absolute entry in einsum_ir solution: 505.626
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138311
  time (eval):    0.924845
  gflops (eval):  992.179
  gflops (total): 990.697
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138311,0.924845,992.179,990.697

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05869
  gflops (total): 866.74
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,866.74

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945894
  gflops (eval):  970.099
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945894,970.099,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      506.487
  maximum absolute entry in einsum_ir solution: 506.487
  maximum element-wise difference:              0.000335693
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143525
  time (eval):    0.956166
  gflops (eval):  959.678
  gflops (total): 958.24
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143525,0.956166,959.678,958.24

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05605
  gflops (total): 868.911
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.911

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950928
  gflops (eval):  964.964
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950928,964.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      483.128
  maximum absolute entry in einsum_ir solution: 483.128
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139726
  time (eval):    0.939893
  gflops (eval):  976.294
  gflops (total): 974.844
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139726,0.939893,976.294,974.844

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05538
  gflops (total): 869.462
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.462

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.944559
  gflops (eval):  971.47
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.944559,971.47,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      476.974
  maximum absolute entry in einsum_ir solution: 476.974
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138564
  time (eval):    0.926292
  gflops (eval):  990.629
  gflops (total): 989.149
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138564,0.926292,990.629,989.149

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05108
  gflops (total): 873.016
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.016

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.943614
  gflops (eval):  972.444
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.943614,972.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      471.418
  maximum absolute entry in einsum_ir solution: 471.418
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140318
  time (eval):    0.928221
  gflops (eval):  988.57
  gflops (total): 987.078
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140318,0.928221,988.57,987.078

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05627
  gflops (total): 868.729
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.729

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948048
  gflops (eval):  967.895
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948048,967.895,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.417
  maximum absolute entry in einsum_ir solution: 470.417
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140849
  time (eval):    0.923491
  gflops (eval):  993.633
  gflops (total): 992.12
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140849,0.923491,993.633,992.12

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05526
  gflops (total): 869.563
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.563

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942682
  gflops (eval):  973.405
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942682,973.405,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      479.569
  maximum absolute entry in einsum_ir solution: 479.569
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141238
  time (eval):    0.960617
  gflops (eval):  955.231
  gflops (total): 953.829
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141238,0.960617,955.231,953.829

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05837
  gflops (total): 867.003
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947604
  gflops (eval):  968.349
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947604,968.349,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      482.54
  maximum absolute entry in einsum_ir solution: 482.54
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140679
  time (eval):    0.961389
  gflops (eval):  954.464
  gflops (total): 953.069
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140679,0.961389,954.464,953.069

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05666
  gflops (total): 868.406
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.406

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947308
  gflops (eval):  968.651
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947308,968.651,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.994
  maximum absolute entry in einsum_ir solution: 470.994
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139544
  time (eval):    0.931614
  gflops (eval):  984.97
  gflops (total): 983.496
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139544,0.931614,984.97,983.496

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05576
  gflops (total): 869.151
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.151

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945266
  gflops (eval):  970.744
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945266,970.744,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.143
  maximum absolute entry in einsum_ir solution: 486.143
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143493
  time (eval):    0.943729
  gflops (eval):  972.325
  gflops (total): 970.849
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143493,0.943729,972.325,970.849

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04995
  gflops (total): 873.957
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.957

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947825
  gflops (eval):  968.123
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947825,968.123,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      495.71
  maximum absolute entry in einsum_ir solution: 495.71
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137968
  time (eval):    0.931126
  gflops (eval):  985.486
  gflops (total): 984.028
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137968,0.931126,985.486,984.028

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05632
  gflops (total): 868.685
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.685

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949337
  gflops (eval):  966.581
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949337,966.581,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.072
  maximum absolute entry in einsum_ir solution: 470.072
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138488
  time (eval):    0.937214
  gflops (eval):  979.084
  gflops (total): 977.64
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138488,0.937214,979.084,977.64

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05459
  gflops (total): 870.115
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.115

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950015
  gflops (eval):  965.891
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950015,965.891,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      523.9
  maximum absolute entry in einsum_ir solution: 523.9
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00139015
  time (eval):    0.929469
  gflops (eval):  987.242
  gflops (total): 985.768
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00139015,0.929469,987.242,985.768

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05573
  gflops (total): 869.174
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.174

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951042
  gflops (eval):  964.849
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951042,964.849,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.102
  maximum absolute entry in einsum_ir solution: 481.102
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013775
  time (eval):    0.922153
  gflops (eval):  995.075
  gflops (total): 993.591
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013775,0.922153,995.075,993.591

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05609
  gflops (total): 868.879
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.879

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941651
  gflops (eval):  974.471
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941651,974.471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      463.228
  maximum absolute entry in einsum_ir solution: 463.228
  maximum element-wise difference:              0.000244141
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0014954
  time (eval):    0.943704
  gflops (eval):  972.351
  gflops (total): 970.813
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0014954,0.943704,972.351,970.813

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05165
  gflops (total): 872.543
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.543

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947462
  gflops (eval):  968.495
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947462,968.495,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      461.797
  maximum absolute entry in einsum_ir solution: 461.797
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00143377
  time (eval):    0.92665
  gflops (eval):  990.246
  gflops (total): 988.716
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00143377,0.92665,990.246,988.716

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.06574
  gflops (total): 861.006
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,861.006

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946994
  gflops (eval):  968.973
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946994,968.973,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      494.892
  maximum absolute entry in einsum_ir solution: 494.892
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013962
  time (eval):    0.927735
  gflops (eval):  989.088
  gflops (total): 987.602
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013962,0.927735,989.088,987.602

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05737
  gflops (total): 867.824
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.824

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.94634
  gflops (eval):  969.642
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.94634,969.642,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      466.694
  maximum absolute entry in einsum_ir solution: 466.694
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138432
  time (eval):    0.92058
  gflops (eval):  996.775
  gflops (total): 995.279
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138432,0.92058,996.775,995.279

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05875
  gflops (total): 866.696
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,866.696

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951549
  gflops (eval):  964.334
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951549,964.334,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.678
  maximum absolute entry in einsum_ir solution: 508.678
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138693
  time (eval):    0.923355
  gflops (eval):  993.78
  gflops (total): 992.29
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138693,0.923355,993.78,992.29

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05307
  gflops (total): 871.366
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950499
  gflops (eval):  965.399
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950499,965.399,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      453.582
  maximum absolute entry in einsum_ir solution: 453.582
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00135859
  time (eval):    0.92741
  gflops (eval):  989.434
  gflops (total): 987.987
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00135859,0.92741,989.434,987.987

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05809
  gflops (total): 867.236
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.941833
  gflops (eval):  974.282
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.941833,974.282,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.822
  maximum absolute entry in einsum_ir solution: 472.822
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013998
  time (eval):    0.924143
  gflops (eval):  992.932
  gflops (total): 991.431
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013998,0.924143,992.932,991.431

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05705
  gflops (total): 868.085
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.085

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.950956
  gflops (eval):  964.936
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.950956,964.936,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      508.587
  maximum absolute entry in einsum_ir solution: 508.587
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138392
  time (eval):    0.939777
  gflops (eval):  976.414
  gflops (total): 974.978
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138392,0.939777,976.414,974.978

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.06071
  gflops (total): 865.088
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,865.088

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951452
  gflops (eval):  964.433
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951452,964.433,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      464.722
  maximum absolute entry in einsum_ir solution: 464.722
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00137927
  time (eval):    0.922111
  gflops (eval):  995.121
  gflops (total): 993.635
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00137927,0.922111,995.121,993.635

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0504
  gflops (total): 873.586
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.586

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.951282
  gflops (eval):  964.605
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.951282,964.605,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      451.83
  maximum absolute entry in einsum_ir solution: 451.83
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138242
  time (eval):    0.924263
  gflops (eval):  992.804
  gflops (total): 991.321
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138242,0.924263,992.804,991.321

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05506
  gflops (total): 869.728
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.728

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.942869
  gflops (eval):  973.212
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.942869,973.212,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      456.75
  maximum absolute entry in einsum_ir solution: 456.75
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138347
  time (eval):    0.923207
  gflops (eval):  993.939
  gflops (total): 992.452
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138347,0.923207,993.939,992.452

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.0547
  gflops (total): 870.022
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.022

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.945198
  gflops (eval):  970.814
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.945198,970.814,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      475.954
  maximum absolute entry in einsum_ir solution: 475.954
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138805
  time (eval):    0.920845
  gflops (eval):  996.489
  gflops (total): 994.989
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138805,0.920845,996.489,994.989

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05985
  gflops (total): 865.795
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,865.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949632
  gflops (eval):  966.281
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949632,966.281,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      522.502
  maximum absolute entry in einsum_ir solution: 522.502
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141515
  time (eval):    0.921446
  gflops (eval):  995.839
  gflops (total): 994.312
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141515,0.921446,995.839,994.312

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05084
  gflops (total): 873.216
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.216

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946325
  gflops (eval):  969.658
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946325,969.658,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.543
  maximum absolute entry in einsum_ir solution: 486.543
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141136
  time (eval):    0.929806
  gflops (eval):  986.884
  gflops (total): 985.389
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141136,0.929806,986.884,985.389

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05034
  gflops (total): 873.635
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.635

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946628
  gflops (eval):  969.347
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946628,969.347,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.617
  maximum absolute entry in einsum_ir solution: 493.617
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140475
  time (eval):    0.923851
  gflops (eval):  993.247
  gflops (total): 991.739
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140475,0.923851,993.247,991.739

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04903
  gflops (total): 874.724
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.724

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.95023
  gflops (eval):  965.673
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.95023,965.673,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      535.613
  maximum absolute entry in einsum_ir solution: 535.612
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00140417
  time (eval):    0.92138
  gflops (eval):  995.91
  gflops (total): 994.395
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00140417,0.92138,995.91,994.395

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05206
  gflops (total): 872.203
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,872.203

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948211
  gflops (eval):  967.729
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948211,967.729,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      491.14
  maximum absolute entry in einsum_ir solution: 491.14
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138759
  time (eval):    0.933665
  gflops (eval):  982.806
  gflops (total): 981.348
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138759,0.933665,982.806,981.348

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05335
  gflops (total): 871.134
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,871.134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948702
  gflops (eval):  967.228
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948702,967.228,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      493.316
  maximum absolute entry in einsum_ir solution: 493.316
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138565
  time (eval):    0.94825
  gflops (eval):  967.69
  gflops (total): 966.278
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138565,0.94825,967.69,966.278

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05447
  gflops (total): 870.209
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,870.209

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948528
  gflops (eval):  967.406
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948528,967.406,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      486.427
  maximum absolute entry in einsum_ir solution: 486.427
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141889
  time (eval):    0.928138
  gflops (eval):  988.659
  gflops (total): 987.15
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141889,0.928138,988.659,987.15

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05687
  gflops (total): 868.235
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.235

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.949379
  gflops (eval):  966.539
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.949379,966.539,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      470.059
  maximum absolute entry in einsum_ir solution: 470.059
  maximum element-wise difference:              0.000305176
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.0013788
  time (eval):    0.93553
  gflops (eval):  980.846
  gflops (total): 979.403
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.0013788,0.93553,980.846,979.403

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05679
  gflops (total): 868.303
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.303

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.9471
  gflops (eval):  968.865
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.9471,968.865,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      467.205
  maximum absolute entry in einsum_ir solution: 467.205
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00136875
  time (eval):    0.930046
  gflops (eval):  986.63
  gflops (total): 985.18
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00136875,0.930046,986.63,985.18

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05716
  gflops (total): 867.994
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,867.994

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948605
  gflops (eval):  967.327
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948605,967.327,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      484.518
  maximum absolute entry in einsum_ir solution: 484.518
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138673
  time (eval):    0.9393
  gflops (eval):  976.91
  gflops (total): 975.47
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138673,0.9393,976.91,975.47

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05106
  gflops (total): 873.034
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,873.034

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.947212
  gflops (eval):  968.75
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.947212,968.75,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      481.284
  maximum absolute entry in einsum_ir solution: 481.284
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00144519
  time (eval):    0.954664
  gflops (eval):  961.188
  gflops (total): 959.735
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00144519,0.954664,961.188,959.735

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.04895
  gflops (total): 874.795
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,874.795

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948418
  gflops (eval):  967.518
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948418,967.518,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      487.501
  maximum absolute entry in einsum_ir solution: 487.501
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00150401
  time (eval):    0.938338
  gflops (eval):  977.912
  gflops (total): 976.347
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00150401,0.938338,977.912,976.347

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05574
  gflops (total): 869.162
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.162

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.952442
  gflops (eval):  963.43
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.952442,963.43,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      468.071
  maximum absolute entry in einsum_ir solution: 468.071
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00141064
  time (eval):    0.928188
  gflops (eval):  988.605
  gflops (total): 987.105
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00141064,0.928188,988.605,987.105

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05589
  gflops (total): 869.041
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,869.041

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.948537
  gflops (eval):  967.397
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.948537,967.397,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      472.622
  maximum absolute entry in einsum_ir solution: 472.623
  maximum element-wise difference:              0.000259399
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  a,e,b,f
  d,f,c,e
  a,b,c,d
parsed contraction path: 0 1 
parsed dimension ids:
  a: 0
  b: 1
  c: 2
  d: 3
  e: 4
  f: 5
parsed dimension sizes:
  a: 96
  b: 84
  c: 84
  d: 96
  e: 84
  f: 84
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 4 4 4 
  string_dim_ids: 0 4 1 5 3 5 2 4 0 1 2 3 

*** benchmarking einsum_ir ***
[[3,5,2,4]->[2,5,4,3]],[[0,4,1,5]->[0,5,1,4]]->[0,1,2,3]
  #flops:         917611462656
  time (compile): 0.00138562
  time (eval):    0.924481
  gflops (eval):  992.569
  gflops (total): 991.084
CSV_DATA: einsum_ir,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0.00138562,0.924481,992.569,991.084

*** benchmarking at::einsum ***
  #flops:         917611462656
  time (total):   1.05664
  gflops (total): 868.426
CSV_DATA: at::einsum,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0,0,868.426

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 8064 8064 7056
  #flops:         917611462656
  time (eval):    0.946402
  gflops (eval):  969.579
CSV_DATA: at::matmul,"aebf,dfce->abcd","96,84,84,96,84,84","(0,1)",917611462656,0,0.946402,969.579,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      485.278
  maximum absolute entry in einsum_ir solution: 485.278
  maximum element-wise difference:              0.000274658
warning: einsum_ir solution is not close to at:einsum!
