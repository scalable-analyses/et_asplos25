parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142281
  time (eval):    0.00203389
  gflops (eval):  767.693
  gflops (total): 451.703
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142281,0.00203389,767.693,451.703

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00563496
  gflops (total): 277.091
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,277.091

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0025081
  gflops (eval):  622.543
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0025081,622.543,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.38701e+08
  maximum absolute entry in einsum_ir solution: 7.38701e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00151346
  time (eval):    0.00203337
  gflops (eval):  767.889
  gflops (total): 440.225
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00151346,0.00203337,767.889,440.225

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00386841
  gflops (total): 403.628
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,403.628

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202136
  gflops (eval):  772.451
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202136,772.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.23596e+08
  maximum absolute entry in einsum_ir solution: 7.23596e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014516
  time (eval):    0.00204235
  gflops (eval):  764.513
  gflops (total): 446.887
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014516,0.00204235,764.513,446.887

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00386051
  gflops (total): 404.454
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,404.454

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00246488
  gflops (eval):  633.459
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00246488,633.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.84924e+08
  maximum absolute entry in einsum_ir solution: 6.84925e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143508
  time (eval):    0.00203458
  gflops (eval):  767.432
  gflops (total): 450.016
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143508,0.00203458,767.432,450.016

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00546222
  gflops (total): 285.855
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,285.855

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00258865
  gflops (eval):  603.173
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00258865,603.173,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.30027e+08
  maximum absolute entry in einsum_ir solution: 8.30026e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143013
  time (eval):    0.00203323
  gflops (eval):  767.942
  gflops (total): 450.834
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143013,0.00203323,767.942,450.834

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00384648
  gflops (total): 405.93
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,405.93

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202264
  gflops (eval):  771.962
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202264,771.962,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.09177e+08
  maximum absolute entry in einsum_ir solution: 7.09177e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145164
  time (eval):    0.00204648
  gflops (eval):  762.97
  gflops (total): 446.354
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145164,0.00204648,762.97,446.354

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00600246
  gflops (total): 260.127
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,260.127

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00268573
  gflops (eval):  581.368
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00268573,581.368,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.71942e+08
  maximum absolute entry in einsum_ir solution: 7.71942e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145594
  time (eval):    0.00203473
  gflops (eval):  767.375
  gflops (total): 447.307
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145594,0.00203473,767.375,447.307

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00384528
  gflops (total): 406.056
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,406.056

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203659
  gflops (eval):  766.674
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203659,766.674,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.18338e+08
  maximum absolute entry in einsum_ir solution: 8.18338e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144229
  time (eval):    0.00202026
  gflops (eval):  772.872
  gflops (total): 450.94
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144229,0.00202026,772.872,450.94

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00552708
  gflops (total): 282.5
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,282.5

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00252884
  gflops (eval):  617.438
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00252884,617.438,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.79571e+08
  maximum absolute entry in einsum_ir solution: 7.79571e+08
  maximum element-wise difference:              496
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014463
  time (eval):    0.00202369
  gflops (eval):  771.562
  gflops (total): 449.973
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014463,0.00202369,771.562,449.973

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00568752
  gflops (total): 274.531
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,274.531

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0025085
  gflops (eval):  622.444
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0025085,622.444,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.79262e+08
  maximum absolute entry in einsum_ir solution: 6.79262e+08
  maximum element-wise difference:              436
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145007
  time (eval):    0.00202836
  gflops (eval):  769.785
  gflops (total): 448.881
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145007,0.00202836,769.785,448.881

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00551421
  gflops (total): 283.16
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,283.16

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00253309
  gflops (eval):  616.402
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00253309,616.402,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30173e+08
  maximum absolute entry in einsum_ir solution: 7.30173e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00169751
  time (eval):    0.00202496
  gflops (eval):  771.078
  gflops (total): 419.452
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00169751,0.00202496,771.078,419.452

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00383292
  gflops (total): 407.366
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,407.366

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203043
  gflops (eval):  769
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203043,769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.37475e+08
  maximum absolute entry in einsum_ir solution: 8.37475e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144069
  time (eval):    0.00203757
  gflops (eval):  766.306
  gflops (total): 448.903
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144069,0.00203757,766.306,448.903

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00601107
  gflops (total): 259.754
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,259.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00266452
  gflops (eval):  585.996
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00266452,585.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.89116e+08
  maximum absolute entry in einsum_ir solution: 6.89116e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144447
  time (eval):    0.00203745
  gflops (eval):  766.351
  gflops (total): 448.431
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144447,0.00203745,766.351,448.431

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00380028
  gflops (total): 410.864
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,410.864

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00200804
  gflops (eval):  777.575
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00200804,777.575,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.57011e+08
  maximum absolute entry in einsum_ir solution: 7.57011e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144907
  time (eval):    0.00203999
  gflops (eval):  765.397
  gflops (total): 447.513
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144907,0.00203999,765.397,447.513

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00377959
  gflops (total): 413.114
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,413.114

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201289
  gflops (eval):  775.701
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201289,775.701,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.49342e+08
  maximum absolute entry in einsum_ir solution: 9.49342e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145901
  time (eval):    0.00202247
  gflops (eval):  772.027
  gflops (total): 448.488
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145901,0.00202247,772.027,448.488

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00395939
  gflops (total): 394.354
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,394.354

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203848
  gflops (eval):  765.964
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203848,765.964,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.58761e+08
  maximum absolute entry in einsum_ir solution: 7.58761e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142292
  time (eval):    0.00203733
  gflops (eval):  766.396
  gflops (total): 451.239
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142292,0.00203733,766.396,451.239

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00567315
  gflops (total): 275.226
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,275.226

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00247573
  gflops (eval):  630.682
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00247573,630.682,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.2542e+08
  maximum absolute entry in einsum_ir solution: 8.2542e+08
  maximum element-wise difference:              443
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143884
  time (eval):    0.00203756
  gflops (eval):  766.31
  gflops (total): 449.143
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143884,0.00203756,766.31,449.143

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00385728
  gflops (total): 404.793
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,404.793

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203136
  gflops (eval):  768.648
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203136,768.648,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.7356e+08
  maximum absolute entry in einsum_ir solution: 7.7356e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014277
  time (eval):    0.00204734
  gflops (eval):  762.649
  gflops (total): 449.319
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014277,0.00204734,762.649,449.319

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00381738
  gflops (total): 409.024
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,409.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203295
  gflops (eval):  768.047
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203295,768.047,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.15875e+08
  maximum absolute entry in einsum_ir solution: 7.15875e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00146405
  time (eval):    0.00202622
  gflops (eval):  770.598
  gflops (total): 447.358
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00146405,0.00202622,770.598,447.358

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00387195
  gflops (total): 403.259
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,403.259

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00250246
  gflops (eval):  623.947
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00250246,623.947,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.46606e+08
  maximum absolute entry in einsum_ir solution: 7.46607e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143304
  time (eval):    0.00203782
  gflops (eval):  766.212
  gflops (total): 449.86
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143304,0.00203782,766.212,449.86

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00573993
  gflops (total): 272.024
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,272.024

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251862
  gflops (eval):  619.943
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251862,619.943,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.87198e+08
  maximum absolute entry in einsum_ir solution: 7.87198e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144539
  time (eval):    0.0020233
  gflops (eval):  771.711
  gflops (total): 450.142
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144539,0.0020233,771.711,450.142

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00382225
  gflops (total): 408.503
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,408.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0019928
  gflops (eval):  783.522
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0019928,783.522,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.25559e+08
  maximum absolute entry in einsum_ir solution: 7.25559e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143979
  time (eval):    0.00202394
  gflops (eval):  771.466
  gflops (total): 450.786
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143979,0.00202394,771.466,450.786

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00561202
  gflops (total): 278.224
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,278.224

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00245592
  gflops (eval):  635.771
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00245592,635.771,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.29776e+08
  maximum absolute entry in einsum_ir solution: 8.29776e+08
  maximum element-wise difference:              468
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144223
  time (eval):    0.00202201
  gflops (eval):  772.203
  gflops (total): 450.72
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144223,0.00202201,772.203,450.72

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00581115
  gflops (total): 268.69
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,268.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00249566
  gflops (eval):  625.647
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00249566,625.647,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.60922e+08
  maximum absolute entry in einsum_ir solution: 7.60922e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143147
  time (eval):    0.00202018
  gflops (eval):  772.902
  gflops (total): 452.364
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143147,0.00202018,772.902,452.364

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0037897
  gflops (total): 412.011
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,412.011

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202151
  gflops (eval):  772.394
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202151,772.394,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.22281e+08
  maximum absolute entry in einsum_ir solution: 7.22281e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142755
  time (eval):    0.00203952
  gflops (eval):  765.573
  gflops (total): 450.352
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142755,0.00203952,765.573,450.352

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00561892
  gflops (total): 277.882
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,277.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00257268
  gflops (eval):  606.915
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00257268,606.915,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.49181e+08
  maximum absolute entry in einsum_ir solution: 7.49181e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145876
  time (eval):    0.00200935
  gflops (eval):  777.068
  gflops (total): 450.217
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145876,0.00200935,777.068,450.217

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00391814
  gflops (total): 398.506
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,398.506

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0020272
  gflops (eval):  770.226
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0020272,770.226,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.47172e+08
  maximum absolute entry in einsum_ir solution: 7.47172e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00149587
  time (eval):    0.00202111
  gflops (eval):  772.547
  gflops (total): 443.961
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00149587,0.00202111,772.547,443.961

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00385964
  gflops (total): 404.546
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,404.546

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203688
  gflops (eval):  766.565
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203688,766.565,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.57769e+08
  maximum absolute entry in einsum_ir solution: 7.5777e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145634
  time (eval):    0.00202916
  gflops (eval):  769.482
  gflops (total): 447.971
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145634,0.00202916,769.482,447.971

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00386673
  gflops (total): 403.804
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,403.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201115
  gflops (eval):  776.372
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201115,776.372,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.51179e+08
  maximum absolute entry in einsum_ir solution: 7.51179e+08
  maximum element-wise difference:              456
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144499
  time (eval):    0.00202025
  gflops (eval):  772.875
  gflops (total): 450.59
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144499,0.00202025,772.875,450.59

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00562661
  gflops (total): 277.503
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,277.503

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0025748
  gflops (eval):  606.417
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0025748,606.417,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.04092e+08
  maximum absolute entry in einsum_ir solution: 8.04092e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145515
  time (eval):    0.00202344
  gflops (eval):  771.657
  gflops (total): 448.86
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145515,0.00202344,771.657,448.86

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00585821
  gflops (total): 266.532
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,266.532

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00250678
  gflops (eval):  622.871
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00250678,622.871,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.66874e+08
  maximum absolute entry in einsum_ir solution: 7.66874e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145942
  time (eval):    0.00202067
  gflops (eval):  772.715
  gflops (total): 448.667
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145942,0.00202067,772.715,448.667

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00381858
  gflops (total): 408.895
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,408.895

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0020158
  gflops (eval):  774.582
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0020158,774.582,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30352e+08
  maximum absolute entry in einsum_ir solution: 7.30352e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143497
  time (eval):    0.00202212
  gflops (eval):  772.161
  gflops (total): 451.652
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143497,0.00202212,772.161,451.652

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00382632
  gflops (total): 408.068
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,408.068

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201032
  gflops (eval):  776.693
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201032,776.693,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.70611e+08
  maximum absolute entry in einsum_ir solution: 7.70611e+08
  maximum element-wise difference:              412
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143468
  time (eval):    0.00204561
  gflops (eval):  763.294
  gflops (total): 448.641
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143468,0.00204561,763.294,448.641

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00569428
  gflops (total): 274.205
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,274.205

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00248115
  gflops (eval):  629.305
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00248115,629.305,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.3358e+08
  maximum absolute entry in einsum_ir solution: 7.3358e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143496
  time (eval):    0.00203738
  gflops (eval):  766.377
  gflops (total): 449.668
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143496,0.00203738,766.377,449.668

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00578626
  gflops (total): 269.846
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,269.846

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251253
  gflops (eval):  621.446
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251253,621.446,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.74494e+08
  maximum absolute entry in einsum_ir solution: 7.74494e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014305
  time (eval):    0.00202846
  gflops (eval):  769.747
  gflops (total): 451.408
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014305,0.00202846,769.747,451.408

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00390232
  gflops (total): 400.121
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,400.121

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201453
  gflops (eval):  775.07
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201453,775.07,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.39683e+08
  maximum absolute entry in einsum_ir solution: 7.39683e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144584
  time (eval):    0.00202298
  gflops (eval):  771.832
  gflops (total): 450.125
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144584,0.00202298,771.832,450.125

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0038747
  gflops (total): 402.973
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,402.973

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201472
  gflops (eval):  774.996
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201472,774.996,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.45222e+08
  maximum absolute entry in einsum_ir solution: 7.45222e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00160608
  time (eval):    0.00201787
  gflops (eval):  773.787
  gflops (total): 430.856
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00160608,0.00201787,773.787,430.856

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00385104
  gflops (total): 405.449
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,405.449

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203025
  gflops (eval):  769.069
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203025,769.069,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.51792e+08
  maximum absolute entry in einsum_ir solution: 7.51792e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143012
  time (eval):    0.00202499
  gflops (eval):  771.066
  gflops (total): 451.911
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143012,0.00202499,771.066,451.911

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00392754
  gflops (total): 397.552
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,397.552

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00204281
  gflops (eval):  764.34
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00204281,764.34,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.86851e+08
  maximum absolute entry in einsum_ir solution: 7.86851e+08
  maximum element-wise difference:              440
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144039
  time (eval):    0.00201036
  gflops (eval):  776.678
  gflops (total): 452.482
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144039,0.00201036,776.678,452.482

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00566037
  gflops (total): 275.848
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,275.848

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00247889
  gflops (eval):  629.879
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00247889,629.879,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.87893e+08
  maximum absolute entry in einsum_ir solution: 7.87893e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145171
  time (eval):    0.00202353
  gflops (eval):  771.623
  gflops (total): 449.293
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145171,0.00202353,771.623,449.293

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00382975
  gflops (total): 407.703
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,407.703

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00246719
  gflops (eval):  632.866
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00246719,632.866,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.85265e+08
  maximum absolute entry in einsum_ir solution: 6.85265e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142467
  time (eval):    0.00202277
  gflops (eval):  771.913
  gflops (total): 452.916
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142467,0.00202277,771.913,452.916

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00374038
  gflops (total): 417.444
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,417.444

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203869
  gflops (eval):  765.884
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203869,765.884,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.24025e+08
  maximum absolute entry in einsum_ir solution: 7.24025e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143767
  time (eval):    0.00203102
  gflops (eval):  768.777
  gflops (total): 450.141
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143767,0.00203102,768.777,450.141

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00561534
  gflops (total): 278.06
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,278.06

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00244991
  gflops (eval):  637.33
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00244991,637.33,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.90757e+08
  maximum absolute entry in einsum_ir solution: 6.90757e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014454
  time (eval):    0.00202627
  gflops (eval):  770.579
  gflops (total): 449.755
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014454,0.00202627,770.579,449.755

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00385937
  gflops (total): 404.574
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,404.574

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0020294
  gflops (eval):  769.391
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0020294,769.391,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.45626e+08
  maximum absolute entry in einsum_ir solution: 7.45626e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144965
  time (eval):    0.00202294
  gflops (eval):  771.848
  gflops (total): 449.636
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144965,0.00202294,771.848,449.636

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00388095
  gflops (total): 402.324
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,402.324

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00236658
  gflops (eval):  659.77
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00236658,659.77,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.75446e+08
  maximum absolute entry in einsum_ir solution: 7.75446e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143612
  time (eval):    0.00210096
  gflops (eval):  743.186
  gflops (total): 441.438
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143612,0.00210096,743.186,441.438

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00563298
  gflops (total): 277.189
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,277.189

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00247305
  gflops (eval):  631.366
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00247305,631.366,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.67186e+08
  maximum absolute entry in einsum_ir solution: 7.67186e+08
  maximum element-wise difference:              462
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014931
  time (eval):    0.00201449
  gflops (eval):  775.085
  gflops (total): 445.149
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014931,0.00201449,775.085,445.149

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00387349
  gflops (total): 403.099
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,403.099

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00204782
  gflops (eval):  762.471
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00204782,762.471,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.42152e+08
  maximum absolute entry in einsum_ir solution: 8.42152e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142818
  time (eval):    0.0020184
  gflops (eval):  773.584
  gflops (total): 453.029
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142818,0.0020184,773.584,453.029

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00582051
  gflops (total): 268.258
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,268.258

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00249922
  gflops (eval):  624.755
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00249922,624.755,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      9.19611e+08
  maximum absolute entry in einsum_ir solution: 9.19611e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142835
  time (eval):    0.00203629
  gflops (eval):  766.788
  gflops (total): 450.668
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142835,0.00203629,766.788,450.668

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00384598
  gflops (total): 405.982
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,405.982

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203253
  gflops (eval):  768.206
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203253,768.206,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.73436e+08
  maximum absolute entry in einsum_ir solution: 7.73436e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143473
  time (eval):    0.00202353
  gflops (eval):  771.623
  gflops (total): 451.499
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143473,0.00202353,771.623,451.499

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00386301
  gflops (total): 404.193
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,404.193

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203166
  gflops (eval):  768.535
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203166,768.535,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.18653e+08
  maximum absolute entry in einsum_ir solution: 8.18653e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143894
  time (eval):    0.00203674
  gflops (eval):  766.618
  gflops (total): 449.236
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143894,0.00203674,766.618,449.236

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00535423
  gflops (total): 291.62
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,291.62

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00244528
  gflops (eval):  638.536
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00244528,638.536,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.11973e+08
  maximum absolute entry in einsum_ir solution: 7.11973e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144295
  time (eval):    0.00203402
  gflops (eval):  767.643
  gflops (total): 449.069
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144295,0.00203402,767.643,449.069

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00388708
  gflops (total): 401.69
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,401.69

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00204949
  gflops (eval):  761.85
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00204949,761.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.05236e+08
  maximum absolute entry in einsum_ir solution: 7.05236e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143209
  time (eval):    0.00204422
  gflops (eval):  763.813
  gflops (total): 449.155
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143209,0.00204422,763.813,449.155

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00408616
  gflops (total): 382.12
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,382.12

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00213539
  gflops (eval):  731.2
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00213539,731.2,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.86384e+08
  maximum absolute entry in einsum_ir solution: 7.86384e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144131
  time (eval):    0.002034
  gflops (eval):  767.651
  gflops (total): 449.284
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144131,0.002034,767.651,449.284

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00381522
  gflops (total): 409.255
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,409.255

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201407
  gflops (eval):  775.247
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201407,775.247,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.89021e+08
  maximum absolute entry in einsum_ir solution: 6.89021e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014408
  time (eval):    0.00203753
  gflops (eval):  766.321
  gflops (total): 448.894
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014408,0.00203753,766.321,448.894

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00552418
  gflops (total): 282.649
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,282.649

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00253015
  gflops (eval):  617.118
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00253015,617.118,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.15486e+08
  maximum absolute entry in einsum_ir solution: 7.15486e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144214
  time (eval):    0.00202092
  gflops (eval):  772.619
  gflops (total): 450.873
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144214,0.00202092,772.619,450.873

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0039362
  gflops (total): 396.677
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,396.677

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0020524
  gflops (eval):  760.769
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0020524,760.769,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.70946e+08
  maximum absolute entry in einsum_ir solution: 7.70947e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143442
  time (eval):    0.00201051
  gflops (eval):  776.62
  gflops (total): 453.246
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143442,0.00201051,776.62,453.246

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0040002
  gflops (total): 390.331
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,390.331

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00212074
  gflops (eval):  736.254
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00212074,736.254,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.35612e+08
  maximum absolute entry in einsum_ir solution: 7.35612e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142276
  time (eval):    0.00203722
  gflops (eval):  766.438
  gflops (total): 451.275
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142276,0.00203722,766.438,451.275

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00556437
  gflops (total): 280.607
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,280.607

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0025279
  gflops (eval):  617.667
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0025279,617.667,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.70954e+08
  maximum absolute entry in einsum_ir solution: 8.70955e+08
  maximum element-wise difference:              456
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145656
  time (eval):    0.0020382
  gflops (eval):  766.069
  gflops (total): 446.783
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145656,0.0020382,766.069,446.783

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00545828
  gflops (total): 286.061
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,286.061

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00245827
  gflops (eval):  635.162
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00245827,635.162,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.21392e+08
  maximum absolute entry in einsum_ir solution: 8.21393e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00146302
  time (eval):    0.00202678
  gflops (eval):  770.385
  gflops (total): 447.418
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00146302,0.00202678,770.385,447.418

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00575222
  gflops (total): 271.443
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,271.443

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00249466
  gflops (eval):  625.897
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00249466,625.897,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.77084e+08
  maximum absolute entry in einsum_ir solution: 6.77084e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142061
  time (eval):    0.002016
  gflops (eval):  774.504
  gflops (total): 454.343
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142061,0.002016,774.504,454.343

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00380598
  gflops (total): 410.249
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,410.249

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201567
  gflops (eval):  774.632
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201567,774.632,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.90139e+08
  maximum absolute entry in einsum_ir solution: 8.9014e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143961
  time (eval):    0.00203718
  gflops (eval):  766.453
  gflops (total): 449.093
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143961,0.00203718,766.453,449.093

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0038012
  gflops (total): 410.765
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,410.765

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203553
  gflops (eval):  767.074
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203553,767.074,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.84907e+08
  maximum absolute entry in einsum_ir solution: 7.84908e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00169045
  time (eval):    0.00201107
  gflops (eval):  776.403
  gflops (total): 421.826
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00169045,0.00201107,776.403,421.826

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00557872
  gflops (total): 279.885
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,279.885

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00253892
  gflops (eval):  614.987
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00253892,614.987,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.11934e+08
  maximum absolute entry in einsum_ir solution: 7.11934e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00141934
  time (eval):    0.00203558
  gflops (eval):  767.055
  gflops (total): 451.936
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00141934,0.00203558,767.055,451.936

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00567725
  gflops (total): 275.027
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,275.027

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251896
  gflops (eval):  619.86
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251896,619.86,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.34008e+08
  maximum absolute entry in einsum_ir solution: 8.34008e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142444
  time (eval):    0.00204065
  gflops (eval):  765.15
  gflops (total): 450.609
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142444,0.00204065,765.15,450.609

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00390432
  gflops (total): 399.916
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,399.916

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201956
  gflops (eval):  773.14
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201956,773.14,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.11e+08
  maximum absolute entry in einsum_ir solution: 7.10999e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144363
  time (eval):    0.0020378
  gflops (eval):  766.219
  gflops (total): 448.494
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144363,0.0020378,766.219,448.494

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00572187
  gflops (total): 272.883
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,272.883

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0026221
  gflops (eval):  595.478
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0026221,595.478,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43948e+08
  maximum absolute entry in einsum_ir solution: 7.43948e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142707
  time (eval):    0.00202866
  gflops (eval):  769.671
  gflops (total): 451.83
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142707,0.00202866,769.671,451.83

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00570837
  gflops (total): 273.528
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,273.528

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00250207
  gflops (eval):  624.044
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00250207,624.044,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.00484e+08
  maximum absolute entry in einsum_ir solution: 7.00484e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00154051
  time (eval):    0.00204928
  gflops (eval):  761.927
  gflops (total): 434.956
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00154051,0.00204928,761.927,434.956

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00412763
  gflops (total): 378.28
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,378.28

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0021104
  gflops (eval):  739.862
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0021104,739.862,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.93462e+08
  maximum absolute entry in einsum_ir solution: 7.93462e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142108
  time (eval):    0.00202975
  gflops (eval):  769.258
  gflops (total): 452.471
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142108,0.00202975,769.258,452.471

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00423683
  gflops (total): 368.53
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,368.53

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00213049
  gflops (eval):  732.881
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00213049,732.881,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.5074e+08
  maximum absolute entry in einsum_ir solution: 7.5074e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00141557
  time (eval):    0.00202162
  gflops (eval):  772.352
  gflops (total): 454.267
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00141557,0.00202162,772.352,454.267

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00378982
  gflops (total): 411.998
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,411.998

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201858
  gflops (eval):  773.515
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201858,773.515,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.49397e+08
  maximum absolute entry in einsum_ir solution: 7.49397e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144419
  time (eval):    0.0020232
  gflops (eval):  771.749
  gflops (total): 450.31
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144419,0.0020232,771.749,450.31

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0041154
  gflops (total): 379.404
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,379.404

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.0021339
  gflops (eval):  731.711
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.0021339,731.711,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.18877e+08
  maximum absolute entry in einsum_ir solution: 7.18877e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142515
  time (eval):    0.00203267
  gflops (eval):  768.153
  gflops (total): 451.557
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142515,0.00203267,768.153,451.557

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00383003
  gflops (total): 407.673
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,407.673

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00204279
  gflops (eval):  764.348
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00204279,764.348,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.63815e+08
  maximum absolute entry in einsum_ir solution: 7.63815e+08
  maximum element-wise difference:              544
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00148626
  time (eval):    0.00201333
  gflops (eval):  775.532
  gflops (total): 446.167
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00148626,0.00201333,775.532,446.167

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00384326
  gflops (total): 406.27
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,406.27

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203992
  gflops (eval):  765.422
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203992,765.422,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      6.82406e+08
  maximum absolute entry in einsum_ir solution: 6.82405e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00170675
  time (eval):    0.00202394
  gflops (eval):  771.466
  gflops (total): 418.528
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00170675,0.00202394,771.466,418.528

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00387441
  gflops (total): 403.003
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,403.003

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202922
  gflops (eval):  769.459
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202922,769.459,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.98146e+08
  maximum absolute entry in einsum_ir solution: 7.98146e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142645
  time (eval):    0.00201824
  gflops (eval):  773.645
  gflops (total): 453.278
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142645,0.00201824,773.645,453.278

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0055802
  gflops (total): 279.811
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,279.811

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00253176
  gflops (eval):  616.726
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00253176,616.726,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.89743e+08
  maximum absolute entry in einsum_ir solution: 8.89743e+08
  maximum element-wise difference:              488
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143736
  time (eval):    0.00203103
  gflops (eval):  768.774
  gflops (total): 450.18
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143736,0.00203103,768.774,450.18

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00390569
  gflops (total): 399.776
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,399.776

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202245
  gflops (eval):  772.035
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202245,772.035,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.63768e+08
  maximum absolute entry in einsum_ir solution: 7.63769e+08
  maximum element-wise difference:              400
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142878
  time (eval):    0.00202846
  gflops (eval):  769.747
  gflops (total): 451.632
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142878,0.00202846,769.747,451.632

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0057658
  gflops (total): 270.804
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,270.804

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00246857
  gflops (eval):  632.512
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00246857,632.512,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.99501e+08
  maximum absolute entry in einsum_ir solution: 7.99501e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145023
  time (eval):    0.00201756
  gflops (eval):  773.906
  gflops (total): 450.258
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145023,0.00201756,773.906,450.258

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00383414
  gflops (total): 407.236
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,407.236

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203357
  gflops (eval):  767.813
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203357,767.813,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.59022e+08
  maximum absolute entry in einsum_ir solution: 7.59022e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142988
  time (eval):    0.00201444
  gflops (eval):  775.105
  gflops (total): 453.326
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142988,0.00201444,775.105,453.326

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00384802
  gflops (total): 405.767
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,405.767

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201343
  gflops (eval):  775.493
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201343,775.493,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.40757e+08
  maximum absolute entry in einsum_ir solution: 8.40756e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00168778
  time (eval):    0.00204108
  gflops (eval):  764.988
  gflops (total): 418.735
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00168778,0.00204108,764.988,418.735

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0056534
  gflops (total): 276.188
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,276.188

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00264267
  gflops (eval):  590.841
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00264267,590.841,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.16659e+08
  maximum absolute entry in einsum_ir solution: 7.16658e+08
  maximum element-wise difference:              424
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145853
  time (eval):    0.00204478
  gflops (eval):  763.604
  gflops (total): 445.693
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145853,0.00204478,763.604,445.693

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00551717
  gflops (total): 283.008
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,283.008

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00257431
  gflops (eval):  606.53
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00257431,606.53,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.75189e+08
  maximum absolute entry in einsum_ir solution: 7.75189e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00148661
  time (eval):    0.00202045
  gflops (eval):  772.799
  gflops (total): 445.217
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00148661,0.00202045,772.799,445.217

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00387272
  gflops (total): 403.179
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,403.179

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203078
  gflops (eval):  768.868
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203078,768.868,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.25913e+08
  maximum absolute entry in einsum_ir solution: 7.25913e+08
  maximum element-wise difference:              408
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144136
  time (eval):    0.00202416
  gflops (eval):  771.383
  gflops (total): 450.553
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144136,0.00202416,771.383,450.553

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00561893
  gflops (total): 277.882
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,277.882

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00254036
  gflops (eval):  614.638
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00254036,614.638,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.52378e+08
  maximum absolute entry in einsum_ir solution: 7.52378e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143513
  time (eval):    0.00202323
  gflops (eval):  771.737
  gflops (total): 451.486
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143513,0.00202323,771.737,451.486

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00553784
  gflops (total): 281.951
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,281.951

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251656
  gflops (eval):  620.451
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251656,620.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.72164e+08
  maximum absolute entry in einsum_ir solution: 7.72164e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142249
  time (eval):    0.00202648
  gflops (eval):  770.499
  gflops (total): 452.715
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142249,0.00202648,770.499,452.715

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00390276
  gflops (total): 400.076
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,400.076

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202711
  gflops (eval):  770.26
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202711,770.26,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.25724e+08
  maximum absolute entry in einsum_ir solution: 7.25724e+08
  maximum element-wise difference:              648
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143387
  time (eval):    0.00203747
  gflops (eval):  766.343
  gflops (total): 449.798
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143387,0.00203747,766.343,449.798

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00383734
  gflops (total): 406.896
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,406.896

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202604
  gflops (eval):  770.666
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202604,770.666,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.53344e+08
  maximum absolute entry in einsum_ir solution: 7.53344e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00146146
  time (eval):    0.00201836
  gflops (eval):  773.599
  gflops (total): 448.702
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00146146,0.00201836,773.599,448.702

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00535443
  gflops (total): 291.609
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,291.609

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251251
  gflops (eval):  621.451
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251251,621.451,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.29803e+08
  maximum absolute entry in einsum_ir solution: 8.29803e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143845
  time (eval):    0.00202602
  gflops (eval):  770.675
  gflops (total): 450.69
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143845,0.00202602,770.675,450.69

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00558053
  gflops (total): 279.794
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,279.794

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251326
  gflops (eval):  621.266
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251326,621.266,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.30457e+08
  maximum absolute entry in einsum_ir solution: 7.30457e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00146395
  time (eval):    0.00201943
  gflops (eval):  773.189
  gflops (total): 448.243
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00146395,0.00201943,773.189,448.243

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00552688
  gflops (total): 282.51
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,282.51

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00248834
  gflops (eval):  627.487
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00248834,627.487,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.73948e+08
  maximum absolute entry in einsum_ir solution: 8.73948e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145532
  time (eval):    0.00202136
  gflops (eval):  772.451
  gflops (total): 449.107
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145532,0.00202136,772.451,449.107

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00555172
  gflops (total): 281.246
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,281.246

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00255348
  gflops (eval):  611.48
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00255348,611.48,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.84205e+08
  maximum absolute entry in einsum_ir solution: 7.84205e+08
  maximum element-wise difference:              432
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143761
  time (eval):    0.00204561
  gflops (eval):  763.294
  gflops (total): 448.264
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143761,0.00204561,763.294,448.264

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0039711
  gflops (total): 393.191
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,393.191

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00246666
  gflops (eval):  633.002
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00246666,633.002,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.43656e+08
  maximum absolute entry in einsum_ir solution: 7.43657e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143747
  time (eval):    0.00203776
  gflops (eval):  766.235
  gflops (total): 449.294
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143747,0.00203776,766.235,449.294

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.0038013
  gflops (total): 410.754
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,410.754

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00201329
  gflops (eval):  775.547
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00201329,775.547,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.47549e+08
  maximum absolute entry in einsum_ir solution: 7.47549e+08
  maximum element-wise difference:              384
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00143821
  time (eval):    0.00202449
  gflops (eval):  771.257
  gflops (total): 450.92
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00143821,0.00202449,771.257,450.92

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00383657
  gflops (total): 406.978
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,406.978

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202892
  gflops (eval):  769.573
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202892,769.573,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.39161e+08
  maximum absolute entry in einsum_ir solution: 7.39161e+08
  maximum element-wise difference:              512
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00178596
  time (eval):    0.00202971
  gflops (eval):  769.274
  gflops (total): 409.207
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00178596,0.00202971,769.274,409.207

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00558568
  gflops (total): 279.536
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,279.536

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00250836
  gflops (eval):  622.479
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00250836,622.479,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.83242e+08
  maximum absolute entry in einsum_ir solution: 7.83242e+08
  maximum element-wise difference:              520
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00148337
  time (eval):    0.00201349
  gflops (eval):  775.47
  gflops (total): 446.515
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00148337,0.00201349,775.47,446.515

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00544229
  gflops (total): 286.901
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,286.901

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00253478
  gflops (eval):  615.991
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00253478,615.991,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.5826e+08
  maximum absolute entry in einsum_ir solution: 7.5826e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00171969
  time (eval):    0.00201609
  gflops (eval):  774.47
  gflops (total): 417.959
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00171969,0.00201609,774.47,417.959

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00383949
  gflops (total): 406.669
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,406.669

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00203055
  gflops (eval):  768.955
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00203055,768.955,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.84087e+08
  maximum absolute entry in einsum_ir solution: 7.84087e+08
  maximum element-wise difference:              504
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00149618
  time (eval):    0.00201628
  gflops (eval):  774.397
  gflops (total): 444.532
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00149618,0.00201628,774.397,444.532

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00560068
  gflops (total): 278.787
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,278.787

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00251494
  gflops (eval):  620.85
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00251494,620.85,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.46841e+08
  maximum absolute entry in einsum_ir solution: 7.46841e+08
  maximum element-wise difference:              480
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00142951
  time (eval):    0.00202124
  gflops (eval):  772.497
  gflops (total): 452.482
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00142951,0.00202124,772.497,452.482

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00391197
  gflops (total): 399.134
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,399.134

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00200559
  gflops (eval):  778.524
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00200559,778.524,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.77977e+08
  maximum absolute entry in einsum_ir solution: 7.77977e+08
  maximum element-wise difference:              464
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.0014366
  time (eval):    0.00202467
  gflops (eval):  771.188
  gflops (total): 451.106
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.0014366,0.00202467,771.188,451.106

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00381596
  gflops (total): 409.176
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,409.176

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00202895
  gflops (eval):  769.561
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00202895,769.561,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      8.30844e+08
  maximum absolute entry in einsum_ir solution: 8.30844e+08
  maximum element-wise difference:              499
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00145229
  time (eval):    0.00201231
  gflops (eval):  775.925
  gflops (total): 450.673
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00145229,0.00201231,775.925,450.673

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00567512
  gflops (total): 275.131
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,275.131

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00250479
  gflops (eval):  623.367
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00250479,623.367,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.94947e+08
  maximum absolute entry in einsum_ir solution: 7.94947e+08
  maximum element-wise difference:              448
warning: einsum_ir solution is not close to at:einsum!
parsed tensors:
  B,a,b,c,d
  a,i,j
  b,i,k
  c,k,l
  d,l,m
  e,j,p
  f,o,p
  g,n,o
  h,m,n
  B,e,f,g,h
parsed contraction path: 1 5 4 5 1 2 1 2 1 2 1 2 1 2 0 1 
parsed dimension ids:
  B: 0
  a: 1
  b: 2
  c: 3
  d: 4
  e: 5
  f: 6
  g: 7
  h: 8
  i: 9
  j: 10
  k: 11
  l: 12
  m: 13
  n: 14
  o: 15
  p: 16
parsed dimension sizes:
  B: 128
  a: 4
  b: 7
  c: 4
  d: 7
  e: 3
  f: 4
  g: 5
  h: 5
  i: 50
  j: 50
  k: 50
  l: 50
  m: 50
  n: 50
  o: 50
  p: 50
ctype: REAL_ONLY
dtype: FP32
store and lock: 0
print_tree: 1
assembled einsum_ir data structures
  string_num_dims: 5 3 3 3 3 3 3 3 3 5 
  string_dim_ids: 0 1 2 3 4 1 9 10 2 9 11 3 11 12 4 12 13 5 10 16 6 15 16 7 14 15 8 13 14 0 5 6 7 8 

*** benchmarking einsum_ir ***
[[[[[8,13,14]->[13,14,8]],[4,12,13]->[4,12,14,8]],[[3,11,12],[2,9,11]->[3,2,9,12]]->[3,2,4,9,14,8]],[[[[7,14,15]->[15,7,14]],[[6,15,16]->[6,16,15]]->[6,16,7,14]],[[[5,10,16]->[10,5,16]],[1,9,10]->[1,9,5,16]]->[1,9,5,6,7,14]]->[1,3,2,4,5,6,7,8]],[[0,1,2,3,4]->[1,0,3,2,4]]->[0,5,6,7,8]
  #flops:         1561400100
  time (compile): 0.00144006
  time (eval):    0.00204724
  gflops (eval):  762.686
  gflops (total): 447.739
CSV_DATA: einsum_ir,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0.00144006,0.00204724,762.686,447.739

*** benchmarking at::einsum ***
  #flops:         1561400100
  time (total):   0.00576443
  gflops (total): 270.868
CSV_DATA: at::einsum,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0,0,270.868

*** benchmarking at::matmul ***
  C M N K for the binary contractions:
    #0: 1 150 200 50
    #1: 1 250 200 50
    #2: 1 200 350 50
    #3: 1 250 350 50
    #4: 1 1000 600 50
    #5: 1 1750 1400 50
    #6: 1 980 240 2500
    #7: 1 300 128 784
  #flops:         1561400100
  time (eval):    0.00246574
  gflops (eval):  633.238
CSV_DATA: at::matmul,"Babcd,aij,bik,ckl,dlm,ejp,fop,gno,hmn->Befgh","128,4,7,4,7,3,4,5,5,50,50,50,50,50,50,50,50","(1,5),(4,5),(1,2),(1,2),(1,2),(1,2),(1,2),(0,1)",1561400100,0,0.00246574,633.238,0

*** comparing solution ***:
  maximum absolute entry in ATen solution:      7.21029e+08
  maximum absolute entry in einsum_ir solution: 7.21028e+08
  maximum element-wise difference:              416
warning: einsum_ir solution is not close to at:einsum!
